var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","nodrop","result","NoDrop","scopeguard","always","into_inner","try_from","try_into","borrow","borrow_mut","type_id","should_run","formatter","deref_mut","Strategy","ScopeGuard","UnicodeXID","Returns the character's displayed width in columns, or…","width_cjk","Returns the string's displayed width in columns.","UnicodeWidthChar","UnicodeWidthStr","UNICODE_VERSION","lazy_static","either","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Returns left value or computes it from a closure","Factor out a homogeneous type from an either of pairs.","into_iter","ordering","option","integer","typeid","PointerExt","Checked cast function","to_owned","clone_into","handle","shared","Do a compare-and-set from a `Shared` to an `Owned` pointer…","crossbeam::mem","cachepadded","crossbeam","is_empty","Check if this queue is empty.","Create a new, empty queue.","try_pop","Attempt to dequeue from the front.","crossbeam::sync","crossbeam::mem::epoch","crossbeam::sync::chase_lev","CachePadded","AtomicOption","TreiberStack","SegQueue","ScopedJoinHandle","hyphensplitter","initial_indent","wrapper","subsequent_indent","break_words","string","wrap_iter","Lazily wrap a line of text at `self.width` characters.…","intowrapiter","WordSplitter","HyphenSplitter","NoHyphenation","IntoWrapIter","WrapIter","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","fetch_or","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","crossbeam_utils","Pads and aligns a value to the length of a cache line.","unparker","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedjoinhandle","scopedthreadbuilder","thread","crossbeam_utils::atomic","crossbeam_utils::sync","to_string","crossbeam_utils::thread","waitgroup","atomiccell","default","shardedlock","AtomicCell","AtomicConsume","ShardedLock","WaitGroup","ScopedThreadBuilder","ShardedLockReadGuard","ShardedLockWriteGuard","capacityerror","utf8error","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push `element` to the end of the vector.","Insert `element` at position `index`.","Remove the element at `index` and swap the last element…","Remove the element at `index` and shift down the following…","arrayvec","partial_cmp","size_hint","next_back","intoiterator","arraystring","clone_from","Start index (inclusive)","End index (exclusive)","ArrayString","CapacityError","RangeArgument","Reads an unsigned n-bytes integer from `buf`.","Writes an unsigned integer `n` to `buf` using only `nbytes`.","Reads a signed n-bytes integer from `buf`.","Writes a signed integer `n` to `buf` using only `nbytes`.","Reads IEEE754 single-precision (4 bytes) floating point…","DEPRECATED.","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u16","read_u32","read_u64","bigendian","littleendian","ByteOrder","BigEndian","LittleEndian","IntoIter","proc_macro2","tokenstream","delimiter","set_span","Creates a new suffixed integer literal with the specified…","literal","Creates a new unsuffixed integer literal with the…","proc_macro2::token_stream","intoiter","tokentree","from_iter","TokenTree","Delimiter","TokenStream","This is a cheap operation; you don't need to worry about…","Print a floating point number into this buffer and return…","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","interleave","enumerate","Iterate `i` and `j` in lock step.","An iterator adaptor that merges the two base iterators in…","Format all iterator elements lazily, separated by `sep`.","An iterator which iterates two other iterators…","itertools","eitherorboth","itertools::structs","An iterator adaptor to insert a particular value between…","intersperse","Create an iterator which iterates over both this and the…","A “meta iterator adaptor”. Its closure receives a…","Return an iterator adaptor that merges the two base…","merge_join_by","mergejoinby","Return an iterator adaptor that iterates over the…","positions","Combine all an iterator's elements into one element by…","Format all iterator elements, separated by `sep`.","minmaxresult","Return the minimum and maximum element of an iterator, as…","peeking_next","foldwhile","interleaveshortest","batching","whilesome","position","ziplongest","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","map_right","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","left_and_then","right_and_then","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Return right value or given value","right_or_default","Return right or a default","right_or_else","factor_first","factor_second","Extract the value of an either over two equivalent types.","MinMaxResult","EitherOrBoth","FoldWhile","PeekingNext","Itertools","Interleave","InterleaveShortest","MapResults","TakeWhileRef","WhileSome","TupleCombinations","Positions","ConsTuples","FormatWith","Intersperse","MergeJoinBy","PeekingTakeWhile","ProcessResults","RepeatCall","TupleBuffer","TupleWindows","WithPosition","ZipLongest","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","truncate","statvfs64","if_nameindex","ipv6_mreq","itimerval","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","siginfo_t","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","in6_addr","sigset_t","timezone","fpos64_t","multipeek","Create an iterator that merges elements of the contained…","An iterator adaptor that iterates over the cartesian…","An iterator adaptor that merges an abitrary number of base…","An iterator adapter to filter out duplicate elements.","put_back","kmerge_by","Return an iterator adaptor that flattens an iterator of…","Return an iterator adaptor that filters out elements that…","combinations","Combine all iterator elements into one String, seperated…","Sort all iterator elements into a new iterator in…","multiproduct","MultiPeek","MultiProduct","Combinations","IntoChunks","The full path that this entry represents.","metadata","filter_entry","Yields only entries which satisfy the given predicate and…","filterentry","skip_current_dir","Skips the current directory.","Returns the underlying `d_ino` field in the contained…","Advances the iterator and returns the next value.","direntry","description","DirEntryExt","FilterEntry","dataframe","Get selected column by using label name","element","duck::types","duck::element","duck::dataframe","duck::series","contains","get_dummies","DataTypes","DataFrame","DataFrameImpl","DataFrameScienceImpl","SeriesImpl","ByteClass","A DFA that shrinks its alphabet to a set of equivalence…","memory_usage","Returns the memory usage, in bytes, of this DFA.","from_bytes","sparsedfa","Standard","Premultiplied","PremultipliedByteClass","A dense table-based deterministic finite automaton (DFA).","A standard DFA that does not use premultiplication or byte…","A DFA that premultiplies all of its state identifiers in…","The default configuration of a DFA, which uses byte…","regex_automata","SparseDFA","A sparse table-based deterministic finite automaton (DFA).","A standard DFA that does not use byte classes.","Returns true if and only if the given identifier…","shortest_match","Returns the first position at which a match is found.","is_match_at","Returns the same as `is_match`, but starts the search at…","shortest_match_at","Returns the same as `shortest_match`, but starts the…","Returns the same as `find`, but starts the search at the…","regex_automata::dense","regex_automata::sparse","start_state","is_match_state","is_dead_state","is_match_or_dead_state","is_anchored","next_state","next_state_unchecked","rfind_at","densedfa","byteclass","is_match","Returns true if and only if the given bytes match this DFA.","Returns the end offset of the longest match. If no match…","Returns the start offset of the longest match in reverse,…","Returns the same as `rfind`, but starts the search at the…","DenseDFA","pusherror","capacity","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","segqueue","PushError","ArrayQueue","For use by `ToTokens` implementations.","into_token_stream","Convert `self` directly into a `TokenStream` object.","TokenStreamExt","getrandom","nonzerou32","versionerror","properties","criterion_plot","Properties","criterion_plot::curve","criterion_plot::curve::Curve","X coordinate of the data points","Y coordinate of the data points","criterion_plot::errorbar","criterion_plot::errorbar::ErrorBar","X coordinate of the left end of the error bar","Y coordinate of the right end of the error bar","Y coordinate of the bottom of the error bar","Y coordinate of the top of the error bar","Center of the figure","criterion_plot::axis","criterion_plot::candlestick","criterion_plot::filledcurve","criterion_plot::grid","criterion_plot::key","configure","filledcurve","Sets the line color","Sets the legend label","Changes the line type","Changes the width of the line","linewidth","linetype","Changes the size of the points","pointsize","Changes the point type","pointtype","justification","scalefactor","LineWidth","PointSize","TicLabels","ScaleFactor","PointType","VersionError","Candlesticks","FilledCurve","Horizontal","Justification","Configure","Position","version","partialord","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","from_usize","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","Creates a new iterator that yields all positions of needle…","A wrapper for generating floating point numbers uniformly…","rand::distributions","jitterrng","timererror","ChaChaRng","A random number generator that uses the ChaCha20 algorithm…","A random number generator that uses the ISAAC algorithm[1].","Isaac64Rng","A random number generator that uses ISAAC-64[1], the…","new_unseeded","xorshiftrng","samplerange","rand::distributions::range","rand::distributions::gamma","rand::distributions::normal","rand::distributions::exponential","rand::jitter","rand::read","rand::reseeding","ind_sample","chacharng","isaac64rng","fill_bytes","next_u32","rand::os","next_u64","from_seed","reseedingrng","isaacrng","Create an ISAAC random number generator with a seed. This…","chisquared","standardnormal","lognormal","threadrng","reseedwithdefault","SampleRange","ChiSquared","StandardNormal","LogNormal","IndependentSample","RandSample","WeightedChoice","TimerError","JitterRng","ReseedingRng","IsaacRng","XorShiftRng","SeedableRng","Generator","AsciiGenerator","ThreadRng","ReseedWithDefault","An iterator for getting multiple values out of an argument…","AllowLeadingHyphen","NextLineHelp","Occurs when the user provides an unrecognized…","Sets a string describing what the program does. This will…","Adds additional help information to be displayed in…","Sets a string of the version number to be displayed when…","appsettings","Prints the full help message to [`io::stdout()`] using a…","clapresult","Writes the full help message to the user to a…","Writes the version message to the user to a [`io::Write`]…","Generate a completions file for a specified shell at…","argmatches","visible_alias","visible_aliases","Specifies that if the value is not passed in as an…","display_order","argsettings","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…","subcommand","with_name","requires_all","Sets the requirement rules of this group. This is not to…","conflicts_with","conflicts_with_all","Convenience macro getting a typed value `T` where `T`…","Convenience macro getting a typed value [`Vec<T>`] where…","osvalues","errorkind","arggroup","from_str","ArgSettings","AppSettings","ErrorKind","ArgMatches","SubCommand","INTERNAL_START","Codes below this point represent OS Errors (i.e. positive…","CUSTOM_START","Codes at or above this point can be used by users to…","raw_os_error","Extract the raw OS error code (if this error came from the…","A wrapper type implementing [`RngCore`] for some type…","The core part of the RNG, implementing the `generate`…","Create a new `BlockRng` from an existing RNG implementing…","Get the index into the result buffer.","Reset the number of available results. This will force a…","generate_and_set","Generate a new set of results immediately, setting the…","rand_core","Implement `fill_bytes` by reading chunks from the output…","Fill `dest` with random data.","rand_core::block","try_fill_bytes","seed_from_u64","from_rng","blockrng64","BlockRng64","BlockRngCore","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","InputEmpty","The caller provided input was exhausted before the end of…","The end of a field was found.","record_end","Whether this was the last field in a record or not.","csv_core","All CSV data has been read.","OutputFull","The caller provided output buffer was filled before an…","The end of a record was found.","readerbuilder","terminator","writerbuilder","double_quote","quotestyle","readfieldresult","readfieldnocopyresult","readrecordresult","readrecordnocopyresult","writeresult","ReadFieldNoCopyResult","ReadFieldResult","ReadRecordNoCopyResult","ReadRecordResult","WriteResult","Terminator","QuoteStyle","ReaderBuilder","WriterBuilder","complex","parsecomplexerror","add_assign","sub_assign","mul_assign","div_assign","rem_assign","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","mul_add_assign","ParseComplexError","from_isize","from_i128","from_u128","toprimitive","from_str_radix","to_usize","A random number generator that retrieves randomness…","Sample values uniformly between two bounds.","The Gamma distribution `Gamma(shape, scale)` distribution.","The chi-squared distribution `χ²(k)`, where `k` is the…","The Fisher F distribution `F(m, n)`.","The Student t distribution, `t(nu)`, where `nu` is the…","The normal distribution `N(mean, std_dev**2)`.","The log-normal distribution `ln N(mean, std_dev**2)`.","The exponential distribution `Exp(lambda)`.","rand::isaac","rand::chacha","randsample","StudentT","Interface to the random number generator of the operating…","A random number generator that retrieves randomness from…","Create a new `OsRng`.","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","into_owned","Takes ownership of the pointee.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","is_pinned","collector","Stores a function so that it can be executed at some point…","into_usize","Returns a new pointer pointing to the tagged pointer `data`.","CompareAndSetError","Collector","LocalHandle","CompareAndSetOrdering","load_consume","A word of Rust code, which may be a keyword or legal…","paren_token","pub_token","bracket_token","colon_token","eq_token","lifetimes","Returned by `Generics::split_for_impl`.","brace_token","semi_token","bang_token","const_token","lifetime","mutability","lt_token","gt_token","A structured list within an attribute, like `derive(Copy,…","A name-value pair within an attribute, like `feature =…","Named fields of a struct or struct variant such as `Point…","Unnamed fields of a tuple struct or tuple variant such as…","A public visibility level: `pub`.","A crate-level visibility: `crate`.","A visibility level restricted to some path: `pub(self)` or…","A box expression: `box f`.","A placement expression: `place <- value`.","A slice literal expression: `[a, b, c, d]`.","A function call expression: `invoke(a, b)`.","A method call expression: `x.foo::<T>(a, b)`.","A tuple expression: `(a, b, c, d)`.","A binary operation: `a + b`, `a * b`.","A unary operation: `!x`, `*x`.","A literal in place of an expression: `1`, `\"foo\"`.","A cast expression: `foo as f64`.","A type ascription expression: `foo: f64`.","A `let` guard: `let Some(x) = opt`.","An `if` expression with an optional `else` block: `if expr…","A while loop: `while expr { ... }`.","A for loop: `for pat in expr { ... }`.","Conditionless loop: `loop { ... }`.","A `match` expression: `match n { Some(n) => {}, None => {}…","A closure expression: `|a, b| a + b`.","An unsafe block: `unsafe { ... }`.","A blocked scope: `{ ... }`.","An assignment expression: `a = compute()`.","A compound assignment expression: `counter += 1`.","Access of a named struct field (`obj.k`) or unnamed tuple…","A square bracketed indexing expression: `vector[2]`.","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","A path like `std::mem::replace` possibly containing…","A referencing operation: `&a` or `&mut a`.","A `break`, with an optional label to break and an optional…","A `continue`, with an optional label.","A `return`, with an optional value to be returned.","A macro invocation expression: `format!(\"{}\", q)`.","A struct literal expression: `Point { x: 1, y: 1 }`.","An array literal constructed from one repeated element:…","A parenthesized expression: `(a + b)`.","An expression contained within invisible delimiters.","A try-expression: `expr?`.","An async block: `async { ... }`.","A try block: `try { ... }`.","A yield expression: `yield expr`.","Tokens in expression position not interpreted by Syn.","A generic type parameter: `T: Into<String>`.","A lifetime definition: `'a: 'b + 'c + 'd`.","A const generic parameter: `const LENGTH: usize`.","Lifetime","A type predicate in a `where` clause: `for<'c> Foo<'c>:…","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","An equality predicate in a `where` clause (unsupported).","A UTF-8 string literal: `\"foo\"`.","A byte string literal: `b\"foo\"`.","A byte literal: `b'f'`.","A character literal: `'a'`.","An integer literal: `1` or `1u16`.","A floating point literal: `1f64` or `1.0e10f64`.","A boolean literal: `true` or `false`.","A raw token literal not interpreted by Syn, possibly…","A struct input to a `proc_macro_derive` macro.","An enum input to a `proc_macro_derive` macro.","A tagged union input to a `proc_macro_derive` macro.","A dynamically sized slice type: `[T]`.","A fixed size array type: `[T; n]`.","A raw pointer type: `*const T` or `*mut T`.","Reference","A reference type: `&'a T` or `&'a mut T`.","A bare function type: `fn(usize) -> bool`.","The never type: `!`.","A tuple type: `(A, B, C, String)`.","A path like `std::slice::Iter`, optionally qualified with…","A trait object type `Bound1 + Bound2 + Bound3` where…","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…","A parenthesized type equivalent to the inner type.","A type contained within invisible delimiters.","Indication that a type should be inferred by the compiler:…","A macro in the type position.","Verbatim","Tokens in type position not interpreted by Syn.","Constraint","An associated type bound: `Iterator<Item: Display>`.","Continue","surround","parsestream","intsuffix","floatsuffix","Parse the tokens within the macro invocation's delimiters…","without_plus","Creates a `TokenBuffer` containing all the tokens from the…","tokenbuffer","token_stream","Punctuated","punctuated","Returns an iterator over the contents of this sequence as…","Appends a syntax tree node onto the end of this punctuated…","A trait that can provide the `Span` of the complete…","whereclause","Syntax tree traversal to walk a shared borrow of a syntax…","visit_abi","visit_angle_bracketed_generic_arguments","anglebracketedgenericarguments","visit_attr_style","attrstyle","visit_attribute","attribute","visit_bare_fn_arg","barefnarg","visit_bare_fn_arg_name","barefnargname","visit_bin_op","visit_binding","visit_bound_lifetimes","boundlifetimes","visit_const_param","constparam","visit_constraint","constraint","visit_data","visit_data_enum","visit_data_struct","datastruct","visit_data_union","dataunion","visit_derive_input","deriveinput","visit_expr","visit_expr_binary","exprbinary","visit_expr_call","visit_expr_cast","visit_expr_field","exprfield","visit_expr_index","exprindex","visit_expr_lit","visit_expr_paren","exprparen","visit_expr_path","visit_expr_unary","exprunary","visit_expr_verbatim","exprverbatim","visit_field","visit_fields","visit_fields_named","fieldsnamed","visit_fields_unnamed","fieldsunnamed","visit_generic_argument","genericargument","visit_generic_param","genericparam","visit_generics","visit_index","visit_lifetime","visit_lifetime_def","lifetimedef","visit_lit_bool","visit_lit_byte","visit_lit_byte_str","visit_lit_char","visit_lit_float","visit_lit_int","visit_lit_str","visit_lit_verbatim","litverbatim","visit_macro","visit_macro_delimiter","macrodelimiter","visit_member","visit_meta_list","visit_meta_name_value","metanamevalue","visit_nested_meta","visit_parenthesized_generic_arguments","parenthesizedgenericarguments","visit_path_arguments","patharguments","visit_path_segment","pathsegment","visit_predicate_eq","predicateeq","visit_predicate_lifetime","predicatelifetime","visit_predicate_type","predicatetype","visit_qself","visit_return_type","visit_trait_bound","visit_trait_bound_modifier","traitboundmodifier","visit_type_array","visit_type_bare_fn","visit_type_group","visit_type_impl_trait","typeimpltrait","visit_type_infer","visit_type_macro","visit_type_never","visit_type_param","visit_type_param_bound","typeparambound","visit_type_paren","visit_type_path","visit_type_ptr","visit_type_reference","typereference","visit_type_slice","visit_type_trait_object","typetraitobject","visit_type_tuple","visit_type_verbatim","typeverbatim","visit_un_op","visit_variant","visit_vis_crate","visit_vis_public","visit_vis_restricted","visrestricted","visit_visibility","visit_where_clause","visit_where_predicate","wherepredicate","visit_ident","Error returned when a Syn parser cannot parse the input…","Parse a proc-macro2 token stream into the chosen syntax…","Parse tokens of source code into the chosen syntax tree…","Parse a string of Rust code into the chosen syntax tree…","parse_terminated","Parses zero or more occurrences of `T` separated by…","Triggers an error at the current position of the parse…","The result of a Syn parser.","syn::buffer","syn::punctuated","syn::parse","syn::token","nestedmeta","visibility","traitbound","litbytestr","typebarefn","returntype","vispublic","exprinplace","exprmethodcall","exprforloop","exprclosure","exprassignop","exprreference","exprcontinue","exprtryblock","typeparam","typeslice","typearray","typenever","typetuple","typeparen","typegroup","typeinfer","typemacro","to_tokens","Creates a new `Ident` with the given `string` as well as…","Returns the span of this `Ident`.","Configures the span of this `Ident`, possibly changing its…","visit_meta","visit_path","visit_type","visit_span","Looks at the next token in the parse stream to determine…","MetaNameValue","FieldsNamed","FieldsUnnamed","VisRestricted","ExprVerbatim","BoundLifetimes","LifetimeDef","PredicateEq","PredicateLifetime","PredicateType","WhereClause","LitVerbatim","DeriveInput","TypeImplTrait","TypeReference","TypeTraitObject","TypeVerbatim","AngleBracketedGenericArguments","ParenthesizedGenericArguments","PathSegment","GenericParam","TraitBoundModifier","TypeParamBound","WherePredicate","FloatSuffix","MacroDelimiter","BareFnArgName","GenericArgument","PathArguments","Existential","TypeGenerics","TokenBuffer","Speculative","ParseBuffer","ExprAssignOp","ExprClosure","ExprContinue","ExprForLoop","ExprInPlace","ExprMethodCall","ExprReference","ExprTryBlock","ImplGenerics","Jump forward, equivalently to 2^64 calls to `next_u32()`.","Jump forward, equivalently to 2^128 calls to `next_u64()`.","Jump forward, equivalently to 2^192 calls to `next_u64()`.","Jump forward, equivalently to 2^256 calls to `next_u64()`.","Jump forward, equivalently to 2^64 calls to `next_u64()`.","long_jump","Jump forward, equivalently to 2^96 calls to `next_u64()`.","splitmix64","xoshiro128starstar","xoshiro128plus","xoshiro256starstar","xoshiro256plus","xoshiro512starstar","xoshiro512plus","xoroshiro128plus","xoroshiro128starstar","xoroshiro64starstar","xoroshiro64star","Xoshiro128StarStar","Xoshiro128Plus","Xoshiro256StarStar","Xoshiro256Plus","Xoshiro512StarStar","Xoshiro512Plus","Xoroshiro128Plus","Xoroshiro128StarStar","Xoroshiro64StarStar","Xoroshiro64Star","rangeinclusive","rangestepinclusive","RangeInclusive","RangeStepInclusive","Check for remaining elements after passing a…","deserialize","Hint that the `Deserialize` type is expecting a string…","Hint that the `Deserialize` type is expecting a byte array…","Hint that the `Deserialize` type is expecting a sequence…","The error type that can be returned if some error occurs…","This returns `Ok(Some(value))` for the next value in the…","This returns `Ok(Some(key))` for the next key in the map,…","This returns a `Ok(value)` for the next value in the map.","This returns `Ok(Some((key, value)))` for the next…","`variant` is called to identify which variant to…","Called when deserializing a variant with a single value.","Deserializer","is_human_readable","SerializeSeq","SerializeTuple","Must match the `Ok` type of our `Serializer`.","Must match the `Error` type of our `Serializer`.","serialize_element","SerializeTupleStruct","SerializeTupleVariant","serialize_field","SerializeMap","SerializeStruct","SerializeStructVariant","Deserialize","A data structure that can be deserialized from any data…","Deserialize this value from the given Serde deserializer.","A data format that can deserialize any data structure…","deserialize_any","Require the `Deserializer` to figure out how to drive the…","deserialize_bool","Hint that the `Deserialize` type is expecting a `bool`…","deserialize_i8","Hint that the `Deserialize` type is expecting an `i8` value.","deserialize_i16","Hint that the `Deserialize` type is expecting an `i16`…","deserialize_i32","Hint that the `Deserialize` type is expecting an `i32`…","deserialize_i64","Hint that the `Deserialize` type is expecting an `i64`…","deserialize_i128","Hint that the `Deserialize` type is expecting an `i128`…","deserialize_u8","Hint that the `Deserialize` type is expecting a `u8` value.","deserialize_u16","Hint that the `Deserialize` type is expecting a `u16` value.","deserialize_u32","Hint that the `Deserialize` type is expecting a `u32` value.","deserialize_u64","Hint that the `Deserialize` type is expecting a `u64` value.","deserialize_u128","Hint that the `Deserialize` type is expecting an `u128`…","deserialize_f32","Hint that the `Deserialize` type is expecting a `f32` value.","deserialize_f64","Hint that the `Deserialize` type is expecting a `f64` value.","deserialize_char","Hint that the `Deserialize` type is expecting a `char`…","deserialize_str","deserialize_string","deserialize_bytes","deserialize_byte_buf","deserialize_option","Hint that the `Deserialize` type is expecting an optional…","deserialize_unit","Hint that the `Deserialize` type is expecting a unit value.","deserialize_unit_struct","Hint that the `Deserialize` type is expecting a unit…","deserialize_newtype_struct","Hint that the `Deserialize` type is expecting a newtype…","deserialize_seq","deserialize_tuple","deserialize_tuple_struct","Hint that the `Deserialize` type is expecting a tuple…","deserialize_map","Hint that the `Deserialize` type is expecting a map of…","deserialize_struct","Hint that the `Deserialize` type is expecting a struct…","deserialize_enum","Hint that the `Deserialize` type is expecting an enum…","deserialize_identifier","Hint that the `Deserialize` type is expecting the name of…","deserialize_ignored_any","Hint that the `Deserialize` type needs to deserialize a…","Determine whether `Deserialize` implementations should…","A data structure that can be serialized into any data…","Serialize this value into the given Serde serializer.","A data format that can serialize any data structure…","The output type produced by this `Serializer` during…","The error type when some error occurs during serialization.","Type returned from [`serialize_seq`] for serializing the…","Type returned from [`serialize_tuple`] for serializing the…","Type returned from [`serialize_tuple_struct`] for…","Type returned from [`serialize_tuple_variant`] for…","Type returned from [`serialize_map`] for serializing the…","Type returned from [`serialize_struct`] for serializing…","Type returned from [`serialize_struct_variant`] for…","serialize_bool","Serialize a `bool` value.","serialize_i8","Serialize an `i8` value.","serialize_i16","Serialize an `i16` value.","serialize_i32","Serialize an `i32` value.","serialize_i64","Serialize an `i64` value.","serialize_i128","Serialize an `i128` value.","serialize_u8","Serialize a `u8` value.","serialize_u16","Serialize a `u16` value.","serialize_u32","Serialize a `u32` value.","serialize_u64","Serialize a `u64` value.","serialize_u128","Serialize a `u128` value.","serialize_f32","Serialize an `f32` value.","serialize_f64","Serialize an `f64` value.","serialize_char","Serialize a character.","serialize_str","Serialize a `&str`.","serialize_bytes","Serialize a chunk of raw byte data.","serialize_none","Serialize a [`None`] value.","serialize_some","Serialize a [`Some(T)`] value.","serialize_unit","Serialize a `()` value.","serialize_unit_struct","Serialize a unit struct like `struct Unit` or…","serialize_unit_variant","Serialize a unit variant like `E::A` in `enum E { A, B }`.","serialize_newtype_struct","Serialize a newtype struct like `struct Millimeters(u8)`.","serialize_newtype_variant","Serialize a newtype variant like `E::N` in `enum E { N(u8)…","serialize_seq","Begin to serialize a variably sized sequence. This call…","serialize_tuple","Begin to serialize a statically sized sequence whose…","serialize_tuple_struct","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…","serialize_tuple_variant","Begin to serialize a tuple variant like `E::T` in `enum E…","serialize_map","Begin to serialize a map. This call must be followed by…","serialize_struct","Begin to serialize a struct like `struct Rgb { r: u8, g:…","serialize_struct_variant","Begin to serialize a struct variant like `E::S` in `enum E…","collect_seq","Collect an iterator as a sequence.","collect_map","Collect an iterator as a map.","collect_str","Serialize a string produced by an implementation of…","Determine whether `Serialize` implementations should…","serde::de::value","serde::de","visit_newtype_struct","visit_bytes","next_element_seed","next_key_seed","next_value_seed","next_entry_seed","variant_seed","serde::ser","serialize_key","serialize_value","ignoredany","unexpected","BorrowedStrDeserializer","BorrowedBytesDeserializer","SeqDeserializer","SeqAccessDeserializer","MapDeserializer","MapAccessDeserializer","DeserializeSeed","VariantAccess","IntoDeserializer","Serializer","UnitDeserializer","BoolDeserializer","I8Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","IsizeDeserializer","U8Deserializer","U16Deserializer","U64Deserializer","UsizeDeserializer","F32Deserializer","F64Deserializer","CharDeserializer","I128Deserializer","U128Deserializer","U32Deserializer","StrDeserializer","StringDeserializer","CowStrDeserializer","Creates and initializes a `BigInt`.","Creates and initializes a `BigInt` from an array of bytes…","Creates and initializes a `BigInt`. Each u8 of the input…","Returns the sign and the byte representation of the…","Returns the two's complement byte representation of the…","Creates and initializes a `BigUint`.","assign_from_slice","from_bytes_be","from_bytes_le","parse_bytes","from_radix_be","from_radix_le","Creates and initializes a `BigUint`. Each u8 of the input…","to_bytes_be","to_bytes_le","Returns the byte representation of the `BigUint` in…","to_str_radix","Returns the integer formatted as a string in the given…","to_radix_be","Returns the integer in the requested base in big-endian…","to_radix_le","Returns the integer in the requested base in little-endian…","Determines the fewest bits necessary to express the…","Returns the truncated principal square root of `self` --…","Returns the truncated principal cube root of `self` -- see…","Returns the truncated principal `n`th root of `self` --…","to_biguint","parsebiginterror","bitand_assign","bitor_assign","bitxor_assign","Calculates the Greatest Common Divisor (GCD) of the number…","Calculates the Lowest Common Multiple (LCM) of the number…","Deprecated, use `is_multiple_of` instead.","is_multiple_of","Returns `true` if the number is a multiple of `other`.","Returns `true` if the number is divisible by `2`.","Returns `true` if the number is not divisible by `2`.","Creates and initializes a BigInt.","checked_div","checked_sub","checked_add","checked_mul","ParseBigIntError","is_positive","is_negative","Returns `true` if the deque is empty.","bigrational","parseratioerror","from_i64","from_u64","from_f64","from_f32","ParseRatioError","Serialize","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","Spawns a job into the fork-join scope `self`. This job…","configuration","current_num_threads","current_thread_index","current_thread_has_pending_tasks","Creates a scope that executes within this thread-pool.…","spawn_fifo","Spawns an asynchronous task in this thread-pool. This task…","threadpool","threadpoolbuilderror","customspawn","stack_size","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","breadth_first","start_handler","exit_handler","ThreadBuilder","ThreadPoolBuilder","Configuration","ThreadPoolBuildError","An iterator over at most `n` substrings in a byte string,…","An iterator over substrings in a byte string, split by a…","Convert this finder into its owned variant, such that it…","finderreverse","Returns the needle that this finder searches for.","Executes the given closure on each line in the underlying…","View the underlying data as a subslice of the original data.","as_bytes","Returns true if and only if this byte string has the given…","Returns an iterator of the non-overlapping occurrences of…","Returns the index of the first occurrence of the given…","Returns the index of the last occurrence of the given…","Returns an iterator over the fields in a byte string,…","Returns an iterator over substrings of this byte string,…","Returns an iterator of at most `limit` substrings of this…","Replace all matches of the given needle with the given…","Replace up to `limit` matches of the given needle with the…","Returns an iterator over the Unicode scalar values in this…","Returns an iterator over the grapheme clusters in this…","An iterator over all lines in a byte string, without their…","An iterator over all lines in a byte string, including…","Return a byte string slice with leading and trailing…","A trait that extends a slice of bytes with string oriented…","fromutf8error","graphemeindices","sentenceindices","wordindices","wordswithbreaks","wordswithbreakindices","charindices","index_mut","rangetoinclusive","Return this byte slice as a `&BStr`.","as_bstr_mut","Return this byte slice as a `&mut BStr`.","from_os_str","Create an immutable byte string from an OS string slice.","Create an immutable byte string from a file path.","Safely convert this byte string into a `&str` if it's…","to_str_unchecked","Unsafely convert this byte string into a `&str`, without…","to_str_lossy","Convert this byte string to a valid UTF-8 string by…","to_str_lossy_into","Copy the contents of this byte string into the given owned…","Create an OS string slice from this byte string.","to_os_str_lossy","Lossily create an OS string slice from this byte string.","Create a path slice from this byte string.","to_path_lossy","Lossily create a path slice from this byte string.","Create a new byte string by repeating this byte string `n`…","contains_str","Returns true if and only if this byte string contains the…","starts_with_str","ends_with_str","find_byteset","Returns the index of the first occurrence of any of the…","find_not_byteset","Returns the index of the first occurrence of a byte that…","rfind_byteset","Returns the index of the last occurrence of any of the…","rfind_not_byteset","Returns the index of the last occurrence of a byte that is…","findreverse","fields_with","splitreverse","rsplitn_str","splitnreverse","replace_into","replacen_into","Returns an iterator over the bytes in this byte string.","char_indices","graphemes","grapheme_indices","Returns an iterator over the words in this byte string. If…","word_indices","Returns an iterator over the words in this byte string…","words_with_breaks","Returns an iterator over the words in this byte string,…","words_with_break_indices","Returns an iterator over the words and their byte offsets…","sentences","Returns an iterator over the sentences in this byte string.","sentence_indices","Returns an iterator over the sentences in this byte string…","lines_with_terminator","lineswithterminator","Return a byte string slice with leading whitespace removed.","Return a byte string slice with trailing whitespace removed.","trim_start_with","Return a byte string slice with leading characters…","trim_end_with","Return a byte string slice with trailing characters…","to_lowercase","Returns a new `Vec<u8>` containing the lowercase…","to_lowercase_into","Writes the lowercase equivalent of this byte string into…","to_ascii_lowercase","Returns a new `Vec<u8>` containing the ASCII lowercase…","make_ascii_lowercase","Convert this byte string to its lowercase ASCII equivalent…","to_uppercase","Returns a new `Vec<u8>` containing the uppercase…","to_uppercase_into","Writes the uppercase equivalent of this byte string into…","to_ascii_uppercase","Returns a new `Vec<u8>` containing the ASCII uppercase…","make_ascii_uppercase","Convert this byte string to its uppercase ASCII equivalent…","reverse_bytes","Reverse the bytes in this string, in place.","reverse_chars","Reverse the codepoints in this string, in place.","reverse_graphemes","Reverse the graphemes in this string, in place.","Returns true if and only if every byte in this byte string…","Returns true if and only if the entire byte string is…","Returns the last byte in this byte string, if it's…","find_non_ascii_byte","Returns the index of the first non-ASCII byte in this byte…","copy_within_str","Copies elements from one part of the slice to another part…","Create a new owned byte string from the given byte slice.","from_os_string","Create a new byte string from an owned OS string.","osstring","from_os_str_lossy","Lossily create a new byte string from an OS string slice.","from_path_buf","Create a new byte string from an owned file path.","from_path_lossy","Lossily create a new byte string from a file path.","Appends the given byte to the end of this byte string.","Appends the given `char` to the end of this byte string.","Appends the given slice to the end of this byte string.…","into_string","Converts a `Vec<u8>` into a `String` if and only if this…","into_string_lossy","Lossily converts a `Vec<u8>` into a `String`. If this byte…","into_string_unchecked","Unsafely convert this byte string into a `String`, without…","into_os_string","Converts this byte string into an OS string, in place.","into_os_string_lossy","Lossily converts this byte string into an OS string, in…","into_path_buf","Converts this byte string into an owned file path, in place.","into_path_buf_lossy","Lossily converts this byte string into an owned file path,…","Removes the last byte from this `Vec<u8>` and returns it.","Removes the last codepoint from this `Vec<u8>` and returns…","remove_char","Removes a `char` from this `Vec<u8>` at the given byte…","insert_char","Inserts the given codepoint into this `Vec<u8>` at a…","Inserts the given byte string into this byte string at a…","replace_range","Removes the specified range in this byte string and…","drain_bytes","Creates a draining iterator that removes the specified…","FinderReverse","FromUtf8Error","GraphemeIndices","SentenceIndices","WordIndices","WordsWithBreaks","WordsWithBreakIndices","CharIndices","FindReverse","LinesWithTerminator","SplitNReverse","SplitReverse","from_slice","serialize","Represents a JSON number, whether integer or floating point.","Serialize the given data structure as a pretty-printed…","A structure that deserializes JSON into Rust values.","StreamDeserializer","Iterator that deserializes a stream into multiple JSON…","from_reader","Deserialize an instance of type `T` from an IO stream of…","Deserialize an instance of type `T` from bytes of JSON text.","Deserialize an instance of type `T` from a string of JSON…","This type represents all possible errors that can occur…","serde_json","Represents a JSON key/value type.","A structure for serializing Rust values into JSON.","Serialize the given data structure as JSON into the IO…","to_writer_pretty","Serialize the given data structure as pretty-printed JSON…","Serialize the given data structure as a JSON byte vector.","to_vec_pretty","Serialize the given data structure as a String of JSON.","to_string_pretty","Writes an integer value like `-123` to the specified writer.","Writes an integer value like `123` to the specified writer.","Writes a floating point value like `-31.26e+12` to the…","Represents any valid JSON value.","Represents a JSON null value.","Represents a JSON boolean.","Represents a JSON string.","Represents a JSON array.","Represents a JSON object.","Convert a `T` into `serde_json::Value` which is an enum…","Interpret a `serde_json::Value` as an instance of type `T`.","serde_json::de","Alias for a `Result` with the error type…","serde_json::error","serde_json::ser","serde_json::map","serde_json::value","begin_array","begin_array_value","end_array_value","begin_object","begin_object_key","begin_object_value","end_object_value","byte_offset","reference","peek_position","parse_str_raw","decode_hex_escape","ignore_str","invalid_type","VacantEntry","OccupiedEntry","PrettyFormatter","CompactFormatter","parse_str","A generic trait for converting a value to a number.","Converts the value of `self` to an `isize`.","Converts the value of `self` to an `i8`.","Converts the value of `self` to an `i16`.","Converts the value of `self` to an `i32`.","Converts the value of `self` to an `i64`.","Converts the value of `self` to an `i128`.","Converts the value of `self` to a `usize`.","Converts the value of `self` to an `u8`.","Converts the value of `self` to an `u16`.","Converts the value of `self` to an `u32`.","Converts the value of `self` to an `u64`.","Converts the value of `self` to an `u128`.","Converts the value of `self` to an `f32`.","Converts the value of `self` to an `f64`.","A generic trait for converting a number to a value.","Convert an `isize` to return an optional value of this…","Convert an `i8` to return an optional value of this type.…","Convert an `i16` to return an optional value of this type.…","Convert an `i32` to return an optional value of this type.…","Convert an `i64` to return an optional value of this type.…","Convert an `i128` to return an optional value of this…","Convert a `usize` to return an optional value of this…","Convert an `u8` to return an optional value of this type.…","Convert an `u16` to return an optional value of this type.…","Convert an `u32` to return an optional value of this type.…","Convert an `u64` to return an optional value of this type.…","Convert an `u128` to return an optional value of this…","Convert a `f32` to return an optional value of this type.…","Convert a `f64` to return an optional value of this type.…","An interface for casting between machine scalars.","Creates a number from another value that can be converted…","Cast from one machine scalar to another.","Raises a value to the power of exp, using exponentiation…","checked_pow","Raises a value to the power of exp, returning `None` if an…","A big unsigned integer type.","A big signed integer type.","A complex number in Cartesian form.","Real portion of the complex number","Imaginary portion of the complex number","Floored integer division.","Floored integer modulo, satisfying:","Ceiled integer division.","Greatest Common Divisor (GCD).","Lowest Common Multiple (LCM).","Greatest Common Divisor (GCD) and Lowest Common Multiple…","extended_gcd","Greatest common divisor and Bézout coefficients.","extended_gcd_lcm","Greatest common divisor, least common multiple, and Bézout…","Returns `true` if `self` is a multiple of `other`.","Returns `true` if the number is even.","Returns `true` if the number is odd.","Simultaneous truncated integer division and modulus.…","Simultaneous floored integer division and modulus. Returns…","next_multiple_of","Rounds up to nearest multiple of argument.","prev_multiple_of","Rounds down to nearest multiple of argument.","Returns an iterator over the given range [start, stop)…","range_inclusive","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by `step`.…","range_step_inclusive","Return an iterator over the range [start, stop] by `step`.…","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","num::traits","A generic interface for casting between machine scalars…","Convert a value to another, using the `as` operator.","Generic trait for floating point numbers","Returns the `NaN` value.","Returns the infinite value.","Returns the negative infinite value.","Returns `true` if this value is `NaN` and false otherwise.","Returns `true` if this value is positive infinity or…","Returns `true` if this number is neither infinite nor `NaN`.","Raise a number to a floating point power.","Defines an additive identity element for `Self`.","Returns the additive identity element of `Self`, `0`. #…","Sets `self` to the additive identity element of `Self`, `0`.","Returns `true` if `self` is equal to the additive identity.","Defines a multiplicative identity element for `Self`.","Returns the multiplicative identity element of `Self`, `1`.","Sets `self` to the multiplicative identity element of…","Returns `true` if `self` is equal to the multiplicative…","Returns the additive identity, `0`.","Returns the multiplicative identity, `1`.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of…","count_zeros","Returns the number of zeros in the binary representation…","leading_zeros","Returns the number of leading zeros in the binary…","trailing_zeros","Returns the number of trailing zeros in the binary…","rotate_left","rotate_right","unsigned_shl","unsigned_shr","Reverses the byte order of the integer.","Convert an integer from big endian to the target's…","Convert an integer from little endian to the target's…","Convert `self` to big endian from the target's endianness.","Convert `self` to little endian from the target's…","Raises self to the power of `exp`, using exponentiation by…","Performs addition that returns `None` instead of wrapping…","Adds two numbers, checking for overflow. If overflow…","Performs subtraction that returns `None` instead of…","Subtracts two numbers, checking for underflow. If…","Performs multiplication that returns `None` instead of…","Multiplies two numbers, checking for underflow or…","Performs division that returns `None` instead of panicking…","Divides two numbers, checking for underflow, overflow and…","num::traits::ops","Saturating math operations","saturating_add","Saturating addition operator. Returns a+b, saturating at…","saturating_sub","Saturating subtraction operator. Returns a-b, saturating…","Binary operator for raising a value to a power.","Returns `self` to the power `rhs`.","Useful functions for signed numbers (i.e. numbers that can…","Returns true if the number is positive and false if the…","Returns true if the number is negative and false if the…","A trait for values which cannot be negative","The base trait for numeric types, covering `0` and `1`…","FromStrRadixErr","Convert from a string and radix <= 36.","A value bounded by a minimum and a maximum","Alias for a `Ratio` of machine-sized integers.","BigRational","Alias for arbitrary precision rationals.","num::bigint","num::complex","num::integer","num::rational","A Sign is a `BigInt`'s composing element.","from_biguint","Reinitializes a `BigInt`.","from_signed_bytes_be","from_signed_bytes_le","to_signed_bytes_be","to_signed_bytes_le","Returns the sign of the `BigInt` as a `Sign`.","Converts this `BigInt` into a `BigUint`, if it's not…","Returns `(self ^ exponent) mod modulus`","nth_root","Assign a value to a `BigUint`.","Creates and initializes a `BigUint`. The input slice must…","Returns `(self ^ exponent) % modulus`.","A generic trait for converting a value to a `BigUint`.","Converts the value of `self` to a `BigUint`.","A generic trait for converting a value to a `BigInt`. This…","to_bigint","Converts the value of `self` to a `BigInt`.","Negate Sign value.","shl_assign","shr_assign","set_zero","ToBigUint","Create a new Complex","Returns imaginary unit","Returns the square of the norm (since `T` doesn't…","Multiplies `self` by the scalar `t`.","Divides `self` by the scalar `t`.","Raises `self` to an unsigned integer power.","Returns the complex conjugate. i.e. `re - i im`","Returns `1/self`","Raises `self` to a signed integer power.","Returns the L1 norm `|re| + |im|` -- the [Manhattan…","Calculate |self|","Calculate the principal Arg of self.","Convert to polar form (r, theta), such that `self = r *…","Convert a polar representation into a complex number.","Computes `e^(self)`, where `e` is the base of the natural…","Computes the principal value of natural logarithm of `self`.","Computes the principal value of the square root of `self`.","Computes the principal value of the cube root of `self`.","Raises `self` to a floating point power.","Returns the logarithm of `self` with respect to an…","Raises `self` to a complex power.","Raises a floating point number to the complex power `self`.","Computes the sine of `self`.","Computes the cosine of `self`.","Computes the tangent of `self`.","Computes the principal value of the inverse sine of `self`.","Computes the principal value of the inverse cosine of…","Computes the principal value of the inverse tangent of…","Computes the hyperbolic sine of `self`.","Computes the hyperbolic cosine of `self`.","Computes the hyperbolic tangent of `self`.","Computes the principal value of inverse hyperbolic sine of…","Computes the principal value of inverse hyperbolic cosine…","Computes the principal value of inverse hyperbolic tangent…","Returns `1/self` using floating-point operations.","Returns `self/other` using floating-point operations.","Checks if the given complex number is NaN","Checks if the given complex number is infinite","Checks if the given complex number is finite","Checks if the given complex number is normal","Greatest common divisor and Bézout coefficients","An iterator over binomial coefficients.","Simultaneous integer division and modulus","Floored integer division","Floored integer modulus","Simultaneous floored integer division and modulus","Ceiled integer division","Calculates the Greatest Common Divisor (GCD) and Lowest…","Calculate the binomial coefficient.","multinomial","Calculate the multinomial coefficient.","Provides methods to compute an integer's square root, cube…","For a given n, iterate over all binomial coefficients…","iterbinomial","An iterator over the range [start, stop)","An iterator over the range [start, stop]","An iterator over the range [start, stop) by `step`. It…","An iterator over the range [start, stop] by `step`. It…","range_step","rangestep","RangeStep","Represents the ratio between two numbers.","Alias for a `Ratio` of 32-bit-sized integers.","Alias for a `Ratio` of 64-bit-sized integers.","Creates a new `Ratio`. Fails if `denom` is zero.","from_integer","Creates a `Ratio` representing the integer `t`.","Creates a `Ratio` without checking for `denom == 0` or…","Converts to an integer, rounding towards zero.","Gets an immutable reference to the numerator.","Gets an immutable reference to the denominator.","Returns true if the rational number is an integer…","Returns a reduced copy of self.","Returns the reciprocal.","Rounds towards minus infinity.","Rounds towards plus infinity.","Rounds to the nearest integer. Rounds half-way cases away…","Rounds towards zero.","Returns the fractional part of a number, with division…","Raises the `Ratio` to the power of an exponent.","Converts a float into a rational number.","approximate_float","Renders as `numer/denom`. If denom=1, renders as numer.","Parses `numer/denom` or just `numer`.","Parses `numer/denom` where the numbers are in base `radix`.","Generic trait for floating point numbers that works with…","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns `true` if the number is NaN.","Returns `true` if the number is infinite.","Returns `true` if the number is neither infinite or NaN.","Returns `true` if `self` is positive, including `+0.0` and…","Returns `true` if `self` is negative, including `-0.0` and…","Returns the reciprocal (multiplicative inverse) of the…","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return Euler’s number.","Return `1.0 / π`.","FRAC_1_SQRT_2","Return `1.0 / sqrt(2.0)`.","Return `2.0 / π`.","FRAC_2_SQRT_PI","Return `2.0 / sqrt(π)`.","Return `π / 2.0`.","Return `π / 3.0`.","Return `π / 4.0`.","Return `π / 6.0`.","Return `π / 8.0`.","Return `ln(10.0)`.","Return `ln(2.0)`.","Return `log10(e)`.","Return `log2(e)`.","Return Archimedes’ constant.","Return `sqrt(2.0)`.","count_ones","signed_shl","signed_shr","swap_bytes","Performs an integral remainder that returns `None` instead…","checked_rem","Finds the remainder of dividing two numbers, checking for…","Performs negation that returns `None` if the result can't…","checked_neg","Negates a number, returning `None` for results that can't…","Performs a left shift that returns `None` on shifts larger…","checked_shl","Checked shift left. Computes `self << rhs`, returning…","Performs a right shift that returns `None` on shifts…","checked_shr","Checked shift right. Computes `self >> rhs`, returning…","Unary operator for retrieving the multiplicative inverse,…","Returns the multiplicative inverse of `self`.","The resulting type after applying the fused multiply-add.","The fused multiply-add assignment operation.","Performs addition that wraps around on overflow.","wrapping_add","Wrapping (modular) addition. Computes `self + other`,…","Performs subtraction that wraps around on overflow.","wrapping_sub","Wrapping (modular) subtraction. Computes `self - other`,…","Performs multiplication that wraps around on overflow.","wrapping_mul","Wrapping (modular) multiplication. Computes `self *…","Performs a left shift that does not panic.","wrapping_shl","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…","Performs a right shift that does not panic.","wrapping_shr","Panic-free bitwise shift-right; yields `self >>…","A trait for real number types that do not necessarily have…","Raise a number to a real number power.","The trait for types implementing basic numeric operations","The trait for `Num` types which also implement numeric…","The trait for references which implement numeric…","NumAssignOps","The trait for types implementing numeric assignment…","The trait for `Num` types which also implement assignment…","NumAssignRef","The trait for `NumAssign` types which also implement…","Continue folding with this value","Fold is complete and will return this value","Create a one-dimensional array with elements from `xs`.","Create a two-dimensional array with elements from `xs`.","Create a three-dimensional array with elements from `xs`.","An iterator that traverses over an axis and and yields…","An iterator that traverses over the specified axis and…","Exact chunks producer and iterable.","Exact chunks iterator.","shapeerror","ndarray::iter","Split the iterator at index, yielding two disjoint…","Apply a function to all elements of the input arrays,…","fold_while","Apply a fold function to all elements of the input arrays,…","Include the producer `p` in the Zip.","and_broadcast","Include the producer `p` in the Zip, broadcasting if needed.","Split the `Zip` evenly in two.","into_shared","sliceinfo","arrayviewmut","Slice the array in place without changing the number of…","Perform unchecked array indexing.","arrayview","arraybase","Return a producer and iterable that traverses over the…","Return a producer and iterable that traverses over all 1D…","Return an iterator that traverses over the outermost…","Return an iterator that traverses over `axis` and yields…","axisitermut","Return an iterator that traverses over `axis` by chunks of…","Return an exact chunks producer (and iterable).","arrayviewmut1","Return the array’s data as a slice, if it is contiguous…","Return the array’s data as a slice if it is contiguous,…","Reduce the values along an axis into just one value,…","arrayview1","Collapses the array to `index` along the axis and removes…","Return the sum of all elements in the array.","ndarray::linalg","An array where the data has shared ownership and is copy…","remove_axis","Get a reference of a element through the view.","__private__","This trait is private to implement; this method exists to…","privatemarker","Array representation trait.","The element produced per iteration.","Stack arrays along the given axis.","_data_slice","ownedrepr","clone_with_ptr","ownedrcrepr","into_dimension","into_pattern","insert_axis","size_checked","_fastest_varying_stride_order","max_stride_axis","try_remove_axis","slice_mut","default_strides","min_stride_axis","first_index","stride_offset","Self is an index, return the stride offset","stride_offset_checked","Return stride offset for this dimension and index.","index_checked","index_unchecked","into_shape","strideshape","contiguous_stride","Convert a mutable array view to a mutable reference of a…","indexediter","rangefrom","sliceorindex","rangefull","ixdynimpl","For fixed-size dimension representations (e.g. `Ix2`),…","Compute the size of the dimension (number of elements)","Compute the size while checking for overflow.","as_array_view","Borrow as a read-only array view.","as_array_view_mut","Borrow as a read-write array view.","Convert the dimensional into a dynamic dimensional (IxDyn).","from_shape_ptr","AxisDescription","SliceOrIndex","AxisIterMut","IntoDimension","ShapeBuilder","IndexLonger","FixedInitializer","IntoNdProducer","OwnedArcRepr","StrideShape","IndicesIter","IndexedIter","IndexedIterMut","LanesIterMut","AxisChunksIter","AxisChunksIterMut","ExactChunks","ExactChunksIter","ExactChunksMut","ExactChunksIterMut","ArrayViewMut","Basic two-dimensional dense matrix type.","Return an immutable reference to the underlying data…","as_mut_slice","rustlearn::array","Initialise an empty (`rows` by `cols`) matrix.","Return the number of nonzero entries.","Trait representing a matrix that can be iterated over in a…","cross_validation","rustlearn::cross_validation","rustlearn::datasets","rustlearn","hyperparameters","Set the random number generator.","randomforest","Hyperparameters","one_vs_rest","onevsrestwrapper","factorizationmachine","sparserowarray","Creates new Hyperparameters.","learning_rate","Set the initial learning rate.","Set the L2 penalty.","Set the L1 penalty.","Build a two-class model.","sgdclassifier","Build a one-vs-rest multiclass model.","get_coefficients","decisiontree","rustlearn::array::dense","get_rows","rustlearn::array::sparse","rustlearn::array::traits","rustlearn::cross_validation::cross_validation","rustlearn::cross_validation::shuffle_split","rustlearn::ensemble::random_forest","rustlearn::factorization::factorization_machines","rustlearn::feature_extraction::dict_vectorizer","rustlearn::linear_models::sgdclassifier","rustlearn::multiclass","rustlearn::svm::libsvm::svc","rustlearn::trees::decision_tree","rustlearn::utils","get_unchecked","get_unchecked_mut","set_unchecked","iter_nonzero","add_inplace","sub_inplace","times_inplace","div_inplace","decision_function","sparsecolumnarray","decision_function_parallel","predict_parallel","fit_parallel","matrixorder","encodablerng","dictvectorizer","sparsearrayview","ArrayView","SparseRowArray","SparseColumnArray","SparseArrayView","MatrixOrder","IndexableMatrix","RowIterable","ColumnIterable","NonzeroIterable","ElementwiseArrayOps","CrossValidation","ShuffleSplit","RandomForest","FactorizationMachine","DictVectorizer","SGDClassifier","OneVsRestWrapper","SupervisedModel","ParallelPredict","ParallelSupervisedModel","EncodableRng","ArrayIterator","ArrayViewIterator","ArrayViewNonzeroIterator","SparseArrayViewIterator","SparseArrayIterator","DecisionTree","InvalidUtf8","csv::ErrorKind","byterecord","Return the position for this error, if one exists.","valid_up_to","Build a CSV parser from this configuration that reads data…","from_path","Create a new CSV parser with a default configuration for…","stringrecord","has_headers","Return a reference to the underlying CSV reader.","Return a mutable reference to the underlying CSV reader.","reader_mut","into_reader","Drop this iterator and return the underlying CSV reader.","with_capacity","Deserialize this record.","Returns an iterator over all fields in this record.","Return the field at index `i`.","Returns true if and only if this record is empty.","Returns the number of fields in this record.","Truncate this record to `n` fields.","Clear this record so that it has zero fields.","Trim the fields of this record so that leading and…","Add a new field to this record.","Return the position of this record, if available.","set_position","Set the position of this record.","Return the start and end position of a field in this record.","into_byte_record","Build a CSV writer from this configuration that writes…","Whether the number of fields in records is allowed to…","Enable double quote escapes.","buffer_capacity","from_writer","Build a CSV writer with a default configuration that…","intoinnererror","deserializeerrorkind","deserializeerror","DeserializeErrorKind","DeserializeError","Utf8Error","IntoInnerError","DeserializeRecordsIntoIter","DeserializeRecordsIter","StringRecordsIntoIter","StringRecordsIter","ByteRecordsIntoIter","ByteRecordsIter","StringRecord","ByteRecordIter","StringRecordIter","Builds a CSV reader with various configuration knobs.","A record terminator.","Parses `\\r`, `\\n` or `\\r\\n` as a single record terminator.","Parses the byte given as a record terminator.","The quoting style to use when writing CSV data.","This puts quotes around every field. Always.","This puts quotes around fields only when necessary.","This puts quotes around all fields that are non-numeric.…","This never writes quotes, even if it would produce invalid…","The field delimiter to use when parsing CSV.","The record terminator to use when parsing CSV.","The quote character to use when parsing CSV.","The escape character to use when parsing CSV.","Enable or disable quoting.","The comment character to use when parsing CSV.","A convenience method for specifying a configuration to…","read_record","The field delimiter to use when writing CSV.","The record terminator to use when writing CSV.","quote_style","The quoting style to use when writing CSV.","The quote character to use when writing CSV.","The escape character to use when writing CSV.","Unsupported","TinyTemplate","tinytemplate::error","tinytemplate::error::Error","tinytemplate","rayon::collections","This module contains the parallel iterator types for…","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","Iterate the producer, feeding each element to `folder`,…","rayon::iter","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","partition_map","Internal method used to define the behavior of this…","interleave_shortest","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","Create a bridge from this type to a `ParallelIterator`.","Returns a parallel iterator over at most `chunk_size`…","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","defaultspawn","drive_unindexed","rayon::str","rayon::vec","with_producer","consumer","iterbridge","tryfoldwith","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","TryFoldWith","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","ThreadPool","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","scope_fifo","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","ScopeFifo","FnContext","intobenchmarkid","benchmarkid","throughput","Times a `routine` that requires some input by generating a…","measurement","criterion","sample_size","warm_up_time","measurement_time","noise_threshold","confidence_level","significance_level","bench_function","bench_with_input","plotconfiguration","criterion::measurement","criterion::profiler","valueformatter","start_profiling","stop_profiling","batchsize","BenchmarkGroup","BenchmarkId","ValueFormatter","Measurement","PlotConfiguration","ExternalProfiler","Logarithmic"];
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,R[125],R[116],"A string with a fixed capacity.",N,N],[3,R[126],E,"Error value indicating insufficient capacity",N,N],[3,"ArrayVec",E,"A vector with a fixed capacity.",N,N],[3,R[165],E,"By-value iterator for `ArrayVec`.",N,N],[3,"Drain",E,"A draining iterator for `ArrayVec`.",N,N],[11,"new",E,"Create a new empty `ArrayString`.",0,[[],[R[121]]]],[11,"from",E,"Create a new `ArrayString` from a `str`.",0,[[["str"]],[[R[2],[R[108]]],[R[108],["str"]]]]],[11,"from_byte_string",E,"Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[[R[109]],[R[2],[R[109]]]]]],[11,R[470],E,"Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push",E,R[110],0,[[["self"],["char"]]]],[11,"try_push",E,R[110],0,[[["self"],["char"]],[[R[108],["char"]],[R[2],[R[108]]]]]],[11,"push_str",E,R[111],0,[[["self"],["str"]]]],[11,"try_push_str",E,R[111],0,[[["self"],["str"]],[[R[2],[R[108]]],[R[108],["str"]]]]],[11,"pop",E,"Removes the last character from the string and returns it.",0,[[["self"]],[[R[32],["char"]],["char"]]]],[11,R[288],E,"Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove",E,"Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear",E,"Make the string empty.",0,[[["self"]]]],[11,"set_len",E,"Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str",E,"Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new",E,"Create a new `CapacityError` from `element`.",1,[[[T]],[R[108]]]],[11,R[414],E,"Extract the overflowing element",1,[[],[T]]],[11,"simplify",E,"Convert into a `CapacityError` that does not carry an…",1,[[],[R[108]]]],[8,"Array",E,"Trait for fixed size arrays.",N,N],[16,"Item",E,"The array’s element type",2,N],[8,R[127],E,"`RangeArgument` is implemented by Rust's built-in range…",N,N],[11,"start",E,R[123],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"end",E,R[124],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"new",E,"Create a new empty `ArrayVec`.",4,[[],[R[116]]]],[11,"len",E,"Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,R[470],E,"Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full",E,"Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push",E,R[112],4,[[["self"]]]],[11,"try_push",E,R[112],4,[[["self"]],[[R[2],[R[108]]],[R[108]]]]],[11,"push_unchecked",E,"Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert",E,R[113],4,[[["self"],["usize"]]]],[11,"try_insert",E,R[113],4,[[["self"],["usize"]],[[R[2],[R[108]]],[R[108]]]]],[11,"pop",E,"Remove the last element in the vector and return it.",4,[[["self"]],[R[32]]]],[11,"swap_remove",E,R[114],4,[[["self"],["usize"]]]],[11,"swap_pop",E,R[114],4,[[["self"],["usize"]],[R[32]]]],[11,"remove",E,R[115],4,[[["self"],["usize"]]]],[11,"pop_at",E,R[115],4,[[["self"],["usize"]],[R[32]]]],[11,R[288],E,"Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear",E,"Remove all elements in the vector.",4,[[["self"]]]],[11,"retain",E,"Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len",E,"Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain",E,"Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,R[6],E,"Return the inner fixed size array, if it is full to its…",4,[[],[R[2]]]],[11,"dispose",E,"Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,"as_slice",E,"Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,R[2147],E,"Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[30],E,E,4,[[],["i"]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,R[30],E,E,5,[[],["i"]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,R[30],E,E,6,[[],["i"]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[31]]]],[11,"cmp",E,E,1,[[["self"],[R[108]]],[R[31]]]],[11,"cmp",E,E,4,[[["self"],[R[116]]],[R[31]]]],[11,R[117],E,E,0,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,"lt",E,E,0,[[["self"]],["bool"]]],[11,"le",E,E,0,[[["self"]],["bool"]]],[11,"gt",E,E,0,[[["self"]],["bool"]]],[11,"ge",E,E,0,[[["self"]],["bool"]]],[11,R[117],E,E,0,[[["self"],["str"]],[[R[31]],[R[32],[R[31]]]]]],[11,"lt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"le",E,E,0,[[["self"],["str"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["str"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["str"]],["bool"]]],[11,R[117],E,E,1,[[["self"],[R[108]]],[[R[32],[R[31]]],[R[31]]]]],[11,"lt",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[108]]],["bool"]]],[11,R[117],E,E,4,[[["self"],[R[116]]],[[R[31]],[R[32],[R[31]]]]]],[11,"lt",E,E,4,[[["self"]],["bool"]]],[11,"le",E,E,4,[[["self"]],["bool"]]],[11,"ge",E,E,4,[[["self"]],["bool"]]],[11,"gt",E,E,4,[[["self"]],["bool"]]],[11,"deref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,4,[[["self"]]]],[11,R[14],E,E,0,[[["self"]],["str"]]],[11,R[14],E,E,4,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"hash",E,E,4,[[["self"],["h"]]]],[11,R[176],E,E,4,[[[R[120]]],["self"]]],[11,R[30],E,E,4,[[],[R[174]]]],[11,"next",E,E,5,[[["self"]],[R[32]]]],[11,R[118],E,E,5,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[32]]]],[11,R[118],E,E,6,[[["self"]]]],[11,R[119],E,E,5,[[["self"]],[R[32]]]],[11,R[119],E,E,6,[[["self"]],[R[32]]]],[11,"extend",E,E,4,[[["self"],[R[120]]]]],[11,"write_char",E,E,0,[[["self"],["char"]],[R[2]]]],[11,"write_str",E,E,0,[[["self"],["str"]],[R[2]]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"from",E,E,4,[[["a"]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[121]]]],[11,R[122],E,E,0,[[["self"],["self"]]]],[11,"clone",E,E,1,[[["self"]],[R[108]]]],[11,"clone",E,E,5,[[["self"]],[R[174]]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,R[122],E,E,4,[[["self"],["self"]]]],[11,R[99],E,"Return an empty `ArrayString`",0,[[],[R[121]]]],[11,R[99],E,"Return an empty array",4,[[],[R[116]]]],[11,R[9],E,E,0,[[["self"]],["str"]]],[11,R[9],E,E,4,[[["self"]]]],[11,R[10],E,E,4,[[["self"]]]],[11,"start",E,R[123],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"end",E,R[124],3,[[["self"]],[[R[32],["usize"]],["usize"]]]]],"p":[[3,R[125]],[3,R[126]],[8,"Array"],[8,R[127]],[3,"ArrayVec"],[3,R[165]],[3,"Drain"]]};
searchIndex["atty"]={"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",N,N],[13,"Stdout",E,E,0,N],[13,"Stderr",E,E,0,N],[13,"Stdin",E,E,0,N],[5,"is",E,"returns true if this is a tty",N,[[["stream"]],["bool"]]],[5,"isnt",E,"returns true if this is not a tty",N,[[["stream"]],["bool"]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"clone",E,E,0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"p":[]};
searchIndex["bstr"]={"doc":"An experimental byte string library.","i":[[3,"BStr","bstr","A wrapper for `&[u8]` that provides convenient string…",N,N],[3,"BString",E,"A wrapper for `Vec<u8>` that provides convenient string…",N,N],[3,"Bytes",E,"An iterator over the bytes in a byte string.",N,N],[3,"Fields",E,"An iterator over the fields in a byte string, separated by…",N,N],[3,"FieldsWith",E,"An iterator over fields in the byte string, separated by a…",N,N],[3,"Find",E,"An iterator over non-overlapping substring matches.",N,N],[3,R[1650],E,"An iterator over non-overlapping substring matches in…",N,N],[3,"Finder",E,"A single substring searcher fixed to a particular needle.",N,N],[3,R[1642],E,"A single substring reverse searcher fixed to a particular…",N,N],[3,"Lines",E,R[1500],N,N],[3,R[1651],E,R[1501],N,N],[3,"Split",E,R[1482],N,N],[3,"SplitN",E,R[1481],N,N],[3,R[1652],E,R[1481],N,N],[3,R[1653],E,R[1482],N,N],[3,"DrainBytes",E,"A draining byte oriented iterator for `Vec<u8>`.",N,N],[3,R[1643],E,"An error that may occur when converting a `Vec<u8>` to a…",N,N],[3,R[1644],E,"An iterator over grapheme clusters in a byte string and…",N,N],[3,"Graphemes",E,"An iterator over grapheme clusters in a byte string.",N,N],[3,R[1645],E,"An iterator over sentences in a byte string, along with…",N,N],[3,"Sentences",E,"An iterator over sentences in a byte string.",N,N],[3,R[1646],E,"An iterator over words in a byte string and their byte…",N,N],[3,"Words",E,"An iterator over words in a byte string.",N,N],[3,R[1648],E,"An iterator over all word breaks in a byte string, along…",N,N],[3,R[1647],E,"An iterator over all word breaks in a byte string.",N,N],[3,R[1649],E,"An iterator over Unicode scalar values in a byte string…",N,N],[3,"Chars",E,"An iterator over Unicode scalar values in a byte string.",N,N],[3,R[2273],E,"An error that occurs when UTF-8 decoding fails.",N,N],[5,"B",E,"A short-hand constructor for building a `&[u8]`.",N,[[["b"]]]],[5,"concat",E,"Concatenate the elements given by the iterator together…",N,[[["i"]],[["u8"],["vec",["u8"]]]]],[5,"join",E,"Join the elements given by the iterator with the given…",N,[[["i"],["b"]],[["u8"],["vec",["u8"]]]]],[5,"decode_utf8",E,"UTF-8 decode a single Unicode scalar value from the…",N,[[["asref"]]]],[5,"decode_last_utf8",E,"UTF-8 decode a single Unicode scalar value from the end of…",N,[[["asref"]]]],[11,"new",E,"Create a new finder for the given needle.",0,[[["b"]],["finder"]]],[11,R[815],E,R[1483],0,[[],["finder"]]],[11,"needle",E,R[1485],0,[[["self"]]]],[11,"find",E,"Returns the index of the first occurrence of this needle…",0,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"new",E,"Create a new reverse finder for the given needle.",1,[[["b"]],[R[1484]]]],[11,R[815],E,R[1483],1,[[],[R[1484]]]],[11,"needle",E,R[1485],1,[[["self"]]]],[11,"rfind",E,"Returns the index of the last occurrence of this needle in…",1,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1488],E,"Return the original bytes as a slice that failed to…",2,[[["self"]]]],[11,"into_vec",E,"Consume this error and return the original byte string…",2,[[],[["u8"],["vec",["u8"]]]]],[11,"utf8_error",E,"Return the underlying UTF-8 error that occurred. This…",2,[[["self"]],[R[109]]]],[0,"io",E,"Utilities for working with I/O using byte strings.",N,N],[3,"ByteLines","bstr::io","An iterator over lines from an instance of…",N,N],[8,"BufReadExt",E,"An extention trait for `std::io::BufRead` which provides…",N,N],[11,"byte_lines",E,"Returns an iterator over the lines of this reader, where…",3,[[],["bytelines"]]],[11,"for_byte_line",E,R[1486],3,[[["f"]],[R[2]]]],[11,"for_byte_line_with_terminator",E,R[1486],3,[[["f"]],[R[2]]]],[11,R[1488],"bstr",R[1487],4,[[["self"]]]],[11,R[1488],E,R[1487],5,[[["self"]]]],[11,R[1488],E,R[1487],6,[[["self"]]]],[11,R[1488],E,R[1487],7,[[["self"]]]],[11,R[1488],E,R[1487],8,[[["self"]]]],[11,R[1488],E,R[1487],9,[[["self"]]]],[11,R[1488],E,R[1487],10,[[["self"]]]],[11,R[1488],E,R[1487],11,[[["self"]]]],[11,R[1488],E,R[1487],12,[[["self"]]]],[11,R[1488],E,R[1487],13,[[["self"]]]],[11,R[2236],E,"Returns the byte index of the position immediately…",14,[[["self"]],["usize"]]],[11,"error_len",E,"Returns the total number of invalid UTF-8 bytes…",14,[[["self"]],[[R[32],["usize"]],["usize"]]]],[8,"ByteSlice",E,R[1503],N,N],[11,"as_bstr",E,R[1513],15,[[["self"]],["bstr"]]],[11,R[1514],E,R[1515],15,[[["self"]],["bstr"]]],[11,R[1516],E,R[1517],15,[[["osstr"]],[R[32]]]],[11,R[2238],E,R[1518],15,[[["path"]],[R[32]]]],[11,"to_str",E,R[1519],15,[[["self"]],[[R[2],["str",R[109]]],["str"],[R[109]]]]],[11,R[1520],E,R[1521],15,[[["self"]],["str"]]],[11,R[1522],E,R[1523],15,[[["self"]],[["str"],["cow",["str"]]]]],[11,R[1524],E,R[1525],15,[[["self"],[R[63]]]]],[11,"to_os_str",E,R[1526],15,[[["self"]],[[R[2],["osstr",R[109]]],["osstr"],[R[109]]]]],[11,R[1527],E,R[1528],15,[[["self"]],[["cow",["osstr"]],["osstr"]]]],[11,"to_path",E,R[1529],15,[[["self"]],[["path"],[R[2],["path",R[109]]],[R[109]]]]],[11,R[1530],E,R[1531],15,[[["self"]],[["path"],["cow",["path"]]]]],[11,"repeatn",E,R[1532],15,[[["self"],["usize"]],[["u8"],["vec",["u8"]]]]],[11,R[1533],E,R[1534],15,[[["self"],["asref"]],["bool"]]],[11,R[1535],E,R[1489],15,[[["self"],["asref"]],["bool"]]],[11,R[1536],E,R[1489],15,[[["self"],["asref"]],["bool"]]],[11,R[1537],E,R[1538],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1539],E,R[1540],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1541],E,R[1542],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1543],E,R[1544],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"find",E,R[1491],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind",E,R[1492],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"find_iter",E,R[1490],15,[[["self"],["b"]],["find"]]],[11,"rfind_iter",E,R[1490],15,[[["self"],["b"]],[R[1545]]]],[11,"find_byte",E,R[1491],15,[[["self"],["u8"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind_byte",E,R[1492],15,[[["self"],["u8"]],[[R[32],["usize"]],["usize"]]]],[11,"find_char",E,R[1491],15,[[["self"],["char"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind_char",E,R[1492],15,[[["self"],["char"]],[[R[32],["usize"]],["usize"]]]],[11,"fields",E,R[1493],15,[[["self"]],["fields"]]],[11,R[1546],E,R[1493],15,[[["self"],["fnmut"]],[["fieldswith"],["fnmut"]]]],[11,"split_str",E,R[1494],15,[[["self"],["b"]],["split"]]],[11,"rsplit_str",E,R[1494],15,[[["self"],["b"]],[R[1547]]]],[11,"splitn_str",E,R[1495],15,[[["self"],["usize"],["b"]],["splitn"]]],[11,R[1548],E,R[1495],15,[[["self"],["usize"],["b"]],[R[1549]]]],[11,"replace",E,R[1496],15,[[["self"],["asref"]],[["u8"],["vec",["u8"]]]]],[11,"replacen",E,R[1497],15,[[["self"],["asref"],["usize"]],[["u8"],["vec",["u8"]]]]],[11,R[1550],E,R[1496],15,[[["self"],["asref"],["vec"]]]],[11,R[1551],E,R[1497],15,[[["self"],["asref"],["usize"],["vec"]]]],[11,"bytes",E,R[1552],15,[[["self"]],["bytes"]]],[11,"chars",E,R[1498],15,[[["self"]],["chars"]]],[11,R[1553],E,R[1498],15,[[["self"]],[R[1510]]]],[11,R[1554],E,R[1499],15,[[["self"]],[R[1554]]]],[11,R[1555],E,R[1499],15,[[["self"]],[R[1505]]]],[11,"words",E,R[1556],15,[[["self"]],["words"]]],[11,R[1557],E,R[1558],15,[[["self"]],[R[1507]]]],[11,R[1559],E,R[1560],15,[[["self"]],[R[1508]]]],[11,R[1561],E,R[1562],15,[[["self"]],[R[1509]]]],[11,R[1563],E,R[1564],15,[[["self"]],[R[1563]]]],[11,R[1565],E,R[1566],15,[[["self"]],[R[1506]]]],[11,"lines",E,R[1500],15,[[["self"]],["lines"]]],[11,R[1567],E,R[1501],15,[[["self"]],[R[1568]]]],[11,"trim",E,R[1502],15,[[["self"]]]],[11,"trim_start",E,R[1569],15,[[["self"]]]],[11,"trim_end",E,R[1570],15,[[["self"]]]],[11,"trim_with",E,R[1502],15,[[["self"],["fnmut"]]]],[11,R[1571],E,R[1572],15,[[["self"],["fnmut"]]]],[11,R[1573],E,R[1574],15,[[["self"],["fnmut"]]]],[11,R[1575],E,R[1576],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1577],E,R[1578],15,[[["self"],["vec"]]]],[11,R[1579],E,R[1580],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1581],E,R[1582],15,[[["self"]]]],[11,R[1583],E,R[1584],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1585],E,R[1586],15,[[["self"],["vec"]]]],[11,R[1587],E,R[1588],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1589],E,R[1590],15,[[["self"]]]],[11,R[1591],E,R[1592],15,[[["self"]]]],[11,R[1593],E,R[1594],15,[[["self"]]]],[11,R[1595],E,R[1596],15,[[["self"]]]],[11,"is_ascii",E,R[1597],15,[[["self"]],["bool"]]],[11,"is_utf8",E,R[1598],15,[[["self"]],["bool"]]],[11,"last_byte",E,R[1599],15,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,R[1600],E,R[1601],15,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1602],E,R[1603],15,[[["self"],["usize"],["r"]]]],[8,"ByteVec",E,R[1503],N,N],[11,R[1654],E,R[1604],16,[[["asref"]],[["u8"],["vec",["u8"]]]]],[11,R[1605],E,R[1606],16,[[[R[1607]]],[["vec",["u8"]],[R[1607]],[R[2],["vec",R[1607]]]]]],[11,R[1608],E,R[1609],16,[[["osstr"]],["cow"]]],[11,R[1610],E,R[1611],16,[[["pathbuf"]],[[R[2],["vec","pathbuf"]],["pathbuf"],["vec",["u8"]]]]],[11,R[1612],E,R[1613],16,[[["path"]],["cow"]]],[11,"push_byte",E,R[1614],16,[[["self"],["u8"]]]],[11,"push_char",E,R[1615],16,[[["self"],["char"]]]],[11,"push_str",E,R[1616],16,[[["self"],["asref"]]]],[11,R[1617],E,R[1618],16,[[],[[R[63]],[R[2],[R[63],R[1504]]],[R[1504]]]]],[11,R[1619],E,R[1620],16,[[],[R[63]]]],[11,R[1621],E,R[1622],16,[[],[R[63]]]],[11,R[1623],E,R[1624],16,[[],[[R[1607]],["vec",["u8"]],[R[2],[R[1607],"vec"]]]]],[11,R[1625],E,R[1626],16,[[],[R[1607]]]],[11,R[1627],E,R[1628],16,[[],[["pathbuf"],["vec",["u8"]],[R[2],["pathbuf","vec"]]]]],[11,R[1629],E,R[1630],16,[[],["pathbuf"]]],[11,"pop_byte",E,R[1631],16,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"pop_char",E,R[1632],16,[[["self"]],[[R[32],["char"]],["char"]]]],[11,R[1633],E,R[1634],16,[[["self"],["usize"]],["char"]]],[11,R[1635],E,R[1636],16,[[["self"],["usize"],["char"]]]],[11,"insert_str",E,R[1637],16,[[["self"],["usize"],["asref"]]]],[11,R[1638],E,R[1639],16,[[["self"],["b"],["r"]]]],[11,R[1640],E,R[1641],16,[[["self"],["r"]],["drainbytes"]]],[11,R[95],E,E,17,[[["self"]],[R[63]]]],[11,R[37],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"],[T]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,R[95],E,E,18,[[["self"]],[R[63]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[37],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"],[T]]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,19,[[],[U]]],[11,R[30],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[37],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"],[T]]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,R[30],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,R[30],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,R[30],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,R[30],E,E,23,[[],["i"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,24,[[],[U]]],[11,R[30],E,E,24,[[],["i"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,R[30],E,E,25,[[],["i"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,R[30],E,E,26,[[],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,R[30],E,E,27,[[],["i"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"into",E,E,28,[[],[U]]],[11,R[30],E,E,28,[[],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",E,E,29,[[],[U]]],[11,R[30],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,R[30],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,R[95],E,E,2,[[["self"]],[R[63]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,R[30],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,R[30],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[30],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,R[30],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,R[30],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,R[30],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,R[30],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,R[30],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,R[30],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[37],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"],[T]]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,R[30],E,E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,R[95],E,E,14,[[["self"]],[R[63]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into","bstr::io",E,31,[[],[U]]],[11,R[30],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"clone","bstr",E,18,[[["self"]],["bstring"]]],[11,"clone",E,E,0,[[["self"]],["finder"]]],[11,"clone",E,E,1,[[["self"]],[R[1484]]]],[11,"clone",E,E,19,[[["self"]],["bytes"]]],[11,"clone",E,E,4,[[["self"]],[R[1554]]]],[11,"clone",E,E,5,[[["self"]],[R[1505]]]],[11,"clone",E,E,6,[[["self"]],[R[1563]]]],[11,"clone",E,E,7,[[["self"]],[R[1506]]]],[11,"clone",E,E,8,[[["self"]],["words"]]],[11,"clone",E,E,9,[[["self"]],[R[1507]]]],[11,"clone",E,E,10,[[["self"]],[R[1508]]]],[11,"clone",E,E,11,[[["self"]],[R[1509]]]],[11,"clone",E,E,12,[[["self"]],["chars"]]],[11,"clone",E,E,13,[[["self"]],[R[1510]]]],[11,"cmp",E,E,18,[[["self"],["bstring"]],[R[31]]]],[11,"cmp",E,E,17,[[["self"],["bstr"]],[R[31]]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,30,[[["self"]],["usize"]]],[11,R[99],E,E,18,[[],["bstring"]]],[11,"from",E,E,18,[[],["bstring"]]],[11,"from",E,E,18,[[["vec",["u8"]],["u8"]],["bstring"]]],[11,"from",E,E,18,[[["str"]],["bstring"]]],[11,"from",E,E,18,[[[R[63]]],["bstring"]]],[11,"from",E,E,18,[[["bstr"]],["bstring"]]],[11,R[117],E,E,18,[[["self"],["bstring"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],["vec"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],[R[63]]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],["str"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],["str"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],["bstr"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],["bstring"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,18,[[["self"],["bstr"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],["bstr"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],["str"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],["str"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],["vec"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,17,[[["self"],[R[63]]],[[R[31]],[R[32],[R[31]]]]]],[11,R[119],E,E,19,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,R[119],E,E,30,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,R[119],E,E,4,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[119],E,E,5,[[["self"]],[R[32]]]],[11,R[119],E,E,12,[[["self"]],[[R[32],["char"]],["char"]]]],[11,R[119],E,E,13,[[["self"]],[R[32]]]],[11,"eq",E,E,2,[[["self"],[R[1504]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[1504]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["bstring"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,18,[[["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[63]]],["bool"]]],[11,"eq",E,E,18,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["bstr"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["bstring"]],["bool"]]],[11,"eq",E,E,18,[[["self"],["bstr"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["bstr"]],["bool"]]],[11,"eq",E,E,17,[[["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,17,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[63]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[109]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[109]]],["bool"]]],[11,"next",E,E,22,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"next",E,E,23,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"next",E,E,19,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"next",E,E,20,[[["self"]],[R[32]]]],[11,"next",E,E,21,[[["self"]],[R[32]]]],[11,"next",E,E,26,[[["self"]],[R[32]]]],[11,"next",E,E,29,[[["self"]],[R[32]]]],[11,"next",E,E,27,[[["self"]],[R[32]]]],[11,"next",E,E,28,[[["self"]],[R[32]]]],[11,"next",E,E,24,[[["self"]],[R[32]]]],[11,"next",E,E,25,[[["self"]],[R[32]]]],[11,"next",E,E,30,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"next","bstr::io",E,31,[[["self"]],[[R[2],["vec"]],[R[32],[R[2]]]]]],[11,"next","bstr",E,4,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"next",E,E,5,[[["self"]],[R[32]]]],[11,"next",E,E,6,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"next",E,E,7,[[["self"]],[R[32]]]],[11,"next",E,E,8,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"next",E,E,9,[[["self"]],[R[32]]]],[11,"next",E,E,10,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"next",E,E,11,[[["self"]],[R[32]]]],[11,"next",E,E,12,[[["self"]],[[R[32],["char"]],["char"]]]],[11,"next",E,E,13,[[["self"]],[R[32]]]],[11,R[37],E,E,17,[[["self"]],["bstring"]]],[11,"as_mut",E,E,18,[[["self"]]]],[11,"as_mut",E,E,18,[[["self"]],["bstr"]]],[11,"as_mut",E,E,17,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]]]],[11,"as_ref",E,E,18,[[["self"]],["bstr"]]],[11,"as_ref",E,E,17,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","bstr::io",E,31,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","bstr",E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[2]]]],[11,"deref",E,E,18,[[["self"]],["vec"]]],[11,"deref",E,E,17,[[["self"]]]],[11,R[14],E,E,18,[[["self"]],["vec"]]],[11,R[14],E,E,17,[[["self"]]]],[11,"index",E,E,17,[[["self"],["usize"]],["u8"]]],[11,"index",E,E,17,[[["self"],[R[2113]]],["bstr"]]],[11,"index",E,E,17,[[["self"],["range",["usize"]],["usize"]],["bstr"]]],[11,"index",E,E,17,[[["self"],[R[1188],["usize"]],["usize"]],["bstr"]]],[11,"index",E,E,17,[[["self"],[R[2111],["usize"]],["usize"]],["bstr"]]],[11,"index",E,E,17,[[["self"],["usize"],["rangeto",["usize"]]],["bstr"]]],[11,"index",E,E,17,[[["self"],[R[1512],["usize"]],["usize"]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],["usize"]],["u8"]]],[11,R[1511],E,E,17,[[["self"],[R[2113]]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],["range",["usize"]],["usize"]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],[R[1188],["usize"]],["usize"]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],[R[2111],["usize"]],["usize"]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],["usize"],["rangeto",["usize"]]],["bstr"]]],[11,R[1511],E,E,17,[[["self"],[R[1512],["usize"]],["usize"]],["bstr"]]],[11,"hash",E,E,17,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[176],E,E,18,[[[R[120]]],["bstring"]]],[11,R[9],E,E,18,[[["self"]],["bstr"]]],[11,R[409],E,E,2,[[["self"]],["str"]]],[11,R[409],E,E,14,[[["self"]],["str"]]],[11,R[1655],E,E,17,[[["self"],["s"]],[R[2]]]],[11,R[1655],E,E,18,[[["self"],["s"]],[R[2]]]],[11,R[1193],E,E,18,[[["d"]],[[R[2],["bstring"]],["bstring"]]]],[11,"as_bstr",E,R[1513],15,[[["self"]],["bstr"]]],[11,R[1514],E,R[1515],15,[[["self"]],["bstr"]]],[11,R[1516],E,R[1517],15,[[["osstr"]],[R[32]]]],[11,R[2238],E,R[1518],15,[[["path"]],[R[32]]]],[11,"to_str",E,R[1519],15,[[["self"]],[[R[2],["str",R[109]]],["str"],[R[109]]]]],[11,R[1520],E,R[1521],15,[[["self"]],["str"]]],[11,R[1522],E,R[1523],15,[[["self"]],[["str"],["cow",["str"]]]]],[11,R[1524],E,R[1525],15,[[["self"],[R[63]]]]],[11,"to_os_str",E,R[1526],15,[[["self"]],[[R[2],["osstr",R[109]]],["osstr"],[R[109]]]]],[11,R[1527],E,R[1528],15,[[["self"]],[["cow",["osstr"]],["osstr"]]]],[11,"to_path",E,R[1529],15,[[["self"]],[["path"],[R[2],["path",R[109]]],[R[109]]]]],[11,R[1530],E,R[1531],15,[[["self"]],[["path"],["cow",["path"]]]]],[11,"repeatn",E,R[1532],15,[[["self"],["usize"]],[["u8"],["vec",["u8"]]]]],[11,R[1533],E,R[1534],15,[[["self"],["asref"]],["bool"]]],[11,R[1535],E,R[1489],15,[[["self"],["asref"]],["bool"]]],[11,R[1536],E,R[1489],15,[[["self"],["asref"]],["bool"]]],[11,R[1537],E,R[1538],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1539],E,R[1540],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1541],E,R[1542],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,R[1543],E,R[1544],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"find",E,R[1491],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind",E,R[1492],15,[[["self"],["asref"]],[[R[32],["usize"]],["usize"]]]],[11,"find_iter",E,R[1490],15,[[["self"],["b"]],["find"]]],[11,"rfind_iter",E,R[1490],15,[[["self"],["b"]],[R[1545]]]],[11,"find_byte",E,R[1491],15,[[["self"],["u8"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind_byte",E,R[1492],15,[[["self"],["u8"]],[[R[32],["usize"]],["usize"]]]],[11,"find_char",E,R[1491],15,[[["self"],["char"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind_char",E,R[1492],15,[[["self"],["char"]],[[R[32],["usize"]],["usize"]]]],[11,"fields",E,R[1493],15,[[["self"]],["fields"]]],[11,R[1546],E,R[1493],15,[[["self"],["fnmut"]],[["fieldswith"],["fnmut"]]]],[11,"split_str",E,R[1494],15,[[["self"],["b"]],["split"]]],[11,"rsplit_str",E,R[1494],15,[[["self"],["b"]],[R[1547]]]],[11,"splitn_str",E,R[1495],15,[[["self"],["usize"],["b"]],["splitn"]]],[11,R[1548],E,R[1495],15,[[["self"],["usize"],["b"]],[R[1549]]]],[11,"replace",E,R[1496],15,[[["self"],["asref"]],[["u8"],["vec",["u8"]]]]],[11,"replacen",E,R[1497],15,[[["self"],["asref"],["usize"]],[["u8"],["vec",["u8"]]]]],[11,R[1550],E,R[1496],15,[[["self"],["asref"],["vec"]]]],[11,R[1551],E,R[1497],15,[[["self"],["asref"],["usize"],["vec"]]]],[11,"bytes",E,R[1552],15,[[["self"]],["bytes"]]],[11,"chars",E,R[1498],15,[[["self"]],["chars"]]],[11,R[1553],E,R[1498],15,[[["self"]],[R[1510]]]],[11,R[1554],E,R[1499],15,[[["self"]],[R[1554]]]],[11,R[1555],E,R[1499],15,[[["self"]],[R[1505]]]],[11,"words",E,R[1556],15,[[["self"]],["words"]]],[11,R[1557],E,R[1558],15,[[["self"]],[R[1507]]]],[11,R[1559],E,R[1560],15,[[["self"]],[R[1508]]]],[11,R[1561],E,R[1562],15,[[["self"]],[R[1509]]]],[11,R[1563],E,R[1564],15,[[["self"]],[R[1563]]]],[11,R[1565],E,R[1566],15,[[["self"]],[R[1506]]]],[11,"lines",E,R[1500],15,[[["self"]],["lines"]]],[11,R[1567],E,R[1501],15,[[["self"]],[R[1568]]]],[11,"trim",E,R[1502],15,[[["self"]]]],[11,"trim_start",E,R[1569],15,[[["self"]]]],[11,"trim_end",E,R[1570],15,[[["self"]]]],[11,"trim_with",E,R[1502],15,[[["self"],["fnmut"]]]],[11,R[1571],E,R[1572],15,[[["self"],["fnmut"]]]],[11,R[1573],E,R[1574],15,[[["self"],["fnmut"]]]],[11,R[1575],E,R[1576],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1577],E,R[1578],15,[[["self"],["vec"]]]],[11,R[1579],E,R[1580],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1581],E,R[1582],15,[[["self"]]]],[11,R[1583],E,R[1584],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1585],E,R[1586],15,[[["self"],["vec"]]]],[11,R[1587],E,R[1588],15,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1589],E,R[1590],15,[[["self"]]]],[11,R[1591],E,R[1592],15,[[["self"]]]],[11,R[1593],E,R[1594],15,[[["self"]]]],[11,R[1595],E,R[1596],15,[[["self"]]]],[11,"is_ascii",E,R[1597],15,[[["self"]],["bool"]]],[11,"is_utf8",E,R[1598],15,[[["self"]],["bool"]]],[11,"last_byte",E,R[1599],15,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,R[1600],E,R[1601],15,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1602],E,R[1603],15,[[["self"],["usize"],["r"]]]],[11,R[1654],E,R[1604],16,[[["asref"]],[["u8"],["vec",["u8"]]]]],[11,R[1605],E,R[1606],16,[[[R[1607]]],[["vec",["u8"]],[R[1607]],[R[2],["vec",R[1607]]]]]],[11,R[1608],E,R[1609],16,[[["osstr"]],["cow"]]],[11,R[1610],E,R[1611],16,[[["pathbuf"]],[[R[2],["vec","pathbuf"]],["pathbuf"],["vec",["u8"]]]]],[11,R[1612],E,R[1613],16,[[["path"]],["cow"]]],[11,"push_byte",E,R[1614],16,[[["self"],["u8"]]]],[11,"push_char",E,R[1615],16,[[["self"],["char"]]]],[11,"push_str",E,R[1616],16,[[["self"],["asref"]]]],[11,R[1617],E,R[1618],16,[[],[[R[63]],[R[2],[R[63],R[1504]]],[R[1504]]]]],[11,R[1619],E,R[1620],16,[[],[R[63]]]],[11,R[1621],E,R[1622],16,[[],[R[63]]]],[11,R[1623],E,R[1624],16,[[],[[R[1607]],["vec",["u8"]],[R[2],[R[1607],"vec"]]]]],[11,R[1625],E,R[1626],16,[[],[R[1607]]]],[11,R[1627],E,R[1628],16,[[],[["pathbuf"],["vec",["u8"]],[R[2],["pathbuf","vec"]]]]],[11,R[1629],E,R[1630],16,[[],["pathbuf"]]],[11,"pop_byte",E,R[1631],16,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"pop_char",E,R[1632],16,[[["self"]],[[R[32],["char"]],["char"]]]],[11,R[1633],E,R[1634],16,[[["self"],["usize"]],["char"]]],[11,R[1635],E,R[1636],16,[[["self"],["usize"],["char"]]]],[11,"insert_str",E,R[1637],16,[[["self"],["usize"],["asref"]]]],[11,R[1638],E,R[1639],16,[[["self"],["b"],["r"]]]],[11,R[1640],E,R[1641],16,[[["self"],["r"]],["drainbytes"]]]],"p":[[3,"Finder"],[3,R[1642]],[3,R[1643]],[8,"BufReadExt"],[3,"Graphemes"],[3,R[1644]],[3,"Sentences"],[3,R[1645]],[3,"Words"],[3,R[1646]],[3,R[1647]],[3,R[1648]],[3,"Chars"],[3,R[1649]],[3,R[2273]],[8,"ByteSlice"],[8,"ByteVec"],[3,"BStr"],[3,"BString"],[3,"Bytes"],[3,"Fields"],[3,"FieldsWith"],[3,"Find"],[3,R[1650]],[3,"Lines"],[3,R[1651]],[3,"Split"],[3,"SplitN"],[3,R[1652]],[3,R[1653]],[3,"DrainBytes"],[3,"ByteLines"]]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and…","i":[[4,R[163],"byteorder","Defines big-endian serialization.",N,N],[4,R[164],E,"Defines little-endian serialization.",N,N],[6,"BE",E,"A type alias for [`BigEndian`].",N,N],[6,"LE",E,"A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian",E,"Defines network byte order serialization.",N,N],[6,"NativeEndian",E,"Defines system native-endian serialization.",N,N],[8,R[162],E,"`ByteOrder` describes types that can serialize integers as…",N,N],[10,R[157],E,"Reads an unsigned 16 bit integer from `buf`.",0,[[],["u16"]]],[11,"read_u24",E,"Reads an unsigned 24 bit integer from `buf`, stored in u32.",0,[[],["u32"]]],[10,R[158],E,"Reads an unsigned 32 bit integer from `buf`.",0,[[],["u32"]]],[11,"read_u48",E,"Reads an unsigned 48 bit integer from `buf`, stored in u64.",0,[[],["u64"]]],[10,R[159],E,"Reads an unsigned 64 bit integer from `buf`.",0,[[],["u64"]]],[10,R[134],E,"Reads an unsigned 128 bit integer from `buf`.",0,[[],["u128"]]],[10,R[135],E,R[128],0,[[["usize"]],["u64"]]],[10,R[136],E,R[128],0,[[["usize"]],["u128"]]],[10,R[137],E,"Writes an unsigned 16 bit integer `n` to `buf`.",0,[[["u16"]]]],[11,"write_u24",E,"Writes an unsigned 24 bit integer `n` to `buf`, stored in…",0,[[["u32"]]]],[10,R[138],E,"Writes an unsigned 32 bit integer `n` to `buf`.",0,[[["u32"]]]],[11,"write_u48",E,"Writes an unsigned 48 bit integer `n` to `buf`, stored in…",0,[[["u64"]]]],[10,R[139],E,"Writes an unsigned 64 bit integer `n` to `buf`.",0,[[["u64"]]]],[10,R[140],E,"Writes an unsigned 128 bit integer `n` to `buf`.",0,[[["u128"]]]],[10,R[141],E,R[129],0,[[["usize"],["u64"]]]],[10,R[142],E,R[129],0,[[["u128"],["usize"]]]],[11,"read_i16",E,"Reads a signed 16 bit integer from `buf`.",0,[[],["i16"]]],[11,"read_i24",E,"Reads a signed 24 bit integer from `buf`, stored in i32.",0,[[],["i32"]]],[11,"read_i32",E,"Reads a signed 32 bit integer from `buf`.",0,[[],["i32"]]],[11,"read_i48",E,"Reads a signed 48 bit integer from `buf`, stored in i64.",0,[[],["i64"]]],[11,"read_i64",E,"Reads a signed 64 bit integer from `buf`.",0,[[],["i64"]]],[11,"read_i128",E,"Reads a signed 128 bit integer from `buf`.",0,[[],["i128"]]],[11,"read_int",E,R[130],0,[[["usize"]],["i64"]]],[11,"read_int128",E,R[130],0,[[["usize"]],["i128"]]],[11,"read_f32",E,"Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[],["f32"]]],[11,"read_f64",E,"Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[],["f64"]]],[11,"write_i16",E,"Writes a signed 16 bit integer `n` to `buf`.",0,[[["i16"]]]],[11,"write_i24",E,"Writes a signed 24 bit integer `n` to `buf`, stored in i32.",0,[[["i32"]]]],[11,"write_i32",E,"Writes a signed 32 bit integer `n` to `buf`.",0,[[["i32"]]]],[11,"write_i48",E,"Writes a signed 48 bit integer `n` to `buf`, stored in i64.",0,[[["i64"]]]],[11,"write_i64",E,"Writes a signed 64 bit integer `n` to `buf`.",0,[[["i64"]]]],[11,"write_i128",E,"Writes a signed 128 bit integer `n` to `buf`.",0,[[["i128"]]]],[11,"write_int",E,R[131],0,[[["i64"],["usize"]]]],[11,"write_int128",E,R[131],0,[[["i128"],["usize"]]]],[11,"write_f32",E,"Writes a IEEE754 single-precision (4 bytes) floating point…",0,[[["f32"]]]],[11,"write_f64",E,"Writes a IEEE754 double-precision (8 bytes) floating point…",0,[[["f64"]]]],[10,R[143],E,"Reads unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,R[144],E,"Reads unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,R[145],E,"Reads unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,R[146],E,"Reads unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i16_into",E,"Reads signed 16 bit integers from `src` to `dst`.",0,[[]]],[11,"read_i32_into",E,"Reads signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i64_into",E,"Reads signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"read_i128_into",E,"Reads signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"read_f32_into",E,R[132],0,[[]]],[11,"read_f32_into_unchecked",E,R[133],0,[[]]],[11,"read_f64_into",E,R[132],0,[[]]],[11,"read_f64_into_unchecked",E,R[133],0,[[]]],[10,R[147],E,"Writes unsigned 16 bit integers from `src` into `dst`.",0,[[]]],[10,R[148],E,"Writes unsigned 32 bit integers from `src` into `dst`.",0,[[]]],[10,R[149],E,"Writes unsigned 64 bit integers from `src` into `dst`.",0,[[]]],[10,R[150],E,"Writes unsigned 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i16_into",E,"Writes signed 16 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i32_into",E,"Writes signed 32 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i64_into",E,"Writes signed 64 bit integers from `src` into `dst`.",0,[[]]],[11,"write_i128_into",E,"Writes signed 128 bit integers from `src` into `dst`.",0,[[]]],[11,"write_f32_into",E,"Writes IEEE754 single-precision (4 bytes) floating point…",0,[[]]],[11,"write_f64_into",E,"Writes IEEE754 double-precision (8 bytes) floating point…",0,[[]]],[10,R[151],E,"Converts the given slice of unsigned 16 bit integers to a…",0,[[]]],[10,R[152],E,"Converts the given slice of unsigned 32 bit integers to a…",0,[[]]],[10,R[153],E,"Converts the given slice of unsigned 64 bit integers to a…",0,[[]]],[10,R[154],E,"Converts the given slice of unsigned 128 bit integers to a…",0,[[]]],[11,"from_slice_i16",E,"Converts the given slice of signed 16 bit integers to a…",0,[[]]],[11,"from_slice_i32",E,"Converts the given slice of signed 32 bit integers to a…",0,[[]]],[11,"from_slice_i64",E,"Converts the given slice of signed 64 bit integers to a…",0,[[]]],[11,"from_slice_i128",E,"Converts the given slice of signed 128 bit integers to a…",0,[[]]],[10,R[155],E,"Converts the given slice of IEEE754 single-precision (4…",0,[[]]],[10,R[156],E,"Converts the given slice of IEEE754 double-precision (8…",0,[[]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[157],E,E,1,[[],["u16"]]],[11,R[158],E,E,1,[[],["u32"]]],[11,R[159],E,E,1,[[],["u64"]]],[11,R[134],E,E,1,[[],["u128"]]],[11,R[135],E,E,1,[[["usize"]],["u64"]]],[11,R[136],E,E,1,[[["usize"]],["u128"]]],[11,R[137],E,E,1,[[["u16"]]]],[11,R[138],E,E,1,[[["u32"]]]],[11,R[139],E,E,1,[[["u64"]]]],[11,R[140],E,E,1,[[["u128"]]]],[11,R[141],E,E,1,[[["usize"],["u64"]]]],[11,R[142],E,E,1,[[["u128"],["usize"]]]],[11,R[143],E,E,1,[[]]],[11,R[144],E,E,1,[[]]],[11,R[145],E,E,1,[[]]],[11,R[146],E,E,1,[[]]],[11,R[147],E,E,1,[[]]],[11,R[148],E,E,1,[[]]],[11,R[149],E,E,1,[[]]],[11,R[150],E,E,1,[[]]],[11,R[151],E,E,1,[[]]],[11,R[152],E,E,1,[[]]],[11,R[153],E,E,1,[[]]],[11,R[154],E,E,1,[[]]],[11,R[155],E,E,1,[[]]],[11,R[156],E,E,1,[[]]],[11,R[157],E,E,2,[[],["u16"]]],[11,R[158],E,E,2,[[],["u32"]]],[11,R[159],E,E,2,[[],["u64"]]],[11,R[134],E,E,2,[[],["u128"]]],[11,R[135],E,E,2,[[["usize"]],["u64"]]],[11,R[136],E,E,2,[[["usize"]],["u128"]]],[11,R[137],E,E,2,[[["u16"]]]],[11,R[138],E,E,2,[[["u32"]]]],[11,R[139],E,E,2,[[["u64"]]]],[11,R[140],E,E,2,[[["u128"]]]],[11,R[141],E,E,2,[[["usize"],["u64"]]]],[11,R[142],E,E,2,[[["u128"],["usize"]]]],[11,R[143],E,E,2,[[]]],[11,R[144],E,E,2,[[]]],[11,R[145],E,E,2,[[]]],[11,R[146],E,E,2,[[]]],[11,R[147],E,E,2,[[]]],[11,R[148],E,E,2,[[]]],[11,R[149],E,E,2,[[]]],[11,R[150],E,E,2,[[]]],[11,R[151],E,E,2,[[]]],[11,R[152],E,E,2,[[]]],[11,R[153],E,E,2,[[]]],[11,R[154],E,E,2,[[]]],[11,R[155],E,E,2,[[]]],[11,R[156],E,E,2,[[]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,1,[[["self"],[R[160]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[161]]],["bool"]]],[11,"cmp",E,E,1,[[["self"],[R[160]]],[R[31]]]],[11,"cmp",E,E,2,[[["self"],[R[161]]],[R[31]]]],[11,R[117],E,E,1,[[["self"],[R[160]]],[[R[32],[R[31]]],[R[31]]]]],[11,R[117],E,E,2,[[["self"],[R[161]]],[[R[32],[R[31]]],[R[31]]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"clone",E,E,1,[[["self"]],[R[160]]]],[11,"clone",E,E,2,[[["self"]],[R[161]]]],[11,R[99],E,E,1,[[],[R[160]]]],[11,R[99],E,E,2,[[],[R[161]]]]],"p":[[8,R[162]],[4,R[163]],[4,R[164]]]};
searchIndex["cast"]={"doc":"Ergonomic, checked cast functions for primitive types","i":[[4,"Error","cast","Cast errors",N,N],[13,"Infinite",E,"Infinite value casted to a type that can only represent…",0,N],[13,"NaN",E,"NaN value casted to a type that can't represent a NaN value",0,N],[13,"Overflow",E,"Source value is greater than the maximum value that the…",0,N],[13,"Underflow",E,"Source value is smaller than the minimum value that the…",0,N],[5,"f32",E,R[36],N,[[[T]]]],[5,"f64",E,R[36],N,[[[T]]]],[5,"i8",E,R[36],N,[[[T]]]],[5,"i16",E,R[36],N,[[[T]]]],[5,"i32",E,R[36],N,[[[T]]]],[5,"i64",E,R[36],N,[[[T]]]],[5,"isize",E,R[36],N,[[[T]]]],[5,"u8",E,R[36],N,[[[T]]]],[5,"u16",E,R[36],N,[[[T]]]],[5,"u32",E,R[36],N,[[[T]]]],[5,"u64",E,R[36],N,[[[T]]]],[5,"usize",E,R[36],N,[[[T]]]],[8,"From",E,"The \"cast from\" operation",N,N],[16,"Output",E,"The result of the cast operation: either `Self` or…",1,N],[10,"cast",E,"Checked cast from `Src` to `Self`",1,[[["src"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"clone",E,E,0,[[["self"]],["error"]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,0,[[["self"]],["str"]]]],"p":[[4,"Error"],[8,"From"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["clap"]={"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"Arg","clap","The abstract representation of a command line argument.…",N,N],[3,"ArgGroup",E,"`ArgGroup`s are a family of related [arguments] and way…",N,N],[3,R[716],E,"Used to get information about the arguments that where…",N,N],[3,"OsValues",E,R[681],N,N],[3,R[717],E,"The abstract representation of a command line subcommand.",N,N],[3,"Values",E,R[681],N,N],[3,"App",E,"Used to create a representation of a command line program…",N,N],[3,"Error",E,"Command Line Argument Parser Error",N,N],[12,"message",E,"Formatted error message",0,N],[12,"kind",E,"The type of error",0,N],[12,"info",E,"Any additional information passed along, such as the…",0,N],[4,R[713],E,"Various settings that apply to arguments and may be set,…",N,N],[13,"Required",E,"The argument must be used",1,N],[13,"Multiple",E,"The argument may be used multiple times such as `--flag…",1,N],[13,"EmptyValues",E,"The argument allows empty values such as `--option \"\"`",1,N],[13,"Global",E,"The argument should be propagated down through all child…",1,N],[13,"Hidden",E,"The argument should not be shown in help text",1,N],[13,"TakesValue",E,"The argument accepts a value, such as `--option <value>`",1,N],[13,"UseValueDelimiter",E,"Determines if the argument allows values to be grouped via…",1,N],[13,R[683],E,"Prints the help text on the line after the argument",1,N],[13,"RequireDelimiter",E,"Requires the use of a value delimiter for all multiple…",1,N],[13,"HidePossibleValues",E,"Hides the possible values from the help string",1,N],[13,R[682],E,"Allows vals that start with a '-'",1,N],[13,"RequireEquals",E,"Require options use `--option=val` syntax",1,N],[13,"Last",E,"Specifies that the arg is the last positional argument and…",1,N],[13,"HideDefaultValue",E,"Hides the default value from the help string",1,N],[13,"CaseInsensitive",E,"Makes `Arg::possible_values` case insensitive",1,N],[13,"HideEnvValues",E,"Hides ENV values in the help message",1,N],[13,"HiddenShortHelp",E,"The argument should not be shown in short help text",1,N],[13,"HiddenLongHelp",E,"The argument should not be shown in long help text",1,N],[4,R[714],E,"Application level settings, which affect how [`App`]…",N,N],[13,"AllowInvalidUtf8",E,"Specifies that any invalid UTF-8 code points should not be…",2,N],[13,"AllArgsOverrideSelf",E,"Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",2,N],[13,R[682],E,"Specifies that leading hyphens are allowed in argument…",2,N],[13,"AllowNegativeNumbers",E,"Allows negative numbers to pass as values. This is similar…",2,N],[13,"AllowMissingPositional",E,"Allows one to implement two styles of CLIs where…",2,N],[13,"AllowExternalSubcommands",E,"Specifies that an unexpected positional argument, which…",2,N],[13,"ArgsNegateSubcommands",E,"Specifies that use of a valid [argument] negates…",2,N],[13,"ArgRequiredElseHelp",E,"Specifies that the help text should be displayed (and then…",2,N],[13,"ColoredHelp",E,"Uses colorized help messages.",2,N],[13,"ColorAuto",E,"Enables colored output only when the output is going to a…",2,N],[13,"ColorAlways",E,"Enables colored output regardless of whether or not the…",2,N],[13,"ColorNever",E,"Disables colored output no matter if the output is going…",2,N],[13,"DontCollapseArgsInUsage",E,"Disables the automatic collapsing of positional args into…",2,N],[13,"DontDelimitTrailingValues",E,"Disables the automatic delimiting of values when `--` or…",2,N],[13,"DisableHelpFlags",E,"Disables `-h` and `--help` [`App`] without affecting any…",2,N],[13,"DisableHelpSubcommand",E,"Disables the `help` subcommand",2,N],[13,"DisableVersion",E,"Disables `-V` and `--version` [`App`] without affecting…",2,N],[13,"DeriveDisplayOrder",E,"Displays the arguments and [`SubCommand`]s in the help…",2,N],[13,"GlobalVersion",E,"Specifies to use the version of the current command for…",2,N],[13,"Hidden",E,"Specifies that this [`SubCommand`] should be hidden from…",2,N],[13,"HidePossibleValuesInHelp",E,"Tells `clap` not to print possible values when displaying…",2,N],[13,"InferSubcommands",E,"Tries to match unknown args to partial [`subcommands`] or…",2,N],[13,"NoBinaryName",E,"Specifies that the parser should not assume the first…",2,N],[13,R[683],E,"Places the help string for all arguments on the line after…",2,N],[13,"PropagateGlobalValuesDown",E,"DEPRECATED: This setting is no longer required in order to…",2,N],[13,"SubcommandsNegateReqs",E,"Allows [`SubCommand`]s to override all requirements of the…",2,N],[13,"SubcommandRequiredElseHelp",E,"Specifies that the help text should be displayed (before…",2,N],[13,"StrictUtf8",E,"Specifies that any invalid UTF-8 code points should be…",2,N],[13,"SubcommandRequired",E,"Allows specifying that if no [`SubCommand`] is present at…",2,N],[13,"TrailingVarArg",E,"Specifies that the final positional argument is a \"VarArg\"…",2,N],[13,"UnifiedHelpMessage",E,"Groups flags and options together, presenting a more…",2,N],[13,"VersionlessSubcommands",E,"Disables `-V` and `--version` for all [`SubCommand`]s…",2,N],[13,"WaitOnError",E,"Will display a message \"Press [ENTER]/[RETURN] to…",2,N],[4,R[715],E,"Command line argument parser kind of error",N,N],[13,"InvalidValue",E,"Occurs when an [`Arg`] has a set of possible values, and…",3,N],[13,"UnknownArgument",E,"Occurs when a user provides a flag, option, argument or…",3,N],[13,"InvalidSubcommand",E,R[684],3,N],[13,"UnrecognizedSubcommand",E,R[684],3,N],[13,"EmptyValue",E,"Occurs when the user provides an empty value for an option…",3,N],[13,"ValueValidation",E,"Occurs when the user provides a value for an argument with…",3,N],[13,"TooManyValues",E,"Occurs when a user provides more values for an argument…",3,N],[13,"TooFewValues",E,"Occurs when the user provides fewer values for an argument…",3,N],[13,"WrongNumberOfValues",E,"Occurs when the user provides a different number of values…",3,N],[13,"ArgumentConflict",E,"Occurs when the user provides two values which conflict…",3,N],[13,"MissingRequiredArgument",E,"Occurs when the user does not provide one or more required…",3,N],[13,"MissingSubcommand",E,"Occurs when a subcommand is required (as defined by…",3,N],[13,"MissingArgumentOrSubcommand",E,"Occurs when either an argument or [`SubCommand`] is…",3,N],[13,"UnexpectedMultipleUsage",E,"Occurs when the user provides multiple values to an…",3,N],[13,R[2232],E,"Occurs when the user provides a value containing invalid…",3,N],[13,"HelpDisplayed",E,"Not a true \"error\" as it means `--help` or similar was…",3,N],[13,"VersionDisplayed",E,"Not a true \"error\" as it means `--version` or similar was…",3,N],[13,"ArgumentNotFound",E,"Occurs when using the [`value_t!`] and [`values_t!`]…",3,N],[13,"Io",E,"Represents an [I/O error]. Can occur when writing to…",3,N],[13,"Format",E,"Represents a [Format error] (which is a part of…",3,N],[4,"Shell",E,"Describes which shell to produce a completions file for",N,N],[13,"Bash",E,"Generates a .bash completion file for the Bourne Again…",4,N],[13,"Fish",E,"Generates a .fish completion file for the Friendly…",4,N],[13,"Zsh",E,"Generates a completion file for the Z SHell (ZSH)",4,N],[13,"PowerShell",E,"Generates a completion file for PowerShell",4,N],[13,"Elvish",E,"Generates a completion file for Elvish",4,N],[11,"new",E,"Creates a new instance of an application requiring a name.…",5,[[["into",[R[63]]],[R[63]]],["self"]]],[11,"get_name",E,"Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name",E,"Get the name of the binary",5,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"with_defaults",E,"Creates a new instance of an application requiring a name,…",5,[[["into",[R[63]]],[R[63]]],["self"]]],[11,"author",E,"Sets a string of author(s) that will be displayed to the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"bin_name",E,"Overrides the system-determined binary name. This should…",5,[[["into",[R[63]]],[R[63]]],["self"]]],[11,"about",E,R[685],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_about",E,R[685],5,[[["into",["str"]],["str"]],["self"]]],[11,"name",E,"Sets the program's name. This will be displayed when…",5,[[["into",[R[63]]],[R[63]]],["self"]]],[11,"after_help",E,R[686],5,[[["into",["str"]],["str"]],["self"]]],[11,"before_help",E,R[686],5,[[["into",["str"]],["str"]],["self"]]],[11,R[529],E,R[687],5,[[["into",["str"]],["str"]],["self"]]],[11,"long_version",E,R[687],5,[[["into",["str"]],["str"]],["self"]]],[11,"usage",E,"Sets a custom usage string to override the auto-generated…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help",E,"Sets a custom help message and overrides the…",5,[[["into",["str"]],["str"]],["self"]]],[11,"help_short",E,"Sets the [`short`] for the auto-generated `help` argument.",5,[[["asref",["str"]],["str"]],["self"]]],[11,"version_short",E,"Sets the [`short`] for the auto-generated `version`…",5,[[["asref",["str"]],["str"]],["self"]]],[11,"help_message",E,"Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message",E,"Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template",E,"Sets the help template to be used, overriding the default…",5,[[["into",["str"]],["str"]],["self"]]],[11,"setting",E,"Enables a single command, or [`SubCommand`], level settings.",5,[[[R[688]]],["self"]]],[11,"settings",E,"Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting",E,"Enables a single setting that is propagated down through…",5,[[[R[688]]],["self"]]],[11,"global_settings",E,"Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting",E,"Disables a single command, or [`SubCommand`], level setting.",5,[[[R[688]]],["self"]]],[11,"unset_settings",E,"Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width",E,"Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width",E,"Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg",E,"Adds an [argument] to the list of valid possibilities.",5,[[["into",["arg"]],["arg"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage",E,"A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage",E,"Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`SubCommand`] alias, which function as…",5,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,R[695],E,"Allows adding a [`SubCommand`] alias that functions…",5,[[["into",["str"]],["str"]],["self"]]],[11,R[696],E,"Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group",E,"Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[[R[711]]],["self"]]],[11,"groups",E,"Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,R[701],E,"Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands",E,"Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,R[698],E,"Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help",E,R[689],5,[[["self"]],[R[690]]]],[11,"print_long_help",E,R[689],5,[[["self"]],[R[690]]]],[11,"write_help",E,R[691],5,[[["self"],["w"]],[R[690]]]],[11,"write_long_help",E,R[691],5,[[["self"],["w"]],[R[690]]]],[11,"write_version",E,R[692],5,[[["self"],["w"]],[R[690]]]],[11,"write_long_version",E,R[692],5,[[["self"],["w"]],[R[690]]]],[11,"gen_completions",E,R[693],5,[[["self"],["into",[R[63]]],["shell"],["into",[R[1607]]],[R[63]],[R[1607]]]]],[11,"gen_completions_to",E,R[693],5,[[["self"],["into",[R[63]]],["shell"],[R[63]],["w"]]]],[11,"get_matches",E,"Starts the parsing process, upon a failed parse an error…",5,[[],[R[694]]]],[11,"get_matches_safe",E,"Starts the parsing process. This method will return a…",5,[[],[[R[690],[R[694]]],[R[694]]]]],[11,"get_matches_from",E,"Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],[R[694]]]],[11,"get_matches_from_safe",E,"Starts the parsing process. A combination of…",5,[[["i"]],[[R[690],[R[694]]],[R[694]]]]],[11,"get_matches_from_safe_borrow",E,"Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[[R[690],[R[694]]],[R[694]]]]],[11,R[702],E,"Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage",E,"Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short",E,"Sets the short version of the argument without the…",6,[[["asref",["str"]],["str"]],["self"]]],[11,"long",E,"Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias",E,"Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["into",["str"]],["str"]],["self"]]],[11,"aliases",E,"Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,R[695],E,"Allows adding a [`Arg`] alias that functions exactly like…",6,[[["into",["str"]],["str"]],["self"]]],[11,R[696],E,"Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help",E,"Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help",E,"Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last",E,"Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required",E,"Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals",E,"Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values",E,"Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless",E,"Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all",E,"Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one",E,"Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,R[705],E,"Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,R[706],E,"The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with",E,"Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all",E,"Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires",E,"Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if",E,"Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs",E,"Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if",E,"Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs",E,"Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,R[703],E,"Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value",E,"Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values",E,"Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value",E,"Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index",E,"Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple",E,"Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator",E,"Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global",E,"Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values",E,"Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden",E,"Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values",E,"Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value",E,"Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,"case_insensitive",E,"When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group",E,"Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups",E,"Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values",E,"Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator",E,"Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os",E,"Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values",E,"Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values",E,"Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter",E,"Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter",E,"Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter",E,"Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names",E,"Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name",E,"Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value",E,"Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os",E,"Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if",E,"Specifies the value of the argument if `arg` has been used…",6,[[[R[32],["str"]],["str"],["str"]],["self"]]],[11,"default_value_if_os",E,"Provides a conditional default value in the exact same…",6,[[["str"],["osstr"],[R[32],["osstr"]]],["self"]]],[11,"default_value_ifs",E,"Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os",E,"Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env",E,R[697],6,[[["str"]],["self"]]],[11,"env_os",E,R[697],6,[[["osstr"]],["self"]]],[11,"hide_env_values",E,"@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help",E,"When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,R[698],E,"Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw",E,"Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help",E,"Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help",E,"Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set",E,"Checks if one of the [`ArgSettings`] settings is set for…",6,[[["self"],[R[699]]],["bool"]]],[11,"set",E,"Sets one of the [`ArgSettings`] settings for the argument.",6,[[[R[699]]],["self"]]],[11,"unset",E,"Unsets one of the [`ArgSettings`] settings for the argument.",6,[[[R[699]]],["self"]]],[11,"value_of",E,"Gets the value of a specific [option] or [positional]…",7,[[["self"],["asref",["str"]],["str"]],[[R[32],["str"]],["str"]]]],[11,"value_of_lossy",E,"Gets the lossy value of a specific argument. If the…",7,[[["asref",["str"]],["self"],["str"]],[["cow",["str"]],[R[32],["cow"]]]]],[11,"value_of_os",E,"Gets the OS version of a string value of a specific…",7,[[["self"],["asref",["str"]],["str"]],[[R[32],["osstr"]],["osstr"]]]],[11,"values_of",E,"Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["asref",["str"]],["self"],["str"]],[[R[32],["values"]],["values"]]]],[11,"values_of_lossy",E,"Gets the lossy values of a specific argument. If the…",7,[[["asref",["str"]],["self"],["str"]],[[R[32],["vec"]],["vec",[R[63]]]]]],[11,"values_of_os",E,"Gets a [`OsValues`] struct which is implements…",7,[[["asref",["str"]],["self"],["str"]],[[R[709]],[R[32],[R[709]]]]]],[11,"is_present",E,"Returns `true` if an argument was present at runtime,…",7,[[["self"],["asref",["str"]],["str"]],["bool"]]],[11,"occurrences_of",E,"Returns the number of times an argument was used at…",7,[[["self"],["asref",["str"]],["str"]],["u64"]]],[11,"index_of",E,"Gets the starting index of the argument in respect to all…",7,[[["self"],["asref",["str"]],["str"]],[[R[32],["usize"]],["usize"]]]],[11,"indices_of",E,"Gets all indices of the argument in respect to all other…",7,[[["asref",["str"]],["self"],["str"]],[["indices"],[R[32],["indices"]]]]],[11,"subcommand_matches",E,R[700],7,[[["self"],["asref",["str"]],["str"]],[[R[694]],[R[32],[R[694]]]]]],[11,"subcommand_name",E,R[700],7,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[701],E,"This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage",E,"Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,R[702],E,"Creates a new instance of a subcommand requiring a name.…",8,[[["str"]],["app"]]],[11,R[702],E,"Creates a new instance of `ArgGroup` using a unique string…",9,[[["str"]],["self"]]],[11,"arg",E,"Adds an [argument] to this group by name",9,[[["str"]],["self"]]],[11,"args",E,"Adds multiple [arguments] to this group by name",9,[[],["self"]]],[11,"multiple",E,"Allows more than one of the ['Arg']s in this group to be…",9,[[["bool"]],["self"]]],[11,"required",E,"Sets the group as required or not. A required group will…",9,[[["bool"]],["self"]]],[11,"requires",E,R[704],9,[[["str"]],["self"]]],[11,R[703],E,R[704],9,[[],["self"]]],[11,R[705],E,"Sets the exclusion rules of this group. Exclusion (aka…",9,[[["str"]],["self"]]],[11,R[706],E,"Sets the exclusion rules of this group. Exclusion rules…",9,[[],["self"]]],[11,"use_stderr",E,"Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit",E,"Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description",E,"Create an error with a custom description.",0,[[["str"],[R[710]]],["self"]]],[11,"variants",E,"A list of possible variants in `&'static str` form",4,[[]]],[6,"Result",E,"Short hand for [`Result`] type",N,N],[14,"value_t",E,R[707],N,N],[14,"value_t_or_exit",E,R[707],N,N],[14,"values_t",E,R[708],N,N],[14,"values_t_or_exit",E,R[708],N,N],[14,"_clap_count_exprs",E,"Counts the number of comma-delimited expressions passed to…",N,N],[14,"arg_enum",E,"Convenience macro to generate more complete enums with…",N,N],[14,"crate_version",E,"Allows you to pull the version from your Cargo.toml at…",N,N],[14,"crate_authors",E,"Allows you to pull the authors for the app from your…",N,N],[14,"crate_description",E,"Allows you to pull the description from your Cargo.toml at…",N,N],[14,"crate_name",E,"Allows you to pull the name from your Cargo.toml at…",N,N],[14,"app_from_crate",E,"Allows you to build the `App` instance from your…",N,N],[14,"clap_app",E,"Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",N,N],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,R[30],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,R[30],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,R[95],E,E,5,[[["self"]],[R[63]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,R[95],E,E,4,[[["self"]],[R[63]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"clone",E,E,2,[[["self"]],[R[688]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["arg"]]],[11,"clone",E,E,7,[[["self"]],[R[694]]]],[11,"clone",E,E,11,[[["self"]],["values"]]],[11,"clone",E,E,10,[[["self"]],[R[709]]]],[11,"clone",E,E,8,[[["self"]],[R[701]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[699]]]],[11,"clone",E,E,3,[[["self"]],[R[710]]]],[11,"clone",E,E,4,[[["self"]],["shell"]]],[11,R[99],E,E,6,[[],["arg"]]],[11,R[99],E,E,7,[[],["self"]]],[11,R[99],E,E,11,[[],["self"]]],[11,R[99],E,E,10,[[],["self"]]],[11,R[99],E,E,9,[[],[R[711]]]],[11,"from",E,E,6,[[["arg"]],["self"]]],[11,"from",E,E,9,[[[R[711]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,R[119],E,E,11,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[119],E,E,10,[[["self"]],[["osstr"],[R[32],["osstr"]]]]],[11,"eq",E,E,2,[[["self"],[R[688]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["arg"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[699]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[710]]],["bool"]]],[11,"next",E,E,11,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[118],E,E,11,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[["osstr"],[R[32],["osstr"]]]]],[11,R[118],E,E,10,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,R[712],E,E,2,[[["str"]],[R[2]]]],[11,R[712],E,E,1,[[["str"]],[R[2]]]],[11,R[712],E,E,4,[[["str"]],[R[2]]]],[11,R[409],E,E,0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,R[713]],[4,R[714]],[4,R[715]],[4,"Shell"],[3,"App"],[3,"Arg"],[3,R[716]],[3,R[717]],[3,"ArgGroup"],[3,"OsValues"],[3,"Values"]]};
searchIndex["criterion"]={"doc":"A statistics-driven micro-benchmarking library written in…","i":[[3,R[2442],R[2426],"Structure used to group together a set of related…",N,N],[3,R[2443],E,"Simple structure representing an ID for a benchmark. The…",N,N],[3,"Bencher",E,"Timer struct used to iterate a benchmarked function and…",N,N],[3,"Criterion",E,"The benchmark manager",N,N],[3,R[2446],E,"Contains the configuration options for the plots generated…",N,N],[4,"BatchSize",E,"Argument to `Bencher::iter_batched` and…",N,N],[13,"SmallInput",E,"`SmallInput` indicates that the input to the benchmark…",0,N],[13,"LargeInput",E,"`LargeInput` indicates that the input to the benchmark…",0,N],[13,"PerIteration",E,"`PerIteration` indicates that the input to the benchmark…",0,N],[13,"NumBatches",E,"`NumBatches` will attempt to divide the iterations up into…",0,N],[13,"NumIterations",E,"`NumIterations` fixes the batch size to a constant number,…",0,N],[4,"Baseline",E,"Baseline describes how the baseline_directory is handled.",N,N],[13,"Compare",E,"Compare ensures a previous saved version of the baseline…",1,N],[13,"Save",E,"Save writes the benchmark results to the baseline…",1,N],[4,"Throughput",E,"Enum representing different ways of measuring the…",N,N],[13,"Bytes",E,"Measure throughput in terms of bytes/second. The value…",2,N],[13,"Elements",E,"Measure throughput in terms of elements/second. The value…",2,N],[4,"AxisScale",E,"Axis scaling type",N,N],[13,"Linear",E,"Axes scale linearly",3,N],[13,R[2448],E,"Axes scale logarithmically",3,N],[5,"black_box",E,"A function that is opaque to the optimizer, used to…",N,[[[T]],[T]]],[11,R[2427],E,"Changes the size of the sample for this benchmark",4,[[["self"],["usize"]],["self"]]],[11,R[2428],E,"Changes the warm up time for this benchmark",4,[[["self"],["duration"]],["self"]]],[11,R[2429],E,"Changes the target measurement time for this benchmark…",4,[[["self"],["duration"]],["self"]]],[11,"nresamples",E,"Changes the number of resamples for this benchmark group",4,[[["self"],["usize"]],["self"]]],[11,R[2430],E,"Changes the noise threshold for this benchmark group",4,[[["self"],["f64"]],["self"]]],[11,R[2431],E,"Changes the confidence level for this benchmark group",4,[[["self"],["f64"]],["self"]]],[11,R[2432],E,"Changes the significance level for this benchmark group",4,[[["self"],["f64"]],["self"]]],[11,"plot_config",E,"Changes the plot configuration for this benchmark group.",4,[[["self"],[R[2435]]],["self"]]],[11,R[2423],E,"Set the input size for this benchmark group. Used for…",4,[[["self"],[R[2423]]],["self"]]],[11,R[2433],E,"Benchmark the given parameterless function inside this…",4,[[["self"],[R[2421]],["f"]],["self"]]],[11,R[2434],E,"Benchmark the given parameterized function inside this…",4,[[["self"],["i"],[R[2421]],["f"]],["self"]]],[11,"finish",E,"Consume the benchmark group and generate the summary…",4,[[]]],[11,"new",E,"Construct a new benchmark ID from a string function name…",5,[[["into",[R[63]]],[R[63]],["display"]],[R[2422]]]],[11,"from_parameter",E,"Construct a new benchmark ID from just a parameter value.…",5,[[["display"]],[R[2422]]]],[0,R[2425],E,"This module defines a set of traits that can be used to…",N,N],[3,"WallTime",R[2436],"`WallTime` is the default measurement in Criterion.rs. It…",N,N],[8,R[2444],E,"Trait providing functions to format measured values to…",N,N],[11,"format_value",E,"Format the value (with appropriate unit) and return it as…",6,[[["self"],["f64"]],[R[63]]]],[11,"format_throughput",E,"Format the value as a throughput measurement. The value…",6,[[["self"],["f64"],[R[2423]]],[R[63]]]],[10,"scale_values",E,"Scale the given values to some appropriate unit and return…",6,[[["self"],["f64"]],["str"]]],[10,"scale_throughputs",E,"Convert the given measured values into throughput numbers…",6,[[["self"],[R[2423]],["f64"]],["str"]]],[10,"scale_for_machines",E,"Scale the values and return a unit string designed for…",6,[[["self"]],["str"]]],[8,R[2445],E,"Trait for all types which define something Criterion.rs…",N,N],[16,"Intermediate",E,"This type represents an intermediate value for the…",7,N],[16,"Value",E,"This type is the measured value. An example might be the…",7,N],[10,"start",E,"Criterion.rs will call this before iterating the benchmark.",7,[[["self"]]]],[10,"end",E,"Criterion.rs will call this after iterating the benchmark…",7,[[["self"]]]],[10,"add",E,"Combine two values. Criterion.rs sometimes needs to…",7,[[["self"]]]],[10,"zero",E,"Return a \"zero\" value for the Value type which can be…",7,[[["self"]]]],[10,"to_f64",E,"Converts the measured value to f64 so that it can be used…",7,[[["self"]],["f64"]]],[10,R[13],E,"Return a trait-object reference to the value formatter for…",7,[[["self"]],[R[2438]]]],[0,"profiler",R[2426],"This module provides an extension trait which allows…",N,N],[3,R[2447],R[2437],"Dummy profiler implementation, representing cases where…",N,N],[8,"Profiler",E,"Extension trait for external crates to implement which…",N,N],[10,R[2439],E,"This function is called when Criterion.rs starts profiling…",8,[[["self"],["path"],["str"]]]],[10,R[2440],E,"This function is called after Criterion.rs stops profiling…",8,[[["self"],["path"],["str"]]]],[11,"iter",R[2426],"Times a `routine` by executing it many times and timing…",9,[[["self"],["r"]]]],[11,"iter_custom",E,"Times a `routine` by executing it many times and relying…",9,[[["self"],["r"]]]],[11,"iter_with_large_drop",E,"Times a `routine` by collecting its output on each…",9,[[["self"],["r"]]]],[11,"iter_batched",E,R[2424],9,[[["self"],[R[2441]],["s"],["r"]]]],[11,"iter_batched_ref",E,R[2424],9,[[["self"],[R[2441]],["s"],["r"]]]],[11,"with_measurement",E,"Changes the measurement for the benchmarks run with this…",10,[[[R[2425]]],[[R[2426]],[R[2425]]]]],[11,"with_profiler",E,"Changes the internal profiler for benchmarks run with this…",10,[[["profiler"]],[R[2426]]]],[11,R[2427],E,"Changes the default size of the sample for benchmarks run…",10,[[["usize"]],[R[2426]]]],[11,R[2428],E,"Changes the default warm up time for benchmarks run with…",10,[[["duration"]],[R[2426]]]],[11,R[2429],E,"Changes the default measurement time for benchmarks run…",10,[[["duration"]],[R[2426]]]],[11,"nresamples",E,"Changes the default number of resamples for benchmarks run…",10,[[["usize"]],[R[2426]]]],[11,R[2430],E,"Changes the default noise threshold for benchmarks run…",10,[[["f64"]],[R[2426]]]],[11,R[2431],E,"Changes the default confidence level for benchmarks run…",10,[[["f64"]],[R[2426]]]],[11,R[2432],E,"Changes the default significance level for benchmarks run…",10,[[["f64"]],[R[2426]]]],[11,"with_plots",E,"Enables plotting",10,[[],[R[2426]]]],[11,"without_plots",E,"Disables plotting",10,[[],[R[2426]]]],[11,"can_plot",E,"Return true if generation of the plots is possible.",10,[[["self"]],["bool"]]],[11,"save_baseline",E,"Names an explicit baseline and enables overwriting the…",10,[[[R[63]]],[R[2426]]]],[11,"retain_baseline",E,"Names an explicit baseline and disables overwriting the…",10,[[[R[63]]],[R[2426]]]],[11,"with_filter",E,"Filters the benchmarks. Only benchmarks with names that…",10,[[["into",[R[63]]],[R[63]]],[R[2426]]]],[11,"configure_from_args",E,"Configure this criterion struct based on the command-line…",10,[[],[R[2426]]]],[11,"benchmark_group",E,"Return a benchmark group. All benchmarks performed using a…",10,[[["self"],["into",[R[63]]],[R[63]]],["benchmarkgroup"]]],[11,R[2433],E,"Benchmarks a function. For comparing multiple functions,…",10,[[["self"],["str"],["f"]],[R[2426]]]],[11,R[2434],E,"Benchmarks a function with an input. For comparing…",10,[[["self"],["i"],[R[2422]],["f"]],[R[2426]]]],[11,"summary_scale",E,"Set the axis scale (linear or logarithmic) for the summary…",11,[[["axisscale"]],[R[2435]]]],[14,"criterion_group",E,"Macro used to define a function group for the benchmark…",N,N],[14,"criterion_main",E,"Macro which expands to a benchmark harness.",N,N],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",R[2436],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",R[2437],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"start",R[2436],E,12,[[["self"]]]],[11,"end",E,E,12,[[["self"]]]],[11,"add",E,E,12,[[["self"]]]],[11,"zero",E,E,12,[[["self"]]]],[11,"to_f64",E,E,12,[[["self"]],["f64"]]],[11,R[13],E,E,12,[[["self"]],[R[2438]]]],[11,R[2439],R[2437],E,13,[[["self"],["path"],["str"]]]],[11,R[2440],E,E,13,[[["self"],["path"],["str"]]]],[11,"drop",R[2426],E,4,[[["self"]]]],[11,"clone",E,E,5,[[["self"]],[R[2422]]]],[11,"clone",E,E,0,[[["self"]],[R[2441]]]],[11,"clone",E,E,2,[[["self"]],[R[2423]]]],[11,"clone",E,E,3,[[["self"]],["axisscale"]]],[11,"clone",E,E,11,[[["self"]],[R[2435]]]],[11,R[99],E,"Creates a benchmark manager with the following default…",10,[[],[R[2426]]]],[11,R[99],E,E,11,[[],[R[2435]]]],[11,"eq",E,E,5,[[["self"],[R[2422]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[2422]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2441]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2441]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[2423]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[2423]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[1193],E,E,2,[[["__d"]],[R[2]]]],[11,R[1655],E,E,2,[[["self"],["__s"]],[R[2]]]]],"p":[[4,"BatchSize"],[4,"Baseline"],[4,"Throughput"],[4,"AxisScale"],[3,R[2442]],[3,R[2443]],[8,R[2444]],[8,R[2445]],[8,"Profiler"],[3,"Bencher"],[3,"Criterion"],[3,R[2446]],[3,"WallTime"],[3,R[2447]]]};
searchIndex["criterion_plot"]={"doc":"[Criterion]'s plotting library.","i":[[3,"Figure",R[485],"Plot container",N,N],[3,"BoxWidth",E,"Box width for box-related plots: bars, candlesticks, etc",N,N],[12,"0",E,E,0,N],[3,"Font",E,"A font name",N,N],[3,"FontSize",E,"The size of a font",N,N],[12,"0",E,E,1,N],[3,"Key",E,"The key or legend",N,N],[3,"Label",E,"Plot label",N,N],[3,R[517],E,"Width of the lines",N,N],[12,"0",E,E,2,N],[3,"Opacity",E,"Fill color opacity",N,N],[12,"0",E,E,3,N],[3,"Output",E,"Output file path",N,N],[3,R[518],E,"Size of the points",N,N],[12,"0",E,E,4,N],[3,"Size",E,"Figure size",N,N],[12,"0",E,E,5,N],[12,"1",E,E,5,N],[3,R[519],E,"Labels attached to the tics of an axis",N,N],[12,"labels",E,"Labels to attach to the tics",6,N],[12,R[202],E,"Position of the tics on the axis",6,N],[3,"Title",E,"Figure title",N,N],[3,R[520],E,"Axis scale factor",N,N],[12,"0",E,E,7,N],[3,"Version",E,"Structure representing a gnuplot version number.",N,N],[12,"major",E,"The major version number",8,N],[12,"minor",E,"The minor version number",8,N],[12,"patch",E,"The patch level",8,N],[4,"Range",E,"Axis range",N,N],[13,"Auto",E,"Autoscale the axis",9,N],[13,"Limits",E,"Set the limits of the axis",9,N],[4,"Axes",E,"A pair of axes that define a coordinate system",N,N],[13,"BottomXLeftY",E,E,10,N],[13,"BottomXRightY",E,E,10,N],[13,"TopXLeftY",E,E,10,N],[13,"TopXRightY",E,E,10,N],[4,"Axis",E,"A coordinate axis",N,N],[13,"BottomX",E,"X axis on the bottom side of the figure",11,N],[13,"LeftY",E,"Y axis on the left side of the figure",11,N],[13,"RightY",E,"Y axis on the right side of the figure",11,N],[13,"TopX",E,"X axis on the top side of the figure",11,N],[4,"Color",E,"Color",N,N],[13,"Black",E,E,12,N],[13,"Blue",E,E,12,N],[13,"Cyan",E,E,12,N],[13,"DarkViolet",E,E,12,N],[13,"ForestGreen",E,E,12,N],[13,"Gold",E,E,12,N],[13,"Gray",E,E,12,N],[13,"Green",E,E,12,N],[13,"Magenta",E,E,12,N],[13,"Red",E,E,12,N],[13,"Rgb",E,"Custom RGB color",12,N],[13,"White",E,E,12,N],[13,"Yellow",E,E,12,N],[4,"Grid",E,"Grid line",N,N],[13,"Major",E,"Major gridlines",13,N],[13,"Minor",E,"Minor gridlines",13,N],[4,"LineType",E,"Line type",N,N],[13,"Dash",E,E,14,N],[13,"Dot",E,E,14,N],[13,"DotDash",E,E,14,N],[13,"DotDotDash",E,E,14,N],[13,"SmallDot",E,"Line made of minimally sized dots",14,N],[13,"Solid",E,E,14,N],[4,R[521],E,"Point type",N,N],[13,"Circle",E,E,15,N],[13,"FilledCircle",E,E,15,N],[13,"FilledSquare",E,E,15,N],[13,"FilledTriangle",E,E,15,N],[13,"Plus",E,E,15,N],[13,"Square",E,E,15,N],[13,"Star",E,E,15,N],[13,"Triangle",E,E,15,N],[13,"X",E,E,15,N],[4,"Scale",E,"Axis scale",N,N],[13,"Linear",E,E,16,N],[13,R[2448],E,E,16,N],[4,"Terminal",E,"Output terminal",N,N],[13,"Svg",E,E,17,N],[4,R[522],E,"Possible errors when parsing gnuplot's version string",N,N],[13,"Exec",E,"The `gnuplot` command couldn't be executed",18,N],[13,"Error",E,"The `gnuplot` command returned an error message",18,N],[13,"OutputError",E,"The `gnuplot` command returned invalid utf-8",18,N],[13,"ParseError",E,"The `gnuplot` command returned an unparseable string",18,N],[5,R[529],E,"Returns `gnuplot` version",N,[[],[[R[2],[R[529],R[483]]],[R[483]],[R[529]]]]],[0,"axis",E,"Coordinate axis",N,N],[3,R[486],R[498],"Properties of the coordinate axes",N,N],[11,"hide",E,"Hides the axis",19,[[["self"]],[R[484]]]],[11,"show",E,"Makes the axis visible",19,[[["self"]],[R[484]]]],[0,"candlestick",R[485],"\"Candlestick\" plots",N,N],[3,R[486],R[499],"Properties common to candlestick plots",N,N],[3,R[523],E,"A candlestick consists of a box and two whiskers that…",N,N],[12,"x",E,"X coordinate of the candlestick",20,N],[12,"whisker_min",E,"Y coordinate of the end point of the bottom whisker",20,N],[12,"box_min",E,"Y coordinate of the bottom of the box",20,N],[12,"box_high",E,"Y coordinate of the top of the box",20,N],[12,"whisker_high",E,"Y coordinate of the end point of the top whisker",20,N],[0,"curve",R[485],"Simple \"curve\" like plots",N,N],[3,R[486],R[487],"Properties common to simple \"curve\" like plots",N,N],[4,"Curve",E,"Types of \"curve\" plots",N,N],[13,"Dots",E,"A minimally sized dot on each data point",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[13,"Impulses",R[487],"A vertical \"impulse\" on each data point",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[13,"Lines",R[487],"Line that joins the data points",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[13,"LinesPoints",R[487],"Line with a point on each data point",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[13,"Points",R[487],"A point on each data point",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[13,"Steps",R[487],"An step `_|` between each data point",21,N],[12,"x",R[488],R[489],21,N],[12,"y",E,R[490],21,N],[0,"errorbar",R[485],"Error bar plots",N,N],[3,R[486],R[491],"Properties common to error bar plots",N,N],[4,"ErrorBar",E,"Asymmetric error bar plots",N,N],[13,"XErrorBars",E,"Horizontal error bars",22,N],[12,"x",R[492],R[489],22,N],[12,"y",E,R[490],22,N],[12,"x_low",E,R[493],22,N],[12,"x_high",E,R[494],22,N],[13,"XErrorLines",R[491],"Horizontal error bars, where each point is joined by a line",22,N],[12,"x",R[492],R[489],22,N],[12,"y",E,R[490],22,N],[12,"x_low",E,R[493],22,N],[12,"x_high",E,R[494],22,N],[13,"YErrorBars",R[491],"Vertical error bars",22,N],[12,"x",R[492],R[489],22,N],[12,"y",E,R[490],22,N],[12,"y_low",E,R[495],22,N],[12,"y_high",E,R[496],22,N],[13,"YErrorLines",R[491],"Vertical error bars, where each point is joined by a line",22,N],[12,"x",R[492],R[489],22,N],[12,"y",E,R[490],22,N],[12,"y_low",E,R[495],22,N],[12,"y_high",E,R[496],22,N],[0,R[504],R[485],"Filled curve plots",N,N],[3,R[486],R[500],"Properties common to filled curve plots",N,N],[3,R[524],E,"Fills the area between two curves",N,N],[12,"x",E,"X coordinate of the data points of both curves",23,N],[12,"y1",E,"Y coordinate of the data points of the first curve",23,N],[12,"y2",E,"Y coordinate of the data points of the second curve",23,N],[0,"grid",R[485],"Gridline",N,N],[3,R[486],R[501],"Gridline properties",N,N],[11,"hide",E,"Hides the gridlines",24,[[["self"]],[R[484]]]],[11,"show",E,"Shows the gridlines",24,[[["self"]],[R[484]]]],[0,"key",R[485],"Key (or legend)",N,N],[3,R[486],R[502],"Properties of the key",N,N],[4,"Boxed",E,"Whether the key is surrounded by a box or not",N,N],[13,"No",E,E,25,N],[13,"Yes",E,E,25,N],[4,R[525],E,"Horizontal position of the key",N,N],[13,"Center",E,R[497],26,N],[13,"Left",E,"Left border of the figure",26,N],[13,"Right",E,"Right border of the figure",26,N],[4,R[526],E,"Text justification of the key",N,N],[13,"Left",E,E,27,N],[13,"Right",E,E,27,N],[4,"Order",E,"Order of the elements of the key",N,N],[13,"SampleText",E,"Sample first, then text",28,N],[13,"TextSample",E,"Text first, then sample",28,N],[4,R[528],E,"Position of the key",N,N],[13,"Inside",E,"Inside the area surrounded by the four (BottomX, TopX,…",29,N],[13,"Outside",E,"Outside of that area",29,N],[4,"Stacked",E,"How the entries of the key are stacked",N,N],[13,"Horizontally",E,E,30,N],[13,"Vertically",E,E,30,N],[4,"Vertical",E,"Vertical position of the key",N,N],[13,"Bottom",E,"Bottom border of the figure",31,N],[13,"Center",E,R[497],31,N],[13,"Top",E,"Top border of the figure",31,N],[11,"hide",E,"Hides the key",32,[[["self"]],[R[484]]]],[11,"show",E,"Shows the key",32,[[["self"]],[R[484]]]],[0,"prelude",R[485],"A collection of the most used traits, structs and enums",N,N],[0,"proxy",E,"Generic constructors for newtypes",N,N],[5,"Font","criterion_plot::proxy","Generic constructor for `Font`",N,[[["s"]],["fonttype"]]],[5,"Label",E,"Generic constructor for `Label`",N,[[["s"]],["labeltype"]]],[5,"Title",E,"Generic constructor for `Title`",N,[[["s"]],["titletype"]]],[5,"Output",E,"Generic constructor for `Output`",N,[[["p"]],["outputtype"]]],[0,"traits",R[485],"Traits",N,N],[8,R[527],"criterion_plot::traits","Overloaded `configure` method",N,N],[16,R[486],E,"The properties of what's being configured",33,N],[10,R[503],E,"Configure some set of properties",33,[[["self"],["this"],["f"]],["self"]]],[8,"Data",E,"Types that can be plotted",N,N],[10,"f64",E,"Convert the type into a double precision float",34,[[],["f64"]]],[8,"Plot",E,"Overloaded `plot` method",N,N],[16,R[486],E,"The properties associated to the plot",35,N],[10,"plot",E,"Plots some `data` with some `configuration`",35,[[["self"],["this"],["f"]],["self"]]],[8,"Set",E,"Overloaded `set` method",N,N],[10,"set",E,"Sets some property",36,[[["self"],[T]],["self"]]],[11,"new",R[485],"Creates an empty figure",37,[[],["figure"]]],[11,"draw",E,"Spawns a drawing child process",37,[[["self"]],[["child"],[R[2],["child"]]]]],[11,"dump",E,"Dumps the script required to produce the figure into `sink`",37,[[["self"],["w"]],[["figure"],[R[2],["figure"]]]]],[11,"save",E,"Saves the script required to produce the figure to `path`",37,[[["self"],["path"]],[[R[2],["figure"]],["figure"]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[37],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"],[T]]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[37],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"],[T]]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[37],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"],[T]]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[37],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"],[T]]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"],[T]]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"],[T]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[37],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"],[T]]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,R[95],E,E,18,[[["self"]],[R[63]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",R[498],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[37],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"],[T]]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",R[499],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",R[487],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",R[491],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",R[500],E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",R[501],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",R[502],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[37],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"],[T]]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[37],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"],[T]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[37],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"],[T]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,R[503],R[498],"Configures the gridlines",19,[[["self"],["grid"],["f"]],[R[484]]]],[11,R[503],R[485],"Configures an axis",37,[[["self"],["f"],["axis"]],["figure"]]],[11,R[503],E,"Configures the key (legend)",37,[[["self"],["key"],["f"]],["figure"]]],[11,"plot",E,E,37,[[["self"],["candlesticks"],["f"]],["figure"]]],[11,"plot",E,E,37,[[["self"],["curve"],["f"]],["figure"]]],[11,"plot",E,E,37,[[["self"],["errorbar"],["f"]],["figure"]]],[11,"plot",E,E,37,[[["self"],["f"],[R[504]]],["figure"]]],[11,"set",R[498],"Attaches a label to the axis",19,[[["self"],["label"]],[R[484]]]],[11,"set",E,"Changes the range of the axis that will be shown",19,[[["self"],["range"]],[R[484]]]],[11,"set",E,"Sets the scale of the axis",19,[[["self"],["scale"]],[R[484]]]],[11,"set",E,"Changes the scale factor of the axis.",19,[[["self"],[R[516]]],[R[484]]]],[11,"set",E,"Attaches labels to the tics of an axis",19,[[["self"],["ticlabels"]],[R[484]]]],[11,"set",R[499],R[505],43,[[["self"],["color"]],[R[484]]]],[11,"set",E,R[506],43,[[["self"],["label"]],[R[484]]]],[11,"set",E,R[507],43,[[["self"],[R[510]]],[R[484]]]],[11,"set",E,R[508],43,[[["self"],[R[509]]],[R[484]]]],[11,"set",R[487],"Select the axes to plot against",44,[[["self"],["axes"]],[R[484]]]],[11,"set",E,R[505],44,[[["self"],["color"]],[R[484]]]],[11,"set",E,R[506],44,[[["self"],["label"]],[R[484]]]],[11,"set",E,R[507],44,[[["self"],[R[510]]],[R[484]]]],[11,"set",E,R[508],44,[[["self"],[R[509]]],[R[484]]]],[11,"set",E,R[511],44,[[["self"],[R[512]]],[R[484]]]],[11,"set",E,R[513],44,[[["self"],[R[514]]],[R[484]]]],[11,"set",R[491],"Changes the color of the error bars",45,[[["self"],["color"]],[R[484]]]],[11,"set",E,R[506],45,[[["self"],["label"]],[R[484]]]],[11,"set",E,"Change the line type",45,[[["self"],[R[510]]],[R[484]]]],[11,"set",E,"Changes the linewidth",45,[[["self"],[R[509]]],[R[484]]]],[11,"set",E,R[511],45,[[["self"],[R[512]]],[R[484]]]],[11,"set",E,R[513],45,[[["self"],[R[514]]],[R[484]]]],[11,"set",R[500],"Select axes to plot against",46,[[["self"],["axes"]],[R[484]]]],[11,"set",E,"Sets the fill color",46,[[["self"],["color"]],[R[484]]]],[11,"set",E,R[506],46,[[["self"],["label"]],[R[484]]]],[11,"set",E,"Changes the opacity of the fill color",46,[[["self"],["opacity"]],[R[484]]]],[11,"set",R[502],"Select if the key will be surrounded with a box or not",32,[[["self"],["boxed"]],[R[484]]]],[11,"set",E,"Changes the justification of the text of each entry",32,[[["self"],[R[515]]],[R[484]]]],[11,"set",E,"How to order each entry",32,[[["self"],["order"]],[R[484]]]],[11,"set",E,"Selects where to place the key",32,[[["self"],[R[212]]],[R[484]]]],[11,"set",E,"Changes how the entries of the key are stacked",32,[[["self"],["stacked"]],[R[484]]]],[11,"set",E,E,32,[[["self"],["title"]],[R[484]]]],[11,"set",R[485],"Changes the box width of all the box related plots (bars,…",37,[[["self"],["boxwidth"]],["figure"]]],[11,"set",E,"Changes the font",37,[[["self"],["font"]],["figure"]]],[11,"set",E,"Changes the size of the font",37,[[["self"],["fontsize"]],["figure"]]],[11,"set",E,"Changes the output file",37,[[["self"],["output"]],["figure"]]],[11,"set",E,"Changes the figure size",37,[[["self"],["size"]],["figure"]]],[11,"set",E,"Changes the output terminal",37,[[["self"],["terminal"]],["figure"]]],[11,"set",E,"Sets the title",37,[[["self"],["title"]],["figure"]]],[11,"clone",R[498],E,19,[[["self"]],[R[484]]]],[11,"clone",R[501],E,24,[[["self"]],[R[484]]]],[11,"clone",R[502],E,32,[[["self"]],[R[484]]]],[11,"clone",E,E,25,[[["self"]],["boxed"]]],[11,"clone",E,E,26,[[["self"]],["horizontal"]]],[11,"clone",E,E,27,[[["self"]],[R[515]]]],[11,"clone",E,E,28,[[["self"]],["order"]]],[11,"clone",E,E,29,[[["self"]],[R[212]]]],[11,"clone",E,E,30,[[["self"]],["stacked"]]],[11,"clone",E,E,31,[[["self"]],["vertical"]]],[11,"clone",R[485],E,37,[[["self"]],["figure"]]],[11,"clone",E,E,0,[[["self"]],["boxwidth"]]],[11,"clone",E,E,1,[[["self"]],["fontsize"]]],[11,"clone",E,E,39,[[["self"]],["key"]]],[11,"clone",E,E,2,[[["self"]],[R[509]]]],[11,"clone",E,E,3,[[["self"]],["opacity"]]],[11,"clone",E,E,4,[[["self"]],[R[512]]]],[11,"clone",E,E,9,[[["self"]],["range"]]],[11,"clone",E,E,5,[[["self"]],["size"]]],[11,"clone",E,E,10,[[["self"]],["axes"]]],[11,"clone",E,E,11,[[["self"]],["axis"]]],[11,"clone",E,E,12,[[["self"]],["color"]]],[11,"clone",E,E,13,[[["self"]],["grid"]]],[11,"clone",E,E,14,[[["self"]],[R[510]]]],[11,"clone",E,E,15,[[["self"]],[R[514]]]],[11,"clone",E,E,16,[[["self"]],["scale"]]],[11,"clone",E,E,7,[[["self"]],[R[516]]]],[11,"clone",E,E,17,[[["self"]],["terminal"]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,18,[[["self"]],["str"]]],[11,"cause",E,E,18,[[["self"]],[["error"],[R[32],["error"]]]]]],"p":[[3,"BoxWidth"],[3,"FontSize"],[3,R[517]],[3,"Opacity"],[3,R[518]],[3,"Size"],[3,R[519]],[3,R[520]],[3,"Version"],[4,"Range"],[4,"Axes"],[4,"Axis"],[4,"Color"],[4,"Grid"],[4,"LineType"],[4,R[521]],[4,"Scale"],[4,"Terminal"],[4,R[522]],[3,R[486]],[3,R[523]],[4,"Curve"],[4,"ErrorBar"],[3,R[524]],[3,R[486]],[4,"Boxed"],[4,R[525]],[4,R[526]],[4,"Order"],[4,R[528]],[4,"Stacked"],[4,"Vertical"],[3,R[486]],[8,R[527]],[8,"Data"],[8,"Plot"],[8,"Set"],[3,"Figure"],[3,"Font"],[3,"Key"],[3,"Label"],[3,"Output"],[3,"Title"],[3,R[486]],[3,R[486]],[3,R[486]],[3,R[486]]]};
searchIndex["crossbeam"]={"doc":"Support for concurrent and parallel programming.","i":[[3,"Scope",R[44],E,N,N],[3,R[57],E,"A handle to a scoped thread",N,N],[5,"scope",E,"Create a new `scope`, for deferred destructors.",N,[[["f"]],["r"]]],[5,"spawn_unsafe",E,"Like `std::thread::spawn`, but without the closure bounds.",N,[[["f"]],["joinhandle"]]],[0,"mem",E,"Memory management for concurrent data structures",N,N],[3,R[53],R[42],"Pad `T` to the length of a cacheline.",N,N],[0,"epoch",E,"Epoch-based memory management",N,N],[3,"Atomic",R[51],"Like `std::sync::atomic::AtomicPtr`.",N,N],[3,"Guard",E,"An RAII-style guard for pinning the current epoch.",N,N],[3,"Owned",E,"Like `Box<T>`: an owned, heap-allocated data value of type…",N,N],[3,"Shared",E,"Like `&'a T`: a shared reference valid for lifetime `'a`.",N,N],[5,"pin",E,"Pin the current epoch.",N,[[],["guard"]]],[11,"null",E,E,0,[[],["atomic"]]],[11,"new",E,"Create a new atomic pointer",0,[[[T]],["atomic"]]],[11,"load",E,"Do an atomic load with the given memory ordering.",0,[[["self"],[R[31]],["guard"]],[[R[32],[R[40]]],[R[40]]]]],[11,"store",E,"Do an atomic store with the given memory ordering.",0,[[["self"],[R[31]],[R[32],["owned"]],["owned"]]]],[11,"store_and_ref",E,"Do an atomic store with the given memory ordering,…",0,[[["self"],[R[31]],["owned"],["guard"]],[R[40]]]],[11,"store_shared",E,"Do an atomic store of a `Shared` pointer with the given…",0,[[["self"],[R[32],[R[40]]],[R[31]],[R[40]]]]],[11,"cas",E,R[41],0,[[["self"],[R[32],[R[40]]],[R[31]],[R[40]],[R[32],["owned"]],["owned"]],[[R[2],[R[32]]],[R[32],["owned"]]]]],[11,"cas_and_ref",E,R[41],0,[[["self"],[R[32],[R[40]]],[R[31]],[R[40]],["owned"],["guard"]],[[R[40]],["owned"],[R[2],[R[40],"owned"]]]]],[11,"cas_shared",E,"Do a compare-and-set from a `Shared` to another `Shared`…",0,[[["self"],[R[32],[R[40]]],[R[31]],[R[40]]],["bool"]]],[11,"swap",E,"Do an atomic swap with an `Owned` pointer with the given…",0,[[["self"],[R[31]],[R[32],["owned"]],["owned"],["guard"]],[[R[32],[R[40]]],[R[40]]]]],[11,"swap_shared",E,"Do an atomic swap with a `Shared` pointer with the given…",0,[[["self"],[R[32],[R[40]]],[R[31]],[R[40]],["guard"]],[[R[32],[R[40]]],[R[40]]]]],[11,"unlinked",E,"Assert that the value is no longer reachable from a…",1,[[["self"],[R[40]]]]],[11,"migrate_garbage",E,"Move the thread-local garbage into the global set of…",1,[[["self"]]]],[11,"new",E,"Move `t` to a new heap allocation.",2,[[[T]],["owned"]]],[11,R[6],E,"Move data out of the owned box, deallocating the box.",2,[[],[T]]],[11,"as_raw",E,E,3,[[["self"]]]],[11,"zeroed",R[42],"A const fn equivalent to mem::zeroed().",4,[[],[R[43]]]],[11,"new",E,"Wrap `t` with cacheline padding.",4,[[[T]],[R[43]]]],[8,"ZerosValid",E,"Types for which mem::zeroed() is safe.",N,N],[0,"sync",R[44],"Synchronization primitives.",N,N],[3,"MsQueue",R[50],"A Michael-Scott lock-free queue, with support for blocking…",N,N],[3,R[54],E,E,N,N],[3,R[55],E,"Treiber's lock-free stack.",N,N],[3,R[56],E,"A Michael-Scott queue that allocates \"segments\" (arrays of…",N,N],[3,"ArcCell",E,"A type providing atomic storage and retrieval of an…",N,N],[11,"new",E,E,5,[[],["atomicoption"]]],[11,"swap_box",E,E,5,[[["self"],[R[31]],["box"]],[["box"],[R[32],["box"]]]]],[11,"swap",E,E,5,[[["self"],[R[31]],[T]],[R[32]]]],[11,"take",E,E,5,[[["self"],[R[31]]],[R[32]]]],[11,"new",E,R[47],6,[[],["msqueue"]]],[11,"push",E,"Add `t` to the back of the queue, possibly waking up…",6,[[["self"],[T]]]],[11,R[45],E,R[46],6,[[["self"]],["bool"]]],[11,R[48],E,R[49],6,[[["self"]],[R[32]]]],[11,"pop",E,"Dequeue an element from the front of the queue, blocking…",6,[[["self"]],[T]]],[11,"new",E,"Create a new, empty stack.",7,[[],["treiberstack"]]],[11,"push",E,"Push `t` on top of the stack.",7,[[["self"],[T]]]],[11,"pop",E,"Attempt to pop the top element of the stack. Deprecated…",7,[[["self"]],[R[32]]]],[11,R[48],E,"Attempt to pop the top element of the stack.",7,[[["self"]],[R[32]]]],[11,R[45],E,R[46],7,[[["self"]],["bool"]]],[11,"new",E,R[47],8,[[],[R[474]]]],[11,"push",E,"Add `t` to the back of the queue.",8,[[["self"],[T]]]],[11,R[48],E,R[49],8,[[["self"]],[R[32]]]],[0,"chase_lev",E,"A lock-free concurrent work-stealing deque",N,N],[3,"Worker",R[52],"Worker half of the work-stealing deque. This worker has…",N,N],[3,"Stealer",E,"The stealing half of the work-stealing deque. Stealers…",N,N],[4,"Steal",E,"When stealing some data, this is an enumeration of the…",N,N],[13,"Empty",E,"The deque was empty at the time of stealing",9,N],[13,"Abort",E,"The stealer lost the race for stealing data, and a retry…",9,N],[13,"Data",E,"The stealer has successfully stolen some data.",9,N],[5,"deque",E,"Creates a new empty deque",N,[[]]],[11,"push",E,"Pushes data onto the front of this work queue.",10,[[["self"],[T]]]],[11,R[48],E,"Pops data off the front of the work queue, returning…",10,[[["self"]],[R[32]]]],[11,"steal",E,"Steals work off the end of the queue (opposite of the…",11,[[["self"]],["steal"]]],[11,"new",R[50],"Creates a new `ArcCell`.",12,[[["arc"]],["arccell"]]],[11,"set",E,"Stores a new value in the `ArcCell`, returning the…",12,[[["self"],["arc"]],["arc"]]],[11,"get",E,"Returns a copy of the value stored by the `ArcCell`.",12,[[["self"]],["arc"]]],[11,"defer",R[44],"Schedule code to be executed when exiting the scope.",13,[[["self"],["f"]]]],[11,"spawn",E,"Create a scoped thread.",13,[[["self"],["f"]],[R[90]]]],[11,"join",E,"Join the scoped thread, returning the result it produced.",14,[[],[T]]],[11,R[92],E,"Get the underlying thread handle.",14,[[["self"]],[R[92]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",R[42],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",R[51],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",R[50],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",R[52],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"drop",R[51],E,1,[[["self"]]]],[11,"drop",R[50],E,12,[[["self"]]]],[11,"drop",R[44],E,13,[[["self"]]]],[11,"clone",R[51],E,3,[[["self"]],[R[40]]]],[11,"clone",R[52],E,11,[[["self"]],["stealer"]]],[11,"eq",R[51],E,3,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[40]]],["bool"]]],[11,"eq",R[52],E,9,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["steal"]],["bool"]]],[11,"fmt",R[51],E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[42],E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[50],E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[52],E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[50],E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[44],E,13,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[2]]]],[11,"deref",R[51],E,2,[[["self"]],[T]]],[11,"deref",E,E,3,[[["self"]],[T]]],[11,"deref",R[42],E,4,[[["self"]],[T]]],[11,R[14],R[51],E,2,[[["self"]],[T]]],[11,R[14],R[42],E,4,[[["self"]],[T]]]],"p":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,R[53]],[3,R[54]],[3,"MsQueue"],[3,R[55]],[3,R[56]],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,R[57]]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","i":[[3,"Worker","crossbeam_deque","The worker side of a deque.",N,N],[3,"Stealer",E,"The stealer side of a deque.",N,N],[4,"Pop",E,"Possible outcomes of a pop operation.",N,N],[13,"Empty",E,"The deque was empty at the time of popping.",0,N],[13,"Data",E,"Some data has been successfully popped.",0,N],[13,"Retry",E,"Lost the race for popping data to another concurrent steal…",0,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The deque was empty at the time of stealing.",1,N],[13,"Data",E,"Some data has been successfully stolen.",1,N],[13,"Retry",E,"Lost the race for stealing data to another concurrent…",1,N],[5,"fifo",E,"Creates a work-stealing deque with the first-in first-out…",N,[[]]],[5,"lifo",E,"Creates a work-stealing deque with the last-in first-out…",N,[[]]],[11,R[45],E,R[1447],2,[[["self"]],["bool"]]],[11,"push",E,"Pushes an element into the back of the deque.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the deque.",2,[[["self"]],["pop"]]],[11,R[45],E,R[1447],3,[[["self"]],["bool"]]],[11,"steal",E,"Steals an element from the front of the deque.",3,[[["self"]],["steal"]]],[11,"steal_many",E,"Steals elements from the front of the deque.",3,[[["self"],["worker"]],["steal"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"clone",E,E,0,[[["self"]],["pop"]]],[11,"clone",E,E,1,[[["self"]],["steal"]]],[11,"clone",E,E,3,[[["self"]],["stealer"]]],[11,"cmp",E,E,0,[[["self"],["pop"]],[R[31]]]],[11,"cmp",E,E,1,[[["self"],["steal"]],[R[31]]]],[11,R[117],E,E,0,[[["self"],["pop"]],[[R[31]],[R[32],[R[31]]]]]],[11,"lt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"le",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["pop"]],["bool"]]],[11,R[117],E,E,1,[[["self"],["steal"]],[[R[31]],[R[32],[R[31]]]]]],[11,"lt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"le",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["pop"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]]],"p":[[4,"Pop"],[4,"Steal"],[3,"Worker"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[824],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,R[825],E,"An epoch-based garbage collector.",N,N],[3,R[826],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[820]]]],[5,R[819],E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["self"],[R[31]],["guard"]],[R[40]]]],[11,R[828],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],[R[40]]]],[11,"store",E,R[811],1,[[["self"],["pointer"],[R[31]]]]],[11,"swap",E,R[811],1,[[["self"],[R[31]],["pointer"],["guard"]],[R[40]]]],[11,"compare_and_set",E,R[813],1,[[["self"],[R[40]],["o"],["p"],["guard"]],[[R[2],[R[40],R[812]]],[R[40]],[R[812]]]]],[11,"compare_and_set_weak",E,R[813],1,[[["self"],[R[40]],["o"],["p"],["guard"]],[[R[2],[R[40],R[812]]],[R[40]],[R[812]]]]],[11,R[77],E,"Bitwise \"and\" with the current tag.",1,[[["self"],[R[31]],["usize"],["guard"]],[R[40]]]],[11,R[79],E,"Bitwise \"or\" with the current tag.",1,[[["self"],[R[31]],["usize"],["guard"]],[R[40]]]],[11,R[81],E,"Bitwise \"xor\" with the current tag.",1,[[["self"],[R[31]],["usize"],["guard"]],[R[40]]]],[11,R[815],E,R[816],1,[[],["owned"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,R[2054],E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],[R[40]]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[817],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[818],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],[R[40]]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[814],3,[[["self"]],[T]]],[11,R[14],E,R[814],3,[[["self"]],[T]]],[11,"as_ref",E,"Converts the pointer to a reference.",3,[[["self"]],[[R[32]],[T]]]],[11,R[815],E,R[816],3,[[],["owned"]]],[11,"tag",E,R[817],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[818],3,[[["self"],["usize"]],[R[40]]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,"register",E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,R[819],E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[820],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[820]]]],[11,"defer",E,R[821],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[821],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["self"],[R[40]]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[820],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[32],[R[820]]],[R[820]]]]],[8,R[827],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[31]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[31]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[822],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[625],E,R[823],8,[[["usize"]],["self"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[822],E,E,2,[[],["usize"]]],[11,R[625],E,R[823],2,[[["usize"]],["self"]]],[11,R[822],E,E,3,[[],["usize"]]],[11,R[625],E,E,3,[[["usize"]],["self"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"cmp",E,E,3,[[["self"]],[R[31]]]],[11,R[99],E,E,1,[[],["self"]]],[11,R[99],E,E,3,[[],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[[R[40]]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,R[117],E,E,3,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[820]]],["bool"]]],[11,"as_mut",E,E,2,[[["self"]],[T]]],[11,"as_ref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]]],"p":[[3,R[824]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,R[825]],[3,R[826]],[3,"Guard"],[8,R[827]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,R[476],"crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,R[56],E,"An unbounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[475],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[2],[R[469]]],[R[469]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[2],[R[471]]],[R[471]]]]],[11,R[470],E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[45],E,R[472],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[473],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],[R[474]]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[2],[R[471]]],[R[471]]]]],[11,R[45],E,R[472],2,[[["self"]],["bool"]]],[11,"len",E,R[473],2,[[["self"]],["usize"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,R[95],E,E,3,[[["self"]],[R[63]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[471]]]],[11,"clone",E,E,0,[[["self"]],[R[469]]]],[11,R[99],E,E,2,[[],[R[474]]]],[11,"eq",E,E,3,[[["self"],[R[471]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[469]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[469]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,3,[[["self"]],["str"]]],[11,R[409],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[475]],[3,R[476]],[3,R[56]],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[53],R[83],R[84],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[101],R[93],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[98]]]],[11,R[6],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take",E,"Takes the value of the atomic cell, leaving…",0,[[["self"]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[72],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[72],0,[[["self"],[T]],[R[2]]]],[11,R[73],E,R[74],0,[[["self"],["u8"]],["u8"]]],[11,R[75],E,R[76],0,[[["self"],["u8"]],["u8"]]],[11,R[77],E,R[78],0,[[["self"],["u8"]],["u8"]]],[11,R[79],E,R[80],0,[[["self"],["u8"]],["u8"]]],[11,R[81],E,R[82],0,[[["self"],["u8"]],["u8"]]],[11,R[73],E,R[74],0,[[["self"],["i8"]],["i8"]]],[11,R[75],E,R[76],0,[[["self"],["i8"]],["i8"]]],[11,R[77],E,R[78],0,[[["self"],["i8"]],["i8"]]],[11,R[79],E,R[80],0,[[["self"],["i8"]],["i8"]]],[11,R[81],E,R[82],0,[[["self"],["i8"]],["i8"]]],[11,R[73],E,R[74],0,[[["self"],["u16"]],["u16"]]],[11,R[75],E,R[76],0,[[["self"],["u16"]],["u16"]]],[11,R[77],E,R[78],0,[[["self"],["u16"]],["u16"]]],[11,R[79],E,R[80],0,[[["self"],["u16"]],["u16"]]],[11,R[81],E,R[82],0,[[["self"],["u16"]],["u16"]]],[11,R[73],E,R[74],0,[[["self"],["i16"]],["i16"]]],[11,R[75],E,R[76],0,[[["self"],["i16"]],["i16"]]],[11,R[77],E,R[78],0,[[["self"],["i16"]],["i16"]]],[11,R[79],E,R[80],0,[[["self"],["i16"]],["i16"]]],[11,R[81],E,R[82],0,[[["self"],["i16"]],["i16"]]],[11,R[73],E,R[74],0,[[["self"],["u32"]],["u32"]]],[11,R[75],E,R[76],0,[[["self"],["u32"]],["u32"]]],[11,R[77],E,R[78],0,[[["self"],["u32"]],["u32"]]],[11,R[79],E,R[80],0,[[["self"],["u32"]],["u32"]]],[11,R[81],E,R[82],0,[[["self"],["u32"]],["u32"]]],[11,R[73],E,R[74],0,[[["self"],["i32"]],["i32"]]],[11,R[75],E,R[76],0,[[["self"],["i32"]],["i32"]]],[11,R[77],E,R[78],0,[[["self"],["i32"]],["i32"]]],[11,R[79],E,R[80],0,[[["self"],["i32"]],["i32"]]],[11,R[81],E,R[82],0,[[["self"],["i32"]],["i32"]]],[11,R[73],E,R[74],0,[[["self"],["u64"]],["u64"]]],[11,R[75],E,R[76],0,[[["self"],["u64"]],["u64"]]],[11,R[77],E,R[78],0,[[["self"],["u64"]],["u64"]]],[11,R[79],E,R[80],0,[[["self"],["u64"]],["u64"]]],[11,R[81],E,R[82],0,[[["self"],["u64"]],["u64"]]],[11,R[73],E,R[74],0,[[["self"],["i64"]],["i64"]]],[11,R[75],E,R[76],0,[[["self"],["i64"]],["i64"]]],[11,R[77],E,R[78],0,[[["self"],["i64"]],["i64"]]],[11,R[79],E,R[80],0,[[["self"],["i64"]],["i64"]]],[11,R[81],E,R[82],0,[[["self"],["i64"]],["i64"]]],[11,R[73],E,R[74],0,[[["self"],["u128"]],["u128"]]],[11,R[75],E,R[76],0,[[["self"],["u128"]],["u128"]]],[11,R[77],E,R[78],0,[[["self"],["u128"]],["u128"]]],[11,R[79],E,R[80],0,[[["self"],["u128"]],["u128"]]],[11,R[81],E,R[82],0,[[["self"],["u128"]],["u128"]]],[11,R[73],E,R[74],0,[[["self"],["i128"]],["i128"]]],[11,R[75],E,R[76],0,[[["self"],["i128"]],["i128"]]],[11,R[77],E,R[78],0,[[["self"],["i128"]],["i128"]]],[11,R[79],E,R[80],0,[[["self"],["i128"]],["i128"]]],[11,R[81],E,R[82],0,[[["self"],["i128"]],["i128"]]],[11,R[73],E,R[74],0,[[["self"],["usize"]],["usize"]]],[11,R[75],E,R[76],0,[[["self"],["usize"]],["usize"]]],[11,R[77],E,R[78],0,[[["self"],["usize"]],["usize"]]],[11,R[79],E,R[80],0,[[["self"],["usize"]],["usize"]]],[11,R[81],E,R[82],0,[[["self"],["usize"]],["usize"]]],[11,R[73],E,R[74],0,[[["self"],["isize"]],["isize"]]],[11,R[75],E,R[76],0,[[["self"],["isize"]],["isize"]]],[11,R[77],E,R[78],0,[[["self"],["isize"]],["isize"]]],[11,R[79],E,R[80],0,[[["self"],["isize"]],["isize"]]],[11,R[81],E,R[82],0,[[["self"],["isize"]],["isize"]]],[11,R[77],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[79],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[81],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[102],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[828],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[83],R[84],2,[[[T]],[R[43]]]],[11,R[6],E,"Returns the inner value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[103],R[94],"A sharded reader-writer lock.",N,N],[3,R[106],E,"A guard used to release the shared read access of a…",N,N],[3,R[107],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[104],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,R[85],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[85]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[100]]]],[11,R[6],E,"Consumes this lock, returning the underlying data.",6,[[],[R[86]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying data.",6,[[["self"]],[[T],[R[86]]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[87]],[R[88],[R[87]]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[86],[R[87]]],[R[87]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[89]],[R[88],[R[89]]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[86],[R[89]]],[R[89]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[97]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,R[92],R[83],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[96],"A scope for spawning threads.",N,N],[3,R[105],E,"Configures the properties of a new thread.",N,N],[3,R[57],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[2]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[90]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[91]]]],[11,"name",E,"Sets the name for the new thread.",9,[[[R[63]]],[R[91]]]],[11,R[1469],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[91]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[2],[R[90]]],[R[90]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[2]]]],[11,R[92],E,"Returns a handle to the underlying thread.",10,[[["self"]],[R[92]]]],[11,"into",R[83],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",R[93],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",R[94],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,R[95],E,E,11,[[["self"]],[R[63]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,R[95],E,E,12,[[["self"]],[R[63]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",R[96],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"drop",R[94],E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,"clone",R[83],E,2,[[["self"]],[R[43]]]],[11,"clone",R[94],E,5,[[["self"]],[R[85]]]],[11,"clone",E,E,7,[[["self"]],[R[97]]]],[11,R[99],R[93],E,0,[[],[R[98]]]],[11,R[99],R[83],E,2,[[],[R[43]]]],[11,R[99],E,E,3,[[],["backoff"]]],[11,R[99],R[94],E,6,[[],[R[100]]]],[11,"from",R[83],E,2,[[[T]],["self"]]],[11,"from",R[94],E,6,[[[T]],["self"]]],[11,"eq",R[83],E,2,[[["self"],[R[43]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[43]]],["bool"]]],[11,"fmt",R[93],E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[83],E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[94],E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[96],E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[94],E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"deref",R[83],E,2,[[["self"]],[T]]],[11,"deref",R[94],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,R[14],R[83],E,2,[[["self"]],[T]]],[11,R[14],R[94],E,12,[[["self"]],[T]]],[11,"hash",R[83],E,2,[[["self"],["__ht"]]]]],"p":[[3,R[101]],[8,R[102]],[3,R[53]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[103]],[3,R[104]],[3,"Scope"],[3,R[105]],[3,R[57]],[3,R[106]],[3,R[107]]]};
searchIndex["csv"]={"doc":"The `csv` crate provides a fast and flexible CSV reader…","i":[[3,"ByteRecord","csv","A single CSV record stored as raw bytes.",N,N],[3,R[2282],E,"A double-ended iterator over the fields in a byte record.",N,N],[3,R[528],E,"A position in CSV data.",N,N],[3,R[2272],E,"An Serde deserialization error.",N,N],[3,"Error",E,"An error that can occur when processing CSV data.",N,N],[3,R[1643],E,"A UTF-8 validation error during record conversion.",N,N],[3,R[2274],E,"`IntoInnerError` occurs when consuming a `Writer` fails.",N,N],[3,R[2273],E,"A UTF-8 validation error.",N,N],[3,R[2279],E,"An owned iterator over records as raw bytes.",N,N],[3,R[2280],E,"A borrowed iterator over records as raw bytes.",N,N],[3,R[2275],E,"An owned iterator over deserialized records.",N,N],[3,R[2276],E,"A borrowed iterator over deserialized records.",N,N],[3,"Reader",E,"A already configured CSV reader.",N,N],[3,R[777],E,R[2284],N,N],[3,R[2277],E,"An owned iterator over records as strings.",N,N],[3,R[2278],E,"A borrowed iterator over records as strings.",N,N],[3,R[2281],E,"A single CSV record stored as valid UTF-8 bytes.",N,N],[3,R[2283],E,"An iterator over the fields in a string record.",N,N],[3,"Writer",E,"A already configured CSV writer.",N,N],[3,R[778],E,"Builds a CSV writer with various configuration knobs.",N,N],[4,R[2271],E,"The type of a Serde deserialization error.",N,N],[13,"Message",E,"A generic Serde deserialization error.",0,N],[13,R[2307],E,"A generic Serde unsupported error.",0,N],[13,"UnexpectedEndOfRow",E,"This error occurs when a Rust type expects to decode…",0,N],[13,R[2232],E,"This error occurs when UTF-8 validation on a field fails.…",0,N],[13,"ParseBool",E,"This error occurs when a boolean value fails to parse.",0,N],[13,"ParseInt",E,"This error occurs when an integer value fails to parse.",0,N],[13,"ParseFloat",E,"This error occurs when a float value fails to parse.",0,N],[4,R[715],E,"The specific type of an error.",N,N],[13,"Io",E,"An I/O error that occurred while reading CSV data.",1,N],[13,"Utf8",E,"A UTF-8 decoding error that occured while reading CSV data…",1,N],[12,"pos",R[2233],"The position of the record in which this error occurred,…",1,N],[12,"err",E,"The corresponding UTF-8 error.",1,N],[13,"UnequalLengths","csv","This error occurs when two records with an unequal number…",1,N],[12,"pos",R[2233],"The position of the first record with an unequal number of…",1,N],[12,"expected_len",E,"The expected number of fields in a record. This is the…",1,N],[12,"len",E,"The number of fields in the bad record.",1,N],[13,"Seek","csv","This error occurs when either the `byte_headers` or…",1,N],[13,R[1455],E,"An error of this kind occurs only when using the Serde…",1,N],[13,R[1217],E,"An error of this kind occurs only when performing…",1,N],[12,"pos",R[2233],"The position of this error, if available.",1,N],[12,"err",E,"The deserialization error.",1,N],[4,R[776],"csv",R[2288],N,N],[13,"Always",E,R[2289],2,N],[13,"Necessary",E,R[2290],2,N],[13,"NonNumeric",E,R[2291],2,N],[13,"Never",E,R[2292],2,N],[4,R[775],E,R[2285],N,N],[13,"CRLF",E,R[2286],3,N],[13,"Any",E,R[2287],3,N],[4,"Trim",E,"The whitespace preservation behaviour when reading CSV data.",N,N],[13,"None",E,"Preserves fields and headers. This is the default.",4,N],[13,"Headers",E,"Trim whitespace from headers.",4,N],[13,"Fields",E,"Trim whitespace from fields, but not headers.",4,N],[13,"All",E,"Trim whitespace from fields and headers.",4,N],[5,"invalid_option",E,"A custom Serde deserializer for possibly invalid…",N,[[["d"]],[[R[2],[R[32]]],[R[32]]]]],[11,"new",E,"Create a new empty `ByteRecord`.",5,[[],[R[2234]]]],[11,R[2247],E,"Create a new empty `ByteRecord` with the given capacity…",5,[[["usize"]],[R[2234]]]],[11,R[1193],E,R[2248],5,[[[R[2234]],[R[32],[R[2234]]],["self"]],[[R[1193]],[R[2]]]]],[11,"iter",E,R[2249],5,[[["self"]],["byterecorditer"]]],[11,"get",E,R[2250],5,[[["self"],["usize"]],[R[32]]]],[11,R[45],E,R[2251],5,[[["self"]],["bool"]]],[11,"len",E,R[2252],5,[[["self"]],["usize"]]],[11,R[288],E,R[2253],5,[[["self"],["usize"]]]],[11,"clear",E,R[2254],5,[[["self"]]]],[11,"trim",E,R[2255],5,[[["self"]]]],[11,"push_field",E,R[2256],5,[[["self"]]]],[11,R[212],E,R[2257],5,[[["self"]],[[R[212]],[R[32],[R[212]]]]]],[11,R[2258],E,R[2259],5,[[["self"],[R[32],[R[212]]],[R[212]]]]],[11,"range",E,R[2260],5,[[["self"],["usize"]],[["range",["usize"]],[R[32],["range"]]]]],[11,"as_slice",E,"Return the entire row as a single byte slice. The slice…",5,[[["self"]]]],[11,"new",E,"Returns a new position initialized to the start value.",6,[[],[R[212]]]],[11,"byte",E,"The byte offset, starting at `0`, of this position.",6,[[["self"]],["u64"]]],[11,"line",E,"The line number, starting at `1`, of this position.",6,[[["self"]],["u64"]]],[11,"record",E,"The record index, starting with the first record at `0`.",6,[[["self"]],["u64"]]],[11,"set_byte",E,"Set the byte offset of this position.",6,[[["self"],["u64"]],[R[212]]]],[11,"set_line",E,"Set the line number of this position.",6,[[["self"],["u64"]],[R[212]]]],[11,"set_record",E,"Set the record index of this position.",6,[[["self"],["u64"]],[R[212]]]],[0,"cookbook",E,"A cookbook of examples for CSV reading and writing.",N,N],[11,"field",E,"Return the field index (starting at 0) of this error, if…",7,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"kind",E,"Return the underlying error kind.",7,[[["self"]],[R[2269]]]],[11,"kind",E,"Return the specific type of this error.",8,[[["self"]],[R[710]]]],[11,"into_kind",E,"Unwrap this error into its underlying type.",8,[[],[R[710]]]],[11,"is_io_error",E,"Returns true if this is an I/O error.",8,[[["self"]],["bool"]]],[11,R[212],E,R[2235],8,[[["self"]],[[R[212]],[R[32],[R[212]]]]]],[11,R[212],E,R[2235],1,[[["self"]],[[R[212]],[R[32],[R[212]]]]]],[11,R[2261],E,"Access the underlying `ByteRecord` that failed UTF-8…",9,[[],[R[2234]]]],[11,"utf8_error",E,"Access the underlying UTF-8 validation error.",9,[[["self"]],[R[109]]]],[11,"field",E,"The field index of a byte record in which UTF-8 validation…",10,[[["self"]],["usize"]]],[11,R[2236],E,"The index into the given field up to which valid UTF-8 was…",10,[[["self"]],["usize"]]],[11,"error",E,"Returns the error which caused the call to `into_inner` to…",11,[[["self"]],["error"]]],[11,R[6],E,"Returns the underlying writer which generated the error.",11,[[],["w"]]],[11,"new",E,"Create a new builder for configuring CSV parsing.",12,[[],[R[760]]]],[11,R[2238],E,R[2237],12,[[["self"],["path"],["asref",["path"]]],[[R[2],["reader"]],["reader",["file"]]]]],[11,R[1661],E,R[2237],12,[[["self"],["read"]],[["reader"],["read"]]]],[11,R[168],E,R[2293],12,[[["self"],["u8"]],[R[760]]]],[11,R[2241],E,"Whether to treat the first row as a special header row.",12,[[["self"],["bool"]],[R[760]]]],[11,"flexible",E,R[2263],12,[[["self"],["bool"]],[R[760]]]],[11,"trim",E,"Whether fields are trimmed of leading and trailing…",12,[[["self"],["trim"]],[R[760]]]],[11,R[761],E,R[2294],12,[[["self"],[R[761]]],[R[760]]]],[11,"quote",E,R[2295],12,[[["self"],["u8"]],[R[760]]]],[11,"escape",E,R[2296],12,[[["self"],[R[32],["u8"]],["u8"]],[R[760]]]],[11,R[763],E,R[2264],12,[[["self"],["bool"]],[R[760]]]],[11,"quoting",E,R[2297],12,[[["self"],["bool"]],[R[760]]]],[11,"comment",E,R[2298],12,[[["self"],[R[32],["u8"]],["u8"]],[R[760]]]],[11,"ascii",E,R[2299],12,[[["self"]],[R[760]]]],[11,R[2265],E,"Set the capacity (in bytes) of the buffer used in the CSV…",12,[[["self"],["usize"]],[R[760]]]],[11,R[2238],E,R[2239],13,[[["path"],["asref",["path"]]],[[R[2],["reader"]],["reader",["file"]]]]],[11,R[1661],E,R[2239],13,[[["r"]],["reader"]]],[11,R[1193],E,"Returns a borrowed iterator over deserialized records.",13,[[["self"]],["deserializerecordsiter"]]],[11,"into_deserialize",E,"Returns an owned iterator over deserialized records.",13,[[],["deserializerecordsintoiter"]]],[11,"records",E,"Returns a borrowed iterator over all records as strings.",13,[[["self"]],["stringrecordsiter"]]],[11,"into_records",E,"Returns an owned iterator over all records as strings.",13,[[],["stringrecordsintoiter"]]],[11,"byte_records",E,"Returns a borrowed iterator over all records as raw bytes.",13,[[["self"]],["byterecordsiter"]]],[11,"into_byte_records",E,"Returns an owned iterator over all records as raw bytes.",13,[[],["byterecordsintoiter"]]],[11,"headers",E,"Returns a reference to the first row read by this parser.",13,[[["self"]],[[R[2240]],[R[2],[R[2240]]]]]],[11,"byte_headers",E,"Returns a reference to the first row read by this parser…",13,[[["self"]],[[R[2],[R[2234]]],[R[2234]]]]],[11,"set_headers",E,"Set the headers of this CSV parser manually.",13,[[["self"],[R[2240]]]]],[11,"set_byte_headers",E,"Set the headers of this CSV parser manually as raw bytes.",13,[[["self"],[R[2234]]]]],[11,R[2300],E,"Read a single row into the given record. Returns false…",13,[[["self"],[R[2240]]],[[R[2],["bool"]],["bool"]]]],[11,"read_byte_record",E,"Read a single row into the given byte record. Returns…",13,[[["self"],[R[2234]]],[[R[2],["bool"]],["bool"]]]],[11,R[212],E,"Return the current position of this CSV reader.",13,[[["self"]],[R[212]]]],[11,"is_done",E,"Returns true if and only if this reader has been exhausted.",13,[[["self"]],["bool"]]],[11,R[2241],E,"Returns true if and only if this reader has been…",13,[[["self"]],["bool"]]],[11,"get_ref",E,"Returns a reference to the underlying reader.",13,[[["self"]],["r"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying reader.",13,[[["self"]],["r"]]],[11,R[6],E,"Unwraps this CSV reader, returning the underlying reader.",13,[[],["r"]]],[11,"seek",E,"Seeks the underlying reader to the position given.",13,[[["self"],[R[212]]],[R[2]]]],[11,"seek_raw",E,"This is like `seek`, but provides direct control over how…",13,[[["self"],[R[212]],["seekfrom"]],[R[2]]]],[11,"reader",E,R[2242],14,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],14,[[["self"]],["reader"]]],[11,R[2245],E,R[2246],14,[[],["reader"]]],[11,"reader",E,R[2242],15,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],15,[[["self"]],["reader"]]],[11,"reader",E,R[2242],16,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],16,[[["self"]],["reader"]]],[11,R[2245],E,R[2246],16,[[],["reader"]]],[11,"reader",E,R[2242],17,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],17,[[["self"]],["reader"]]],[11,"reader",E,R[2242],18,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],18,[[["self"]],["reader"]]],[11,R[2245],E,R[2246],18,[[],["reader"]]],[11,"reader",E,R[2242],19,[[["self"]],["reader"]]],[11,R[2244],E,R[2243],19,[[["self"]],["reader"]]],[11,"new",E,"Create a new empty `StringRecord`.",20,[[],[R[2240]]]],[11,R[2247],E,"Create a new empty `StringRecord` with the given capacity.",20,[[["usize"]],[R[2240]]]],[11,"from_byte_record",E,"Create a new `StringRecord` from a `ByteRecord`.",20,[[[R[2234]]],[[R[2240]],[R[1504]],[R[2],[R[2240],R[1504]]]]]],[11,"from_byte_record_lossy",E,"Lossily create a new `StringRecord` from a `ByteRecord`.",20,[[[R[2234]]],[R[2240]]]],[11,R[1193],E,R[2248],20,[[[R[2240]],[R[32],[R[2240]]],["self"]],[[R[1193]],[R[2]]]]],[11,"iter",E,R[2249],20,[[["self"]],["stringrecorditer"]]],[11,"get",E,R[2250],20,[[["self"],["usize"]],[[R[32],["str"]],["str"]]]],[11,R[45],E,R[2251],20,[[["self"]],["bool"]]],[11,"len",E,R[2252],20,[[["self"]],["usize"]]],[11,R[288],E,R[2253],20,[[["self"],["usize"]]]],[11,"clear",E,R[2254],20,[[["self"]]]],[11,"trim",E,R[2255],20,[[["self"]]]],[11,"push_field",E,R[2256],20,[[["self"],["str"]]]],[11,R[212],E,R[2257],20,[[["self"]],[[R[212]],[R[32],[R[212]]]]]],[11,R[2258],E,R[2259],20,[[["self"],[R[32],[R[212]]],[R[212]]]]],[11,"range",E,R[2260],20,[[["self"],["usize"]],[["range",["usize"]],[R[32],["range"]]]]],[11,"as_slice",E,"Return the entire row as a single string slice. The slice…",20,[[["self"]],["str"]]],[11,"as_byte_record",E,"Return a reference to this record's raw `ByteRecord`.",20,[[["self"]],[R[2234]]]],[11,R[2261],E,"Convert this `StringRecord` into a `ByteRecord`.",20,[[],[R[2234]]]],[0,"tutorial",E,"A tutorial for handling CSV data in Rust.",N,N],[11,"new",E,"Create a new builder for configuring CSV writing.",21,[[],[R[762]]]],[11,R[2238],E,R[2262],21,[[["self"],["path"],["asref",["path"]]],[["writer",["file"]],[R[2],["writer"]]]]],[11,R[2266],E,R[2262],21,[[["self"],["write"]],[["writer"],["write"]]]],[11,R[168],E,R[2301],21,[[["self"],["u8"]],[R[762]]]],[11,R[2241],E,"Whether to write a header row before writing any other row.",21,[[["self"],["bool"]],[R[762]]]],[11,"flexible",E,R[2263],21,[[["self"],["bool"]],[R[762]]]],[11,R[761],E,R[2302],21,[[["self"],[R[761]]],[R[762]]]],[11,R[2303],E,R[2304],21,[[["self"],[R[764]]],[R[762]]]],[11,"quote",E,R[2305],21,[[["self"],["u8"]],[R[762]]]],[11,R[763],E,R[2264],21,[[["self"],["bool"]],[R[762]]]],[11,"escape",E,R[2306],21,[[["self"],["u8"]],[R[762]]]],[11,R[2265],E,"Set the capacity (in bytes) of the internal buffer used in…",21,[[["self"],["usize"]],[R[762]]]],[11,R[2238],E,R[2267],22,[[["path"],["asref",["path"]]],[["writer",["file"]],[R[2],["writer"]]]]],[11,R[2266],E,R[2267],22,[[["w"]],["writer"]]],[11,R[1655],E,"Serialize a single record using Serde.",22,[[["self"],[R[1655]]],[R[2]]]],[11,"write_record",E,"Write a single record.",22,[[["self"],["i"]],[R[2]]]],[11,"write_byte_record",E,"Write a single `ByteRecord`.",22,[[["self"],[R[2234]]],[R[2]]]],[11,"write_field",E,"Write a single field.",22,[[["self"],["asref"]],[R[2]]]],[11,"flush",E,"Flush the contents of the internal buffer to the…",22,[[["self"]],[R[2]]]],[11,R[6],E,"Flush the contents of the internal buffer and return the…",22,[[],[[R[2],[R[2268]]],[R[2268],["writer"]]]]],[6,"Result",E,"A type alias for `Result<T, csv::Error>`.",N,N],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,R[30],E,E,23,[[],["i"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[95],E,E,7,[[["self"]],[R[63]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,R[95],E,E,8,[[["self"]],[R[63]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,R[95],E,E,9,[[["self"]],[R[63]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,R[95],E,E,11,[[["self"]],[R[63]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,R[95],E,E,10,[[["self"]],[R[63]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,R[30],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,19,[[],[U]]],[11,R[30],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,14,[[],[U]]],[11,R[30],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,R[30],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,R[30],E,E,16,[[],["i"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",E,E,17,[[],[U]]],[11,R[30],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[37],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"],[T]]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,24,[[],[U]]],[11,R[30],E,E,24,[[],["i"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"extend",E,E,5,[[["self"],[R[120]]]]],[11,"extend",E,E,20,[[["self"],[R[120]]]]],[11,"drop",E,E,22,[[["self"]]]],[11,"clone",E,E,5,[[["self"]],[R[2234]]]],[11,"clone",E,E,6,[[["self"]],[R[212]]]],[11,"clone",E,E,7,[[["self"]],[R[2270]]]],[11,"clone",E,E,0,[[["self"]],[R[2269]]]],[11,"clone",E,E,9,[[["self"]],[R[1504]]]],[11,"clone",E,E,10,[[["self"]],[R[109]]]],[11,"clone",E,E,20,[[["self"]],[R[2240]]]],[11,"clone",E,E,2,[[["self"]],[R[764]]]],[11,"clone",E,E,3,[[["self"]],[R[761]]]],[11,"clone",E,E,4,[[["self"]],["trim"]]],[11,R[99],E,E,5,[[],[R[2234]]]],[11,R[99],E,E,12,[[],[R[760]]]],[11,R[99],E,E,20,[[],[R[2240]]]],[11,R[99],E,E,21,[[],[R[762]]]],[11,R[99],E,E,2,[[],[R[764]]]],[11,R[99],E,E,3,[[],[R[761]]]],[11,R[99],E,E,4,[[],["trim"]]],[11,"from",E,E,5,[[[R[2240]]],[R[2234]]]],[11,"from",E,E,5,[[["vec"]],[R[2234]]]],[11,"from",E,E,5,[[],[R[2234]]]],[11,"from",E,E,8,[[["error"]],["error"]]],[11,"from",E,E,20,[[["vec"]],[R[2240]]]],[11,"from",E,E,20,[[],[R[2240]]]],[11,R[119],E,E,23,[[["self"]],[R[32]]]],[11,R[119],E,E,24,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"eq",E,E,5,[[["self"],[R[2234]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,5,[[["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[212]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[212]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[2270]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[2270]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[2269]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[2269]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[1504]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[1504]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[109]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[109]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[2240]]],["bool"]]],[11,"eq",E,E,20,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,20,[[["self"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["trim"]],["bool"]]],[11,"next",E,E,23,[[["self"]],[R[32]]]],[11,R[118],E,E,23,[[["self"]]]],[11,"count",E,E,23,[[],["usize"]]],[11,"next",E,E,14,[[["self"]],[[R[2]],[R[32],[R[2]]]]]],[11,"next",E,E,15,[[["self"]],[[R[2]],[R[32],[R[2]]]]]],[11,"next",E,E,16,[[["self"]],[[R[32],[R[2]]],[R[2],[R[2240]]]]]],[11,"next",E,E,17,[[["self"]],[[R[32],[R[2]]],[R[2],[R[2240]]]]]],[11,"next",E,E,18,[[["self"]],[[R[2],[R[2234]]],[R[32],[R[2]]]]]],[11,"next",E,E,19,[[["self"]],[[R[2],[R[2234]]],[R[32],[R[2]]]]]],[11,"next",E,E,24,[[["self"]],[["str"],[R[32],["str"]]]]],[11,R[118],E,E,24,[[["self"]]]],[11,"count",E,E,24,[[],["usize"]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"index",E,E,5,[[["self"],["usize"]]]],[11,"index",E,E,20,[[["self"],["usize"]],["str"]]],[11,R[176],E,E,5,[[[R[120]]],[R[2234]]]],[11,R[176],E,E,20,[[[R[120]]],[R[2240]]]],[11,R[409],E,E,7,[[["self"]],["str"]]],[11,"source",E,E,8,[[["self"]],[["stderror"],[R[32],["stderror"]]]]],[11,"source",E,E,9,[[["self"]],[["stderror"],[R[32],["stderror"]]]]],[11,"source",E,E,11,[[["self"]],[["stderror"],[R[32],["stderror"]]]]],[11,"custom",E,E,8,[[["display"]],["error"]]],[11,"custom",E,E,7,[[["display"]],[R[2270]]]]],"p":[[4,R[2271]],[4,R[715]],[4,R[776]],[4,R[775]],[4,"Trim"],[3,"ByteRecord"],[3,R[528]],[3,R[2272]],[3,"Error"],[3,R[1643]],[3,R[2273]],[3,R[2274]],[3,R[777]],[3,"Reader"],[3,R[2275]],[3,R[2276]],[3,R[2277]],[3,R[2278]],[3,R[2279]],[3,R[2280]],[3,R[2281]],[3,R[778]],[3,"Writer"],[3,R[2282]],[3,R[2283]]]};
searchIndex["csv_core"]={"doc":"`csv-core` provides a fast CSV reader and writer for use…","i":[[3,"Reader",R[755],"A pull based CSV reader.",N,N],[3,R[777],E,R[2284],N,N],[3,"Writer",E,"A writer for CSV data.",N,N],[3,R[778],E,"A builder for configuring a CSV writer.",N,N],[4,R[770],E,"The result of parsing at most one field from CSV data…",N,N],[13,R[750],E,R[751],0,N],[13,"Field",E,R[752],0,N],[12,R[753],"csv_core::ReadFieldNoCopyResult",R[754],0,N],[13,"End",R[755],R[756],0,N],[4,R[771],E,"The result of parsing at most one field from CSV data.",N,N],[13,R[750],E,R[751],1,N],[13,R[757],E,R[758],1,N],[13,"Field",E,R[752],1,N],[12,R[753],"csv_core::ReadFieldResult",R[754],1,N],[13,"End",R[755],R[756],1,N],[4,R[772],E,"The result of parsing at most one record from CSV data…",N,N],[13,R[750],E,R[751],2,N],[13,"Record",E,R[759],2,N],[13,"End",E,R[756],2,N],[4,R[773],E,"The result of parsing at most one record from CSV data.",N,N],[13,R[750],E,R[751],3,N],[13,R[757],E,R[758],3,N],[13,"OutputEndsFull",E,"The caller provided output buffer of field end poisitions…",3,N],[13,"Record",E,R[759],3,N],[13,"End",E,R[756],3,N],[4,R[774],E,"The result of writing CSV data.",N,N],[13,R[750],E,"This result occurs when all of the bytes from the given…",4,N],[13,R[757],E,"This result occurs when the output buffer was too small to…",4,N],[4,R[775],E,R[2285],N,N],[13,"CRLF",E,R[2286],5,N],[13,"Any",E,R[2287],5,N],[4,R[776],E,R[2288],N,N],[13,"Always",E,R[2289],6,N],[13,"Necessary",E,R[2290],6,N],[13,"NonNumeric",E,R[2291],6,N],[13,"Never",E,R[2292],6,N],[5,"is_non_numeric",E,"Returns true if and only if the given input is non-numeric.",N,[[],["bool"]]],[5,"quote",E,"Escape quotes `input` and writes the result to `output`.",N,[[["bool"],["u8"]]]],[11,"new",E,"Create a new builder.",7,[[],[R[760]]]],[11,"build",E,"Build a CSV parser from this configuration.",7,[[["self"]],["reader"]]],[11,R[168],E,R[2293],7,[[["self"],["u8"]],[R[760]]]],[11,R[761],E,R[2294],7,[[["self"],[R[761]]],[R[760]]]],[11,"quote",E,R[2295],7,[[["self"],["u8"]],[R[760]]]],[11,"escape",E,R[2296],7,[[["self"],[R[32],["u8"]],["u8"]],[R[760]]]],[11,R[763],E,R[2264],7,[[["self"],["bool"]],[R[760]]]],[11,"quoting",E,R[2297],7,[[["self"],["bool"]],[R[760]]]],[11,"comment",E,R[2298],7,[[["self"],[R[32],["u8"]],["u8"]],[R[760]]]],[11,"ascii",E,R[2299],7,[[["self"]],[R[760]]]],[11,"new",E,"Create a new CSV reader with a default parser configuration.",8,[[],["reader"]]],[11,"reset",E,"Reset the parser such that it behaves as if it had never…",8,[[["self"]]]],[11,"line",E,"Return the current line number as measured by the number…",8,[[["self"]],["u64"]]],[11,"set_line",E,"Set the line number.",8,[[["self"],["u64"]]]],[11,"read_field",E,"Parse a single CSV field in `input` and copy field data to…",8,[[["self"]]]],[11,R[2300],E,"Parse a single CSV record in `input` and copy each field…",8,[[["self"]]]],[11,"new",E,"Create a new builder for configuring a CSV writer.",9,[[],[R[762]]]],[11,"build",E,"Builder a CSV writer from this configuration.",9,[[["self"]],["writer"]]],[11,R[168],E,R[2301],9,[[["self"],["u8"]],[R[762]]]],[11,R[761],E,R[2302],9,[[["self"],[R[761]]],[R[762]]]],[11,R[2303],E,R[2304],9,[[["self"],[R[764]]],[R[762]]]],[11,"quote",E,R[2305],9,[[["self"],["u8"]],[R[762]]]],[11,"escape",E,R[2306],9,[[["self"],["u8"]],[R[762]]]],[11,R[763],E,"The quoting escape mechanism to use when writing CSV.",9,[[["self"],["bool"]],[R[762]]]],[11,"new",E,"Creates a new CSV writer with the default configuration.",10,[[],["writer"]]],[11,"finish",E,"Finish writing CSV data to `output`.",10,[[["self"]]]],[11,"field",E,"Write a single CSV field from `input` to `output` while…",10,[[["self"]]]],[11,R[168],E,"Write the configured field delimiter to `output`.",10,[[["self"]]]],[11,R[761],E,"Write the configured record terminator to `output`.",10,[[["self"]]]],[11,"is_special_byte",E,"Returns true if and only if the given byte corresponds to…",10,[[["self"],["u8"]],["bool"]]],[11,"should_quote",E,"Returns true if and only if we should put the given field…",10,[[["self"]],["bool"]]],[11,"get_delimiter",E,"Return the delimiter used for this writer.",10,[[["self"]],["u8"]]],[11,"get_terminator",E,"Return the terminator used for this writer.",10,[[["self"]],[R[761]]]],[11,"get_quote_style",E,"Return the quoting style used for this writer.",10,[[["self"]],[R[764]]]],[11,"get_quote",E,"Return the quote character used for this writer.",10,[[["self"]],["u8"]]],[11,"get_escape",E,"Return the escape character used for this writer.",10,[[["self"]],["u8"]]],[11,"get_double_quote",E,"Return whether this writer doubles quotes or not. When the…",10,[[["self"]],["bool"]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,1,[[["self"],[R[765]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[765]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[766]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[766]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[767]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[768]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[769]]],["bool"]]],[11,"clone",E,E,8,[[["self"]],["reader"]]],[11,"clone",E,E,1,[[["self"]],[R[765]]]],[11,"clone",E,E,0,[[["self"]],[R[766]]]],[11,"clone",E,E,3,[[["self"]],[R[767]]]],[11,"clone",E,E,2,[[["self"]],[R[768]]]],[11,"clone",E,E,4,[[["self"]],[R[769]]]],[11,"clone",E,E,10,[[["self"]],["writer"]]],[11,"clone",E,E,5,[[["self"]],[R[761]]]],[11,"clone",E,E,6,[[["self"]],[R[764]]]],[11,R[99],E,E,8,[[],["reader"]]],[11,R[99],E,E,7,[[],[R[760]]]],[11,R[99],E,E,9,[[],[R[762]]]],[11,R[99],E,E,10,[[],["writer"]]],[11,R[99],E,E,5,[[],[R[761]]]],[11,R[99],E,E,6,[[],[R[764]]]]],"p":[[4,R[770]],[4,R[771]],[4,R[772]],[4,R[773]],[4,R[774]],[4,R[775]],[4,R[776]],[3,R[777]],[3,"Reader"],[3,R[778]],[3,"Writer"]]};
searchIndex["duck"]={"doc":E,"i":[[0,"types","duck",E,N,N],[4,R[421],R[415],E,N,N],[13,"Integer",E,E,0,N],[13,"Text",E,E,0,N],[13,"Float",E,E,0,N],[13,"Bool",E,E,0,N],[6,"DInteger",E,E,N,N],[6,"DFloat",E,E,N,N],[0,R[414],"duck",E,N,N],[4,"Element",R[416],"Basic elementary cell in data frame",N,N],[13,"Text",E,E,1,N],[13,"Integer",E,E,1,N],[13,"Float",E,E,1,N],[13,"Bool",E,E,1,N],[11,"data_type",E,E,1,[[["self"]],["datatypes"]]],[0,"macros","duck",E,N,N],[0,R[412],E,E,N,N],[3,R[422],R[417],E,N,N],[12,"size",E,E,2,N],[12,"labels",E,E,2,N],[12,"data",E,E,2,N],[8,R[423],E,E,N,N],[10,"new",E,E,3,[[["vec",["str"]],["vec",["vec"]],["vec",[R[414]]],["str"]],[R[412]]]],[10,"push",E,E,3,[[["self"],[R[414]],["vec",[R[414]]]]]],[10,"series",E,E,3,[[["self"],["usize"]],["series"]]],[10,"by",E,R[413],3,[[["self"],["str"]],[[R[32],["series"]],["series"]]]],[10,"many",E,R[413],3,[[["self"],["str"],["vec",["str"]]],[["vec",["series"]],["series",[R[414]]]]]],[10,"map",E,E,3,[[["self"],["u32"],["hashmap",["str","u32"]],["str"]],[R[412]]]],[10,"concat",E,"Concatenate two data frames",3,[[["self"],[R[412]]],[R[412]]]],[10,"drop",E,"Drop column by label from Data Frame",3,[[["self"],["str"],["vec",["str"]]],[[R[32],[R[412]]],[R[412]]]]],[10,"drop_idx",E,"Drop column by position from Data Frame",3,[[["self"],["usize"]],[[R[32],[R[412]]],[R[412]]]]],[10,R[419],E,E,3,[[["str"]],["bool"]]],[10,"read_csv",E,E,3,[[[R[63]]],[[R[2],[R[412],"box"]],[R[412]],["box",["error"]]]]],[8,R[424],E,E,N,N],[10,R[420],E,"One hot encoding - Convert string values to binary value",4,[[["self"],["str"]],[R[412]]]],[10,"from_vec",E,E,4,[[["vec",["vec"]],["vec"],["str"],["vec",["str"]]],[R[412]]]],[0,"series","duck",E,N,N],[3,"Series",R[418],E,N,N],[12,"label",E,E,5,N],[12,"data",E,E,5,N],[4,"TSeries",E,E,N,N],[13,"Text",E,E,6,N],[13,"Number",E,E,6,N],[13,"Float",E,E,6,N],[13,"Bool",E,E,6,N],[8,R[425],E,E,N,N],[10,"new",E,E,7,[[],[[R[414]],["series",[R[414]]]]]],[10,"push",E,E,7,[[["self"],[R[414]]]]],[10,"unique",E,E,7,[[["self"]],[[R[414]],["series",[R[414]]]]]],[10,R[419],E,E,7,[[["str"]],["bool"]]],[0,"tests","duck",E,N,N],[0,"tests_dataframe","duck::tests",E,N,N],[0,"utils","duck",E,N,N],[0,"math","duck::utils",E,N,N],[5,"minmax","duck::utils::math",E,N,[[["f32"]]]],[5,"series_minmax",E,E,N,[[[R[414]],["series",[R[414]]]]]],[14,"row","duck",E,N,N]],"p":[[4,R[421]],[4,"Element"],[3,R[422]],[8,R[423]],[8,R[424]],[3,"Series"],[4,"TSeries"],[8,R[425]]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either",R[25],R[182],N,N],[13,"Left",E,R[183],0,N],[13,"Right",E,R[184],0,N],[11,"is_left",E,R[214],0,[[["self"]],["bool"]]],[11,"is_right",E,R[215],0,[[["self"]],["bool"]]],[11,"left",E,R[216],0,[[],[R[32]]]],[11,"right",E,R[217],0,[[],[R[32]]]],[11,"as_ref",E,R[218],0,[[["self"]],[["r"],[R[25]],["l"]]]],[11,"as_mut",E,R[219],0,[[["self"]],[["r"],["l"],[R[25]]]]],[11,"flip",E,R[220],0,[[],[R[25]]]],[11,"map_left",E,R[26],0,[[["f"]],[R[25]]]],[11,R[221],E,R[27],0,[[["f"]],[R[25]]]],[11,R[25],E,R[222],0,[[["f"],["g"]],[T]]],[11,R[223],E,R[224],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[225],E,R[26],0,[[["f"]],[R[25]]]],[11,R[226],E,R[27],0,[[["f"]],[R[25]]]],[11,R[30],E,R[227],0,[[],[R[25]]]],[11,"left_or",E,R[228],0,[[["l"]],["l"]]],[11,R[229],E,R[230],0,[[],["l"]]],[11,R[231],E,R[28],0,[[["f"]],["l"]]],[11,"right_or",E,R[232],0,[[["r"]],["r"]]],[11,R[233],E,R[234],0,[[],["r"]]],[11,R[235],E,R[28],0,[[["f"]],["r"]]],[11,R[236],E,R[29],0,[[]]],[11,R[237],E,R[29],0,[[]]],[11,R[6],E,R[238],0,[[],[T]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,R[30],E,E,0,[[],["i"]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[25]]],[R[31]]]],[11,R[117],E,E,0,[[["self"],[R[25]]],[[R[32],[R[31]]],[R[31]]]]],[11,"lt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"deref",E,E,0,[[["self"]]]],[11,R[14],E,E,0,[[["self"]]]],[11,"hash",E,E,0,[[["self"],["__hlr"]]]],[11,"next",E,E,0,[[["self"]],[R[32]]]],[11,R[118],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[32]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[32]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[119],E,E,0,[[["self"]],[R[32]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,"from",E,E,0,[[[R[2]]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[25]]]]],"p":[[4,"Either"]]};
searchIndex["getrandom"]={"doc":R[808],"i":[[3,"Error",R[481],"A small and `no_std` compatible error type.",N,N],[5,R[481],E,"Fill `dest` with random bytes from the system's preferred…",N,[[],[[R[2],["error"]],["error"]]]],[18,"UNKNOWN",E,"Unknown error.",0,N],[18,"UNAVAILABLE",E,"System entropy source is unavailable.",0,N],[18,R[718],E,R[719],0,N],[18,R[720],E,R[721],0,N],[11,R[722],E,R[723],0,[[],[[R[32],["i32"]],["i32"]]]],[11,"code",E,"Extract the bare error code.",0,[[],[R[482]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,0,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["error"]],["bool"]]],[11,"from",E,E,0,[[[R[482]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"clone",E,E,0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["itertools"]={"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either",R[191],R[182],N,N],[13,"Left",E,R[183],0,N],[13,"Right",E,R[184],0,N],[4,"Diff",E,"A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch",E,"The index of the first non-matching element along with…",1,N],[13,"Shorter",E,"The total number of elements that were in `J` along with…",1,N],[13,"Longer",E,"The total number of elements that were in `I` along with…",1,N],[4,R[239],E,"`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements",E,"Empty iterator",2,N],[13,"OneElement",E,"Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax",E,"More than one element in the iterator, the first element…",2,N],[4,R[528],E,"A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First",E,"This is the first element.",3,N],[13,"Middle",E,"This is neither the first nor the last element.",3,N],[13,"Last",E,"This is the last element.",3,N],[13,"Only",E,"This is the only element.",3,N],[4,R[240],E,"Value that either holds a single A or B, or both.",N,N],[13,"Both",E,"Both values are present.",4,N],[13,"Left",E,"Only the left value of type `A` is present.",4,N],[13,"Right",E,"Only the right value of type `B` is present.",4,N],[4,R[241],E,"An enum used for controlling the execution of…",N,N],[13,R[929],E,R[2035],5,N],[13,"Done",E,R[2036],5,N],[5,"concat",E,R[203],N,[[["i"]]]],[5,"cons_tuples",E,"Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with",E,"Compares every element yielded by both `i` and `j` with…",N,[[["j"],["i"],["f"]],[["diff"],[R[32],["diff"]]]]],[5,R[388],E,R[383],N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results",E,"“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],[R[2]]]],[5,"repeat_n",E,"Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call",E,"An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold",E,"Creates a new unfold source with the specified closure as…",N,[[["f"],["st"]],["unfold"]]],[5,"iterate",E,"Creates a new iterator that infinitely applies function to…",N,[[["f"],["st"]],["iterate"]]],[5,"multizip",E,"An iterator that generalizes .zip() and allows running…",N,[[[U]],["zip"]]],[5,R[185],E,"Create an iterator that interleaves elements in `i` and `j`.",N,[[["j"],["i"]],[R[185]]]],[5,"merge",E,"Create an iterator that merges elements in `i` and `j`.",N,[[["j"],["i"]],["merge"]]],[5,R[387],E,"Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n",E,"Create an iterator where you can put back multiple values…",N,[[["i"]],["putbackn"]]],[5,R[382],E,"An iterator adaptor that allows the user to peek at…",N,[[["i"]],[R[382]]]],[5,"kmerge",E,R[383],N,[[["i"]],["kmerge"]]],[5,"zip_eq",E,R[187],N,[[["j"],["i"]],["zipeq"]]],[5,R[199],E,"Return an iterator adaptor that merge-joins items from the…",N,[[["j"],["i"],["f"]],[R[200]]]],[5,"rciter",E,"Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,R[186],E,"Iterate `iterable` with a running index.",N,[[["i"]],[R[186]]]],[5,"rev",E,"Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip",E,R[187],N,[[["j"],["i"]],["zip"]]],[5,"chain",E,"Create an iterator that first iterates `i` and then `j`.",N,[[["j"],["i"]],["chain"]]],[5,"cloned",E,"Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold",E,"Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all",E,"Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any",E,"Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max",E,"Return the maximum value of the iterable.",N,[[["i"]],[R[32]]]],[5,"min",E,"Return the minimum value of the iterable.",N,[[["i"]],[R[32]]]],[5,"join",E,R[392],N,[[["i"],["str"]],[R[63]]]],[5,"sorted",E,R[393],N,[[["i"]],[R[174]]]],[5,"equal",E,"Return `true` if both iterables produce equal sequences…",N,[[["j"],["i"]],["bool"]]],[5,"assert_equal",E,"Assert that two iterables produce equal sequences, with…",N,[[["j"],["i"]]]],[5,"partition",E,"Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs",E,"The concrete iterator types.",N,N],[3,"Dedup",R[193],"An iterator adaptor that removes repeated duplicates.",N,N],[3,R[244],E,"An iterator adaptor that alternates elements from two…",N,N],[3,R[245],E,"An iterator adaptor that alternates elements from the two…",N,N],[3,"Product",E,R[384],N,N],[3,"PutBack",E,"An iterator adaptor that allows putting back a single item…",N,N],[3,"Batching",E,R[197],N,N],[3,"MapInto",E,"An iterator adapter to apply `Into` conversion to each…",N,N],[3,R[246],E,"An iterator adapter to apply a transformation within a…",N,N],[3,"Merge",E,R[188],N,N],[3,"MergeBy",E,R[188],N,N],[3,R[247],E,"An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,R[248],E,"An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce",E,"An iterator adaptor that may join together adjacent…",N,N],[3,R[249],E,"An iterator to iterate through all combinations in a…",N,N],[3,R[250],E,"An iterator adapter to get the positions of each element…",N,N],[3,"Update",E,"An iterator adapter to apply a mutating function to each…",N,N],[3,"Step",E,"An iterator adaptor that steps a number elements in the…",N,N],[3,R[396],E,R[384],N,N],[3,R[397],E,"An iterator to iterate through all the `n`-length…",N,N],[3,R[251],E,"An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,"Format",E,R[189],N,N],[3,R[252],E,R[189],N,N],[3,R[398],E,"`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk",E,"An iterator for the elements in a single chunk.",N,N],[3,"Chunks",E,"An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy",E,"`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group",E,"An iterator for the elements in a single group.",N,N],[3,"Groups",E,"An iterator that yields the Group iterators.",N,N],[3,R[253],E,R[194],N,N],[3,"KMerge",E,R[385],N,N],[3,"KMergeBy",E,R[385],N,N],[3,R[254],E,"An iterator adaptor that merge-joins items from the two…",N,N],[3,R[395],E,"See `multipeek()` for more information.",N,N],[3,"PadUsing",E,"An iterator adaptor that pads a sequence to a minimum…",N,N],[3,R[255],E,"An iterator adaptor that takes items while a closure…",N,N],[3,R[256],E,"An iterator that produces only the `T` values as long as…",N,N],[3,"PutBackN",E,"An iterator adaptor that allows putting multiple items in…",N,N],[3,"RcIter",E,"A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter",E,"The boxed iterator.",6,N],[3,"RepeatN",E,"An iterator that produces n repetitions of an element.",N,N],[3,R[257],E,"See `repeat_call` for more information.",N,N],[3,"Unfold",E,"See `unfold` for more information.",N,N],[12,"state",E,"Internal state that will be passed to the closure on the…",7,N],[3,"Iterate",E,"An iterator that infinitely applies function to value and…",N,N],[3,"Tee",E,"One half of an iterator pair where both return the same…",N,N],[3,R[258],E,"An iterator over a incomplete tuple.",N,N],[3,R[259],E,"An iterator over all contiguous windows that produces…",N,N],[3,"Tuples",E,"An iterator that groups the items in tuples of a specific…",N,N],[3,"Unique",E,R[386],N,N],[3,"UniqueBy",E,R[386],N,N],[3,R[260],E,"An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq",E,R[190],N,N],[3,R[261],E,R[190],N,N],[3,"Zip",E,"See `multizip` for more information.",N,N],[11,"with_value",E,"put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts",E,"Split the `PutBack` into its parts.",8,[[]]],[11,R[387],E,"Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left",R[191],"If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right",E,"If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"left",E,"If `Left`, or `Both`, return `Some` with the left value,…",4,[[],[R[32]]]],[11,"right",E,"If `Right`, or `Both`, return `Some` with the right value,…",4,[[],[R[32]]]],[11,"as_ref",E,"Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],[R[192]],["a"]]]],[11,"as_mut",E,"Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[[R[192]],["a"],["b"]]]],[11,"into_option",E,"`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],[R[32]]]],[11,"reset_peek",R[193],"Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek",E,"Works exactly like `.next()` with the only difference that…",9,[[["self"]],[R[32]]]],[11,R[387],E,"Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer",E,"Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,R[6],R[191],"Return the inner value.",3,[[],[T]]],[8,R[242],E,"An iterator that allows peeking at an element before…",N,N],[10,R[207],E,"Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],[R[32]]]],[8,R[243],E,"An [`Iterator`] blanket implementation that provides extra…",N,N],[11,R[185],E,"Alternate elements from two iterators until both have run…",13,[[["j"]],[R[185]]]],[11,R[2325],E,"Alternate elements from two iterators until at least one…",13,[[["j"]],[R[209]]]],[11,R[195],E,R[194],13,[[],[R[195]]]],[11,"zip_longest",E,R[196],13,[[["j"]],[R[213]]]],[11,"zip_eq",E,R[196],13,[[["j"]],["zipeq"]]],[11,R[210],E,R[197],13,[[["f"]],[R[210]]]],[11,"group_by",E,"Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks",E,"Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows",E,"Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples",E,"Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee",E,"Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step",E,"Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into",E,"Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results",E,"Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge",E,R[198],13,[[["j"]],["merge"]]],[11,"merge_by",E,R[198],13,[[["j"],["f"]],["mergeby"]]],[11,R[199],E,"Create an iterator that merges items from both this and…",13,[[["j"],["f"]],[R[200]]]],[11,"kmerge",E,R[389],13,[[],["kmerge"]]],[11,R[388],E,R[389],13,[[["f"]],["kmergeby"]]],[11,"cartesian_product",E,R[201],13,[[["j"]],["product"]]],[11,"multi_cartesian_product",E,R[201],13,[[],[R[394]]]],[11,"coalesce",E,"Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup",E,"Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"unique",E,R[390],13,[[],["unique"]]],[11,"unique_by",E,R[390],13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while",E,"Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref",E,"Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some",E,"Return an iterator adaptor that filters `Option<A>`…",13,[[],[R[211]]]],[11,"tuple_combinations",E,R[201],13,[[],["tuplecombinations"]]],[11,R[391],E,R[201],13,[[["usize"]],[R[391]]]],[11,"pad_using",E,"Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"with_position",E,"Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,R[202],E,"Return an iterator adaptor that yields the indices of all…",13,[[["p"]],[R[202]]]],[11,"update",E,"Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple",E,"Advances the iterator and returns the next items grouped…",13,[[["self"]],[R[32]]]],[11,"collect_tuple",E,"Collects all items from the iterator into a tuple of a…",13,[[],[R[32]]]],[11,"find_position",E,"Find the position and value of the first element…",13,[[["self"],["p"]],[R[32]]]],[11,"all_equal",E,"Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping",E,"Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back",E,"Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach",E,"Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat",E,R[203],13,[[]]],[11,"collect_vec",E,"`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from",E,"Assign to each reference in `self` from the `from`…",13,[[["self"],["j"]],["usize"]]],[11,"join",E,R[392],13,[[["self"],["str"]],[R[63]]]],[11,"format",E,R[204],13,[[["str"]],["format"]]],[11,"format_with",E,R[204],13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results",E,"Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],[R[2]]]],[11,"fold_options",E,"Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],[R[32]]]],[11,"fold1",E,"Accumulator of the elements in the iterator.",13,[[["f"]],[R[32]]]],[11,"tree_fold1",E,"Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],[R[32]]]],[11,R[2048],E,"An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],[R[208]]]],[11,"sorted",E,R[393],13,[[],[R[174]]]],[11,"sorted_by",E,R[393],13,[[["f"]],[R[174]]]],[11,"sorted_by_key",E,R[393],13,[[["f"]],[R[174]]]],[11,R[2323],E,"Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map",E,"Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["vec"],["hashmap",["vec"]]]]],[11,"minmax",E,"Return the minimum and maximum elements in the iterator.",13,[[],[R[205]]]],[11,"minmax_by_key",E,R[206],13,[[["f"]],[R[205]]]],[11,"minmax_by",E,R[206],13,[[["f"]],[R[205]]]],[11,R[6],E,"Return the value in the continue or done.",5,[[],[T]]],[11,"is_done",E,"Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct",E,"Create an iterator over the “cartesian product” of…",N,N],[14,"izip",E,"Create an iterator running multiple iterators in lockstep.",N,N],[11,"into",E,E,0,[[],[U]]],[11,R[30],E,E,0,[[],["i"]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",R[193],E,14,[[],[U]]],[11,R[30],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[37],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"],[T]]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,R[30],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"],[T]]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,R[30],E,E,16,[[],["i"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"],[T]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",E,E,17,[[],[U]]],[11,R[30],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[37],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"],[T]]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,R[30],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,R[30],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[37],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"],[T]]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,19,[[],[U]]],[11,R[30],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,R[30],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,R[30],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[37],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"],[T]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,R[30],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[37],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"],[T]]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,R[30],E,E,23,[[],["i"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,24,[[],[U]]],[11,R[30],E,E,24,[[],["i"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,R[30],E,E,25,[[],["i"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,R[30],E,E,26,[[],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,R[30],E,E,27,[[],["i"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"into",E,E,28,[[],[U]]],[11,R[30],E,E,28,[[],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",E,E,29,[[],[U]]],[11,R[30],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,R[30],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",E,E,31,[[],[U]]],[11,R[30],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"into",E,E,32,[[],[U]]],[11,R[30],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,33,[[],[U]]],[11,R[95],E,E,33,[[["self"]],[R[63]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[37],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"],[T]]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,"into",E,E,34,[[],[U]]],[11,R[95],E,E,34,[[["self"]],[R[63]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,"into",E,E,36,[[],[U]]],[11,R[30],E,E,36,[[],["i"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,"into",E,E,37,[[],[U]]],[11,R[30],E,E,37,[[],["i"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,"into",E,E,39,[[],[U]]],[11,R[30],E,E,39,[[],["i"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,"into",E,E,40,[[],[U]]],[11,R[30],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,"into",E,E,41,[[],[U]]],[11,R[30],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[37],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"],[T]]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,"into",E,E,42,[[],[U]]],[11,R[30],E,E,42,[[],["i"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,"into",E,E,43,[[],[U]]],[11,R[30],E,E,43,[[],["i"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,"into",E,E,44,[[],[U]]],[11,R[30],E,E,44,[[],["i"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,R[30],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,45,[[],[U]]],[11,R[30],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[37],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"],[T]]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,"into",E,E,46,[[],[U]]],[11,R[30],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,"into",E,E,47,[[],[U]]],[11,R[30],E,E,47,[[],["i"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,R[30],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,R[30],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,48,[[],[U]]],[11,R[30],E,E,48,[[],["i"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,"into",E,E,49,[[],[U]]],[11,R[30],E,E,49,[[],["i"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[30],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,50,[[],[U]]],[11,R[30],E,E,50,[[],["i"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[37],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"],[T]]]],[11,R[7],E,E,50,[[[U]],[R[2]]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,"into",E,E,51,[[],[U]]],[11,R[30],E,E,51,[[],["i"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[7],E,E,51,[[[U]],[R[2]]]],[11,R[8],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[34]]]],[11,"into",E,E,52,[[],[U]]],[11,R[30],E,E,52,[[],["i"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[7],E,E,52,[[[U]],[R[2]]]],[11,R[8],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[34]]]],[11,"into",E,E,53,[[],[U]]],[11,R[30],E,E,53,[[],["i"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[7],E,E,53,[[[U]],[R[2]]]],[11,R[8],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,R[30],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,54,[[],[U]]],[11,R[30],E,E,54,[[],["i"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[37],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"],[T]]]],[11,R[7],E,E,54,[[[U]],[R[2]]]],[11,R[8],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[34]]]],[11,"into",E,E,55,[[],[U]]],[11,R[30],E,E,55,[[],["i"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[37],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"],[T]]]],[11,R[7],E,E,55,[[[U]],[R[2]]]],[11,R[8],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[34]]]],[11,"into",E,E,56,[[],[U]]],[11,R[30],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[7],E,E,56,[[[U]],[R[2]]]],[11,R[8],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[34]]]],[11,"into",E,E,57,[[],[U]]],[11,R[30],E,E,57,[[],["i"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[37],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"],[T]]]],[11,R[7],E,E,57,[[[U]],[R[2]]]],[11,R[8],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[34]]]],[11,"into",E,E,58,[[],[U]]],[11,R[30],E,E,58,[[],["i"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[37],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"],[T]]]],[11,R[7],E,E,58,[[[U]],[R[2]]]],[11,R[8],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[34]]]],[11,"into",E,E,59,[[],[U]]],[11,R[30],E,E,59,[[],["i"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[37],E,E,59,[[["self"]],[T]]],[11,R[38],E,E,59,[[["self"],[T]]]],[11,R[7],E,E,59,[[[U]],[R[2]]]],[11,R[8],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[34]]]],[11,R[117],R[191],E,0,[[["self"],[R[25]]],[[R[32],[R[31]]],[R[31]]]]],[11,"lt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[119],E,E,0,[[["self"]],[R[32]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[R[2]]],[R[25]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"next",E,E,0,[[["self"]],[R[32]]]],[11,R[118],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[32]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[32]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[25]]]],[11,"cmp",E,E,0,[[["self"],[R[25]]],[R[31]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__hlr"]]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,R[14],E,E,0,[[["self"]]]],[11,R[207],R[193],E,9,[[["self"],["f"]],[R[32]]]],[11,R[207],E,E,8,[[["self"],["f"]],[R[32]]]],[11,R[207],E,E,10,[[["self"],["f"]],[R[32]]]],[11,"drop",E,E,39,[[["self"]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"clone",E,E,30,[[["self"]],[R[394]]]],[11,"clone",E,E,15,[[["self"]],[R[185]]]],[11,"clone",E,E,16,[[["self"]],[R[209]]]],[11,"clone",E,E,8,[[["self"]],["putback"]]],[11,"clone",E,E,17,[[["self"]],["product"]]],[11,"clone",E,E,18,[[["self"]],[R[210]]]],[11,"clone",E,E,29,[[["self"]],["step"]]],[11,"clone",E,E,21,[[["self"]],["self"]]],[11,"clone",E,E,22,[[["self"]],["self"]]],[11,"clone",E,E,25,[[["self"]],["self"]]],[11,"clone",E,E,14,[[["self"]],["self"]]],[11,"clone",E,E,24,[[["self"]],[R[211]]]],[11,"clone",R[191],E,4,[[["self"]],[R[192]]]],[11,"clone",R[193],E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["format"]]],[11,"clone",E,E,41,[[["self"]],[R[195]]]],[11,"clone",E,E,42,[[["self"]],["kmerge"]]],[11,"clone",R[191],E,2,[[["self"]],[R[205]]]],[11,"clone",R[193],E,9,[[["self"]],[R[382]]]],[11,"clone",E,E,45,[[["self"]],["padusing"]]],[11,"clone",E,E,10,[[["self"]],["putbackn"]]],[11,"clone",E,E,6,[[["self"]],["rciter"]]],[11,"clone",E,E,7,[[["self"]],["unfold"]]],[11,"clone",E,E,50,[[["self"]],["iterate"]]],[11,"clone",E,E,55,[[["self"]],["uniqueby"]]],[11,"clone",E,E,54,[[["self"]],["unique"]]],[11,"clone",R[191],E,3,[[["self"]],[R[212]]]],[11,"clone",R[193],E,57,[[["self"]],["zipeq"]]],[11,"clone",E,E,58,[[["self"]],[R[213]]]],[11,"clone",E,E,59,[[["self"]],["zip"]]],[11,"clone",R[191],E,5,[[["self"]],[R[208]]]],[11,"from",R[193],E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,"from",E,E,59,[[],["self"]]],[11,R[119],E,E,19,[[["self"]],[R[32]]]],[11,R[119],E,E,27,[[["self"]],[R[32]]]],[11,R[119],E,E,28,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[R[32]]]],[11,R[119],E,E,45,[[["self"]],[R[32]]]],[11,R[119],E,E,6,[[["self"]],[R[32]]]],[11,R[119],E,E,48,[[["self"]],[R[32]]]],[11,R[119],E,E,58,[[["self"]],[R[32]]]],[11,"eq",R[191],E,4,[[["self"],[R[192]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[192]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[205]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[205]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[212]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[212]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[208]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[208]]],["bool"]]],[11,"next",R[193],E,30,[[["self"]],[R[32]]]],[11,"count",E,E,30,[[],["usize"]]],[11,R[118],E,E,30,[[["self"]]]],[11,"last",E,E,30,[[],[R[32]]]],[11,"next",E,E,15,[[["self"]],[R[32]]]],[11,R[118],E,E,15,[[["self"]]]],[11,"next",E,E,16,[[["self"]],[R[32]]]],[11,R[118],E,E,16,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[32]]]],[11,R[118],E,E,8,[[["self"]]]],[11,"all",E,E,8,[[["self"],["g"]],["bool"]]],[11,"fold",E,E,8,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,17,[[["self"]],[R[32]]]],[11,R[118],E,E,17,[[["self"]]]],[11,"fold",E,E,17,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,18,[[["self"]],[R[32]]]],[11,R[118],E,E,18,[[["self"]]]],[11,"next",E,E,29,[[["self"]],[R[32]]]],[11,R[118],E,E,29,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[R[32]]]],[11,R[118],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[R[32]]]],[11,R[118],E,E,22,[[["self"]]]],[11,"next",E,E,25,[[["self"]],[R[32]]]],[11,R[118],E,E,25,[[["self"]]]],[11,"next",E,E,14,[[["self"]],[R[32]]]],[11,R[118],E,E,14,[[["self"]]]],[11,"fold",E,E,14,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,23,[[["self"]],[R[32]]]],[11,R[118],E,E,23,[[["self"]]]],[11,"next",E,E,24,[[["self"]],[R[32]]]],[11,R[118],E,E,24,[[["self"]]]],[11,"next",E,E,26,[[["self"]],[R[32]]]],[11,"next",E,E,19,[[["self"]],[R[32]]]],[11,R[118],E,E,19,[[["self"]]]],[11,"fold",E,E,19,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,20,[[["self"]],[R[32]]]],[11,R[118],E,E,20,[[["self"]]]],[11,"fold",E,E,20,[[["acc"],["fold"]],["acc"]]],[11,"collect",E,E,20,[[],["c"]]],[11,"next",E,E,27,[[["self"]],[R[32]]]],[11,R[118],E,E,27,[[["self"]]]],[11,"next",E,E,28,[[["self"]],[R[32]]]],[11,R[118],E,E,28,[[["self"]]]],[11,"fold",E,E,28,[[["acc"],["g"]],["acc"]]],[11,"collect",E,E,28,[[],["c"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[32]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,31,[[["self"]],[R[32]]]],[11,"next",E,E,40,[[["self"]],[R[32]]]],[11,"next",E,E,39,[[["self"]],[R[32]]]],[11,"next",E,E,37,[[["self"]],[R[32]]]],[11,"next",E,E,36,[[["self"]],[R[32]]]],[11,"next",E,E,41,[[["self"]],[R[32]]]],[11,R[118],E,E,41,[[["self"]]]],[11,"next",E,E,42,[[["self"]],[R[32]]]],[11,R[118],E,E,42,[[["self"]]]],[11,"next",E,E,43,[[["self"]],[R[32]]]],[11,R[118],E,E,43,[[["self"]]]],[11,"next",E,E,44,[[["self"]],[R[32]]]],[11,R[118],E,E,44,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[32]]]],[11,R[118],E,E,9,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[32]]]],[11,R[118],E,E,45,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[32]]]],[11,R[118],E,E,46,[[["self"]]]],[11,"next",E,E,47,[[["self"]],[R[32]]]],[11,R[118],E,E,47,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[32]]]],[11,R[118],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[32]]]],[11,R[118],E,E,6,[[["self"]]]],[11,"next",E,E,48,[[["self"]],[R[32]]]],[11,R[118],E,E,48,[[["self"]]]],[11,"next",E,E,49,[[["self"]],[R[32]]]],[11,R[118],E,E,49,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[32]]]],[11,R[118],E,E,7,[[["self"]]]],[11,"next",E,E,50,[[["self"]],[R[32]]]],[11,R[118],E,E,50,[[["self"]]]],[11,"next",E,E,51,[[["self"]],[R[32]]]],[11,R[118],E,E,51,[[["self"]]]],[11,"next",E,E,52,[[["self"]],[R[32]]]],[11,R[118],E,E,52,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[32]]]],[11,"next",E,E,53,[[["self"]],[R[32]]]],[11,"next",E,E,55,[[["self"]],[R[32]]]],[11,R[118],E,E,55,[[["self"]]]],[11,"count",E,E,55,[[],["usize"]]],[11,"next",E,E,54,[[["self"]],[R[32]]]],[11,R[118],E,E,54,[[["self"]]]],[11,"count",E,E,54,[[],["usize"]]],[11,"next",E,E,56,[[["self"]],[R[32]]]],[11,R[118],E,E,56,[[["self"]]]],[11,"next",E,E,57,[[["self"]],[R[32]]]],[11,R[118],E,E,57,[[["self"]]]],[11,"next",E,E,58,[[["self"]],[R[32]]]],[11,R[118],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[32]]]],[11,R[118],E,E,59,[[["self"]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[191],E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[193],E,32,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[191],E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[193],E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,53,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,55,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[191],E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[193],E,57,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[191],E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[193],E,34,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"is_left",R[191],R[214],0,[[["self"]],["bool"]]],[11,"is_right",E,R[215],0,[[["self"]],["bool"]]],[11,"left",E,R[216],0,[[],[R[32]]]],[11,"right",E,R[217],0,[[],[R[32]]]],[11,"as_ref",E,R[218],0,[[["self"]],[["r"],[R[25]],["l"]]]],[11,"as_mut",E,R[219],0,[[["self"]],[[R[25]],["l"],["r"]]]],[11,"flip",E,R[220],0,[[],[R[25]]]],[11,"map_left",E,R[26],0,[[["f"]],[R[25]]]],[11,R[221],E,R[27],0,[[["f"]],[R[25]]]],[11,R[25],E,R[222],0,[[["f"],["g"]],[T]]],[11,R[223],E,R[224],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[225],E,R[26],0,[[["f"]],[R[25]]]],[11,R[226],E,R[27],0,[[["f"]],[R[25]]]],[11,R[30],E,R[227],0,[[],[R[25]]]],[11,"left_or",E,R[228],0,[[["l"]],["l"]]],[11,R[229],E,R[230],0,[[],["l"]]],[11,R[231],E,R[28],0,[[["f"]],["l"]]],[11,"right_or",E,R[232],0,[[["r"]],["r"]]],[11,R[233],E,R[234],0,[[],["r"]]],[11,R[235],E,R[28],0,[[["f"]],["r"]]],[11,R[236],E,R[29],0,[[]]],[11,R[237],E,R[29],0,[[]]],[11,R[6],E,R[238],0,[[],[T]]]],"p":[[4,"Either"],[4,"Diff"],[4,R[239]],[4,R[528]],[4,R[240]],[4,R[241]],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,R[395]],[3,"PutBackN"],[3,"Tuples"],[8,R[242]],[8,R[243]],[3,"Dedup"],[3,R[244]],[3,R[245]],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,R[246]],[3,"Merge"],[3,"MergeBy"],[3,R[247]],[3,R[248]],[3,"Coalesce"],[3,R[249]],[3,R[250]],[3,"Update"],[3,"Step"],[3,R[396]],[3,R[397]],[3,R[251]],[3,"Format"],[3,R[252]],[3,R[398]],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,R[253]],[3,"KMerge"],[3,"KMergeBy"],[3,R[254]],[3,"PadUsing"],[3,R[255]],[3,R[256]],[3,"RepeatN"],[3,R[257]],[3,"Iterate"],[3,"Tee"],[3,R[258]],[3,R[259]],[3,"Unique"],[3,"UniqueBy"],[3,R[260]],[3,"ZipEq"],[3,R[261]],[3,"Zip"]]};
searchIndex["itoa"]={"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",N,N],[5,"write",E,"Write integer to an `io::Write`.",N,[[[R[33]],["write"]],[["usize"],[R[2],["usize"]]]]],[5,"fmt",E,"Write integer to an `fmt::Write`.",N,[[[R[33]],["write"]],[R[2]]]],[8,"Integer",E,"An integer that can be formatted by `itoa::write` and…",N,N],[11,"new",E,R[180],0,[[],["buffer"]]],[11,"format",E,"Print an integer into this buffer and return a reference…",0,[[["self"],[R[33]]],["str"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"clone",E,E,0,[[["self"]],["self"]]],[11,R[99],E,E,0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize",R[24],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[24],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[353],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[291],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[292],E,E,N,N],[12,R[264],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[354],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,"imr_multiaddr",E,E,18,N],[12,"imr_interface",E,E,18,N],[3,R[355],E,E,N,N],[12,"sa_family",E,E,19,N],[12,"sa_data",E,E,19,N],[3,R[293],E,E,N,N],[12,"sin_family",E,E,20,N],[12,"sin_port",E,E,20,N],[12,"sin_addr",E,E,20,N],[12,"sin_zero",E,E,20,N],[3,R[294],E,E,N,N],[12,"sin6_family",E,E,21,N],[12,"sin6_port",E,E,21,N],[12,"sin6_flowinfo",E,E,21,N],[12,"sin6_addr",E,E,21,N],[12,"sin6_scope_id",E,E,21,N],[3,R[356],E,E,N,N],[12,"ai_flags",E,E,22,N],[12,"ai_family",E,E,22,N],[12,"ai_socktype",E,E,22,N],[12,"ai_protocol",E,E,22,N],[12,"ai_addrlen",E,E,22,N],[12,"ai_addr",E,E,22,N],[12,"ai_canonname",E,E,22,N],[12,"ai_next",E,E,22,N],[3,R[295],E,E,N,N],[12,"sll_family",E,E,23,N],[12,"sll_protocol",E,E,23,N],[12,"sll_ifindex",E,E,23,N],[12,"sll_hatype",E,E,23,N],[12,"sll_pkttype",E,E,23,N],[12,"sll_halen",E,E,23,N],[12,"sll_addr",E,E,23,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,24,N],[12,"tm_min",E,E,24,N],[12,"tm_hour",E,E,24,N],[12,"tm_mday",E,E,24,N],[12,"tm_mon",E,E,24,N],[12,"tm_year",E,E,24,N],[12,"tm_wday",E,E,24,N],[12,"tm_yday",E,E,24,N],[12,"tm_isdst",E,E,24,N],[12,"tm_gmtoff",E,E,24,N],[12,"tm_zone",E,E,24,N],[3,R[296],E,E,N,N],[12,"sched_priority",E,E,25,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,26,N],[12,"dli_fbase",E,E,26,N],[12,"dli_sname",E,E,26,N],[12,"dli_saddr",E,E,26,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,27,N],[12,"thousands_sep",E,E,27,N],[12,"grouping",E,E,27,N],[12,"int_curr_symbol",E,E,27,N],[12,"currency_symbol",E,E,27,N],[12,"mon_decimal_point",E,E,27,N],[12,"mon_thousands_sep",E,E,27,N],[12,"mon_grouping",E,E,27,N],[12,"positive_sign",E,E,27,N],[12,"negative_sign",E,E,27,N],[12,"int_frac_digits",E,E,27,N],[12,"frac_digits",E,E,27,N],[12,"p_cs_precedes",E,E,27,N],[12,"p_sep_by_space",E,E,27,N],[12,"n_cs_precedes",E,E,27,N],[12,"n_sep_by_space",E,E,27,N],[12,"p_sign_posn",E,E,27,N],[12,"n_sign_posn",E,E,27,N],[12,"int_p_cs_precedes",E,E,27,N],[12,"int_p_sep_by_space",E,E,27,N],[12,"int_n_cs_precedes",E,E,27,N],[12,"int_n_sep_by_space",E,E,27,N],[12,"int_p_sign_posn",E,E,27,N],[12,"int_n_sign_posn",E,E,27,N],[3,R[297],E,E,N,N],[12,"ipi_ifindex",E,E,28,N],[12,"ipi_spec_dst",E,E,28,N],[12,"ipi_addr",E,E,28,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,29,N],[12,"ifa_name",E,E,29,N],[12,"ifa_flags",E,E,29,N],[12,"ifa_addr",E,E,29,N],[12,"ifa_netmask",E,E,29,N],[12,"ifa_ifu",E,E,29,N],[12,"ifa_data",E,E,29,N],[3,R[298],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,30,N],[12,"arp_ha",E,E,30,N],[12,R[262],E,E,30,N],[12,R[263],E,E,30,N],[12,"arp_dev",E,E,30,N],[3,R[299],E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[262],E,E,31,N],[12,R[263],E,E,31,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,32,N],[12,"ar_pro",E,E,32,N],[12,"ar_hln",E,E,32,N],[12,"ar_pln",E,E,32,N],[12,"ar_op",E,E,32,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,33,N],[12,"msg_len",E,E,33,N],[3,R[300],E,E,N,N],[12,"events",E,E,34,N],[12,"u64",E,E,34,N],[3,R[301],E,E,N,N],[12,"sun_family",E,E,35,N],[12,"sun_path",E,E,35,N],[3,R[302],E,E,N,N],[12,"ss_family",E,E,36,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,37,N],[12,"nodename",E,E,37,N],[12,"release",E,E,37,N],[12,R[529],E,E,37,N],[12,"machine",E,E,37,N],[12,"domainname",E,E,37,N],[3,R[357],E,E,N,N],[12,"sigev_value",E,E,38,N],[12,"sigev_signo",E,E,38,N],[12,"sigev_notify",E,E,38,N],[12,"sigev_notify_thread_id",E,E,38,N],[3,R[358],E,E,N,N],[12,"rlim_cur",E,E,39,N],[12,"rlim_max",E,E,39,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,40,N],[12,"gl_pathv",E,E,40,N],[12,"gl_offs",E,E,40,N],[12,"gl_flags",E,E,40,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,41,N],[12,"pw_passwd",E,E,41,N],[12,"pw_uid",E,E,41,N],[12,"pw_gid",E,E,41,N],[12,"pw_gecos",E,E,41,N],[12,"pw_dir",E,E,41,N],[12,"pw_shell",E,E,41,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,42,N],[12,"sp_pwdp",E,E,42,N],[12,"sp_lstchg",E,E,42,N],[12,"sp_min",E,E,42,N],[12,"sp_max",E,E,42,N],[12,"sp_warn",E,E,42,N],[12,"sp_inact",E,E,42,N],[12,"sp_expire",E,E,42,N],[12,"sp_flag",E,E,42,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,43,N],[12,"dqb_bsoftlimit",E,E,43,N],[12,"dqb_curspace",E,E,43,N],[12,"dqb_ihardlimit",E,E,43,N],[12,"dqb_isoftlimit",E,E,43,N],[12,"dqb_curinodes",E,E,43,N],[12,"dqb_btime",E,E,43,N],[12,"dqb_itime",E,E,43,N],[12,"dqb_valid",E,E,43,N],[3,R[303],E,E,N,N],[12,"ssi_signo",E,E,44,N],[12,"ssi_errno",E,E,44,N],[12,"ssi_code",E,E,44,N],[12,"ssi_pid",E,E,44,N],[12,"ssi_uid",E,E,44,N],[12,"ssi_fd",E,E,44,N],[12,"ssi_tid",E,E,44,N],[12,"ssi_band",E,E,44,N],[12,"ssi_overrun",E,E,44,N],[12,"ssi_trapno",E,E,44,N],[12,"ssi_status",E,E,44,N],[12,"ssi_int",E,E,44,N],[12,"ssi_ptr",E,E,44,N],[12,"ssi_utime",E,E,44,N],[12,"ssi_stime",E,E,44,N],[12,"ssi_addr",E,E,44,N],[12,"ssi_addr_lsb",E,E,44,N],[12,"ssi_syscall",E,E,44,N],[12,"ssi_call_addr",E,E,44,N],[12,"ssi_arch",E,E,44,N],[3,R[304],E,E,N,N],[12,R[264],E,E,45,N],[12,"it_value",E,E,45,N],[3,"fsid_t",E,E,N,N],[3,R[305],E,E,N,N],[12,"mr_ifindex",E,E,46,N],[12,"mr_type",E,E,46,N],[12,"mr_alen",E,E,46,N],[12,"mr_address",E,E,46,N],[3,R[286],E,E,N,N],[3,R[290],E,E,N,N],[12,"if_index",E,E,47,N],[12,"if_name",E,E,47,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,48,N],[12,"msgmap",E,E,48,N],[12,"msgmax",E,E,48,N],[12,"msgmnb",E,E,48,N],[12,"msgmni",E,E,48,N],[12,"msgssz",E,E,48,N],[12,"msgtql",E,E,48,N],[12,"msgseg",E,E,48,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,49,N],[12,"sem_op",E,E,49,N],[12,"sem_flg",E,E,49,N],[3,R[306],E,E,N,N],[12,"time",E,E,50,N],[12,"type_",E,E,50,N],[12,"code",E,E,50,N],[12,"value",E,E,50,N],[3,R[359],E,E,N,N],[12,"bustype",E,E,51,N],[12,"vendor",E,E,51,N],[12,"product",E,E,51,N],[12,R[529],E,E,51,N],[3,R[307],E,E,N,N],[12,"value",E,E,52,N],[12,"minimum",E,E,52,N],[12,"maximum",E,E,52,N],[12,"fuzz",E,E,52,N],[12,"flat",E,E,52,N],[12,"resolution",E,E,52,N],[3,R[308],E,E,N,N],[12,"flags",E,E,53,N],[12,"len",E,E,53,N],[12,"index",E,E,53,N],[12,"keycode",E,E,53,N],[12,"scancode",E,E,53,N],[3,R[309],E,E,N,N],[12,"type_",E,E,54,N],[12,"codes_size",E,E,54,N],[12,"codes_ptr",E,E,54,N],[3,R[310],E,E,N,N],[12,"length",E,E,55,N],[12,"delay",E,E,55,N],[3,R[311],E,E,N,N],[12,"button",E,E,56,N],[12,"interval",E,E,56,N],[3,R[312],E,E,N,N],[12,"attack_length",E,E,57,N],[12,"attack_level",E,E,57,N],[12,"fade_length",E,E,57,N],[12,"fade_level",E,E,57,N],[3,R[313],E,E,N,N],[12,"level",E,E,58,N],[12,R[265],E,E,58,N],[3,R[314],E,E,N,N],[12,"start_level",E,E,59,N],[12,"end_level",E,E,59,N],[12,R[265],E,E,59,N],[3,R[315],E,E,N,N],[12,"right_saturation",E,E,60,N],[12,"left_saturation",E,E,60,N],[12,"right_coeff",E,E,60,N],[12,"left_coeff",E,E,60,N],[12,"deadband",E,E,60,N],[12,"center",E,E,60,N],[3,R[316],E,E,N,N],[12,"waveform",E,E,61,N],[12,"period",E,E,61,N],[12,"magnitude",E,E,61,N],[12,"offset",E,E,61,N],[12,"phase",E,E,61,N],[12,R[265],E,E,61,N],[12,"custom_len",E,E,61,N],[12,"custom_data",E,E,61,N],[3,R[317],E,E,N,N],[12,"strong_magnitude",E,E,62,N],[12,"weak_magnitude",E,E,62,N],[3,R[318],E,E,N,N],[12,"type_",E,E,63,N],[12,"id",E,E,63,N],[12,"direction",E,E,63,N],[12,"trigger",E,E,63,N],[12,"replay",E,E,63,N],[12,U,E,E,63,N],[3,R[319],E,E,N,N],[12,"dlpi_addr",E,E,64,N],[12,"dlpi_name",E,E,64,N],[12,"dlpi_phdr",E,E,64,N],[12,"dlpi_phnum",E,E,64,N],[12,"dlpi_adds",E,E,64,N],[12,"dlpi_subs",E,E,64,N],[12,"dlpi_tls_modid",E,E,64,N],[12,"dlpi_tls_data",E,E,64,N],[3,R[360],E,E,N,N],[12,"e_ident",E,E,65,N],[12,"e_type",E,E,65,N],[12,R[266],E,E,65,N],[12,R[267],E,E,65,N],[12,"e_entry",E,E,65,N],[12,"e_phoff",E,E,65,N],[12,"e_shoff",E,E,65,N],[12,"e_flags",E,E,65,N],[12,"e_ehsize",E,E,65,N],[12,R[268],E,E,65,N],[12,"e_phnum",E,E,65,N],[12,R[269],E,E,65,N],[12,"e_shnum",E,E,65,N],[12,R[270],E,E,65,N],[3,R[361],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[266],E,E,66,N],[12,R[267],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[268],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[269],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[270],E,E,66,N],[3,R[362],E,E,N,N],[12,"st_name",E,E,67,N],[12,"st_value",E,E,67,N],[12,"st_size",E,E,67,N],[12,"st_info",E,E,67,N],[12,"st_other",E,E,67,N],[12,"st_shndx",E,E,67,N],[3,R[363],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[3,R[364],E,E,N,N],[12,"p_type",E,E,69,N],[12,"p_offset",E,E,69,N],[12,"p_vaddr",E,E,69,N],[12,"p_paddr",E,E,69,N],[12,"p_filesz",E,E,69,N],[12,"p_memsz",E,E,69,N],[12,"p_flags",E,E,69,N],[12,"p_align",E,E,69,N],[3,R[365],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[366],E,E,N,N],[12,"sh_name",E,E,71,N],[12,"sh_type",E,E,71,N],[12,"sh_flags",E,E,71,N],[12,"sh_addr",E,E,71,N],[12,R[271],E,E,71,N],[12,"sh_size",E,E,71,N],[12,"sh_link",E,E,71,N],[12,"sh_info",E,E,71,N],[12,R[272],E,E,71,N],[12,R[273],E,E,71,N],[3,R[367],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[271],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[272],E,E,72,N],[12,R[273],E,E,72,N],[3,R[368],E,E,N,N],[12,"ch_type",E,E,73,N],[12,"ch_size",E,E,73,N],[12,R[274],E,E,73,N],[3,R[369],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_reserved",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[274],E,E,74,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,75,N],[12,"uid",E,E,75,N],[12,"gid",E,E,75,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,76,N],[12,"mnt_dir",E,E,76,N],[12,"mnt_type",E,E,76,N],[12,"mnt_opts",E,E,76,N],[12,"mnt_freq",E,E,76,N],[12,"mnt_passno",E,E,76,N],[3,R[320],E,E,N,N],[3,R[321],E,E,N,N],[3,R[322],E,E,N,N],[12,"cmd",E,E,77,N],[12,R[529],E,E,77,N],[12,"reserved",E,E,77,N],[3,R[323],E,E,N,N],[12,"ipi6_addr",E,E,78,N],[12,"ipi6_ifindex",E,E,78,N],[3,R[324],E,E,N,N],[12,"req",E,E,79,N],[12,"ip",E,E,79,N],[12,"dev",E,E,79,N],[12,"stamp",E,E,79,N],[12,"updated",E,E,79,N],[12,"ha",E,E,79,N],[3,R[325],E,E,N,N],[12,"wd",E,E,80,N],[12,"mask",E,E,80,N],[12,"cookie",E,E,80,N],[12,"len",E,E,80,N],[3,R[326],E,E,N,N],[12,"svm_family",E,E,81,N],[12,"svm_reserved1",E,E,81,N],[12,"svm_port",E,E,81,N],[12,"svm_cid",E,E,81,N],[12,"svm_zero",E,E,81,N],[3,R[327],E,E,N,N],[12,"nl_family",E,E,82,N],[12,"nl_pid",E,E,82,N],[12,"nl_groups",E,E,82,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,83,N],[12,"d_off",E,E,83,N],[12,"d_reclen",E,E,83,N],[12,"d_type",E,E,83,N],[12,"d_name",E,E,83,N],[3,R[370],E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,R[328],E,E,N,N],[12,"salg_family",E,E,85,N],[12,"salg_type",E,E,85,N],[12,"salg_feat",E,E,85,N],[12,"salg_mask",E,E,85,N],[12,"salg_name",E,E,85,N],[3,R[329],E,E,N,N],[12,"ivlen",E,E,86,N],[12,"iv",E,E,86,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,87,N],[12,"mq_maxmsg",E,E,87,N],[12,"mq_msgsize",E,E,87,N],[12,"mq_curmsgs",E,E,87,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,88,N],[12,"stx_blksize",E,E,88,N],[12,"stx_attributes",E,E,88,N],[12,"stx_nlink",E,E,88,N],[12,"stx_uid",E,E,88,N],[12,"stx_gid",E,E,88,N],[12,"stx_mode",E,E,88,N],[12,"__statx_pad1",E,E,88,N],[12,"stx_ino",E,E,88,N],[12,"stx_size",E,E,88,N],[12,"stx_blocks",E,E,88,N],[12,"stx_attributes_mask",E,E,88,N],[12,"stx_atime",E,E,88,N],[12,"stx_btime",E,E,88,N],[12,"stx_ctime",E,E,88,N],[12,"stx_mtime",E,E,88,N],[12,"stx_rdev_major",E,E,88,N],[12,"stx_rdev_minor",E,E,88,N],[12,"stx_dev_major",E,E,88,N],[12,"stx_dev_minor",E,E,88,N],[12,"__statx_pad2",E,E,88,N],[3,R[330],E,E,N,N],[12,"tv_sec",E,E,89,N],[12,"tv_nsec",E,E,89,N],[12,"__statx_timestamp_pad1",E,E,89,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,90,N],[12,"aio_lio_opcode",E,E,90,N],[12,"aio_reqprio",E,E,90,N],[12,"aio_buf",E,E,90,N],[12,"aio_nbytes",E,E,90,N],[12,"aio_sigevent",E,E,90,N],[12,"aio_offset",E,E,90,N],[3,R[331],E,E,N,N],[12,"e_termination",E,E,91,N],[12,"e_exit",E,E,91,N],[3,R[332],E,E,N,N],[12,"tv_sec",E,E,92,N],[12,"tv_usec",E,E,92,N],[3,R[371],E,E,N,N],[12,"gl_pathc",E,E,93,N],[12,"gl_pathv",E,E,93,N],[12,"gl_offs",E,E,93,N],[12,"gl_flags",E,E,93,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,94,N],[12,"msg_namelen",E,E,94,N],[12,"msg_iov",E,E,94,N],[12,"msg_iovlen",E,E,94,N],[12,"msg_control",E,E,94,N],[12,"msg_controllen",E,E,94,N],[12,"msg_flags",E,E,94,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,95,N],[12,"cmsg_level",E,E,95,N],[12,"cmsg_type",E,E,95,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,96,N],[12,"c_oflag",E,E,96,N],[12,"c_cflag",E,E,96,N],[12,"c_lflag",E,E,96,N],[12,"c_line",E,E,96,N],[12,"c_cc",E,E,96,N],[12,"c_ispeed",E,E,96,N],[12,"c_ospeed",E,E,96,N],[3,R[333],E,E,N,N],[12,"arena",E,E,97,N],[12,"ordblks",E,E,97,N],[12,"smblks",E,E,97,N],[12,"hblks",E,E,97,N],[12,"hblkhd",E,E,97,N],[12,"usmblks",E,E,97,N],[12,"fsmblks",E,E,97,N],[12,"uordblks",E,E,97,N],[12,"fordblks",E,E,97,N],[12,"keepcost",E,E,97,N],[3,R[372],E,E,N,N],[12,"nlmsg_len",E,E,98,N],[12,"nlmsg_type",E,E,98,N],[12,"nlmsg_flags",E,E,98,N],[12,"nlmsg_seq",E,E,98,N],[12,"nlmsg_pid",E,E,98,N],[3,R[373],E,E,N,N],[12,"error",E,E,99,N],[12,"msg",E,E,99,N],[3,R[334],E,E,N,N],[12,"group",E,E,100,N],[3,R[335],E,E,N,N],[12,"nm_block_size",E,E,101,N],[12,"nm_block_nr",E,E,101,N],[12,"nm_frame_size",E,E,101,N],[12,"nm_frame_nr",E,E,101,N],[3,R[336],E,E,N,N],[12,"nm_status",E,E,102,N],[12,"nm_len",E,E,102,N],[12,"nm_group",E,E,102,N],[12,"nm_pid",E,E,102,N],[12,"nm_uid",E,E,102,N],[12,"nm_gid",E,E,102,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,103,N],[12,"nla_type",E,E,103,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,104,N],[12,"rt_dst",E,E,104,N],[12,"rt_gateway",E,E,104,N],[12,"rt_genmask",E,E,104,N],[12,"rt_flags",E,E,104,N],[12,"rt_pad2",E,E,104,N],[12,"rt_pad3",E,E,104,N],[12,"rt_tos",E,E,104,N],[12,"rt_class",E,E,104,N],[12,"rt_pad4",E,E,104,N],[12,"rt_metric",E,E,104,N],[12,"rt_dev",E,E,104,N],[12,"rt_mtu",E,E,104,N],[12,"rt_window",E,E,104,N],[12,"rt_irtt",E,E,104,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,105,N],[12,"ut_pid",E,E,105,N],[12,"ut_line",E,E,105,N],[12,"ut_id",E,E,105,N],[12,"ut_user",E,E,105,N],[12,"ut_host",E,E,105,N],[12,"ut_exit",E,E,105,N],[12,"ut_session",E,E,105,N],[12,"ut_tv",E,E,105,N],[12,"ut_addr_v6",E,E,105,N],[3,R[379],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,106,N],[12,"loads",E,E,106,N],[12,"totalram",E,E,106,N],[12,"freeram",E,E,106,N],[12,"sharedram",E,E,106,N],[12,"bufferram",E,E,106,N],[12,"totalswap",E,E,106,N],[12,"freeswap",E,E,106,N],[12,"procs",E,E,106,N],[12,"pad",E,E,106,N],[12,"totalhigh",E,E,106,N],[12,"freehigh",E,E,106,N],[12,"mem_unit",E,E,106,N],[12,"_f",E,E,106,N],[3,R[374],E,E,N,N],[12,"msg_perm",E,E,107,N],[12,"msg_stime",E,E,107,N],[12,"msg_rtime",E,E,107,N],[12,"msg_ctime",E,E,107,N],[12,"msg_qnum",E,E,107,N],[12,"msg_qbytes",E,E,107,N],[12,"msg_lspid",E,E,107,N],[12,"msg_lrpid",E,E,107,N],[3,R[287],E,E,N,N],[12,"sa_sigaction",E,E,108,N],[12,"sa_mask",E,E,108,N],[12,"sa_flags",E,E,108,N],[12,"sa_restorer",E,E,108,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,109,N],[12,"f_bsize",E,E,109,N],[12,R[282],E,E,109,N],[12,"f_bfree",E,E,109,N],[12,R[283],E,E,109,N],[12,"f_files",E,E,109,N],[12,"f_ffree",E,E,109,N],[12,"f_fsid",E,E,109,N],[12,R[280],E,E,109,N],[12,R[281],E,E,109,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,110,N],[12,"l_whence",E,E,110,N],[12,"l_start",E,E,110,N],[12,"l_len",E,E,110,N],[12,"l_pid",E,E,110,N],[3,R[337],E,E,N,N],[12,"si_signo",E,E,111,N],[12,"si_errno",E,E,111,N],[12,"si_code",E,E,111,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,112,N],[12,"ss_flags",E,E,112,N],[12,"ss_size",E,E,112,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,113,N],[12,"st_ino",E,E,113,N],[12,"st_nlink",E,E,113,N],[12,"st_mode",E,E,113,N],[12,"st_uid",E,E,113,N],[12,"st_gid",E,E,113,N],[12,"st_rdev",E,E,113,N],[12,"st_size",E,E,113,N],[12,R[275],E,E,113,N],[12,R[276],E,E,113,N],[12,"st_atime",E,E,113,N],[12,R[277],E,E,113,N],[12,"st_mtime",E,E,113,N],[12,R[278],E,E,113,N],[12,"st_ctime",E,E,113,N],[12,R[279],E,E,113,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,114,N],[12,"st_ino",E,E,114,N],[12,"st_nlink",E,E,114,N],[12,"st_mode",E,E,114,N],[12,"st_uid",E,E,114,N],[12,"st_gid",E,E,114,N],[12,"st_rdev",E,E,114,N],[12,"st_size",E,E,114,N],[12,R[275],E,E,114,N],[12,R[276],E,E,114,N],[12,"st_atime",E,E,114,N],[12,R[277],E,E,114,N],[12,"st_mtime",E,E,114,N],[12,R[278],E,E,114,N],[12,"st_ctime",E,E,114,N],[12,R[279],E,E,114,N],[3,R[338],E,E,N,N],[12,"f_type",E,E,115,N],[12,"f_bsize",E,E,115,N],[12,R[282],E,E,115,N],[12,"f_bfree",E,E,115,N],[12,R[283],E,E,115,N],[12,"f_files",E,E,115,N],[12,"f_ffree",E,E,115,N],[12,"f_fsid",E,E,115,N],[12,R[280],E,E,115,N],[12,R[281],E,E,115,N],[12,"f_flags",E,E,115,N],[12,"f_spare",E,E,115,N],[3,R[289],E,E,N,N],[12,"f_bsize",E,E,116,N],[12,R[281],E,E,116,N],[12,R[282],E,E,116,N],[12,"f_bfree",E,E,116,N],[12,R[283],E,E,116,N],[12,"f_files",E,E,116,N],[12,"f_ffree",E,E,116,N],[12,"f_favail",E,E,116,N],[12,"f_fsid",E,E,116,N],[12,"f_flag",E,E,116,N],[12,R[285],E,E,116,N],[3,R[339],E,E,N,N],[3,R[340],E,E,N,N],[12,"significand",E,E,117,N],[12,"exponent",E,E,117,N],[3,R[341],E,E,N,N],[12,R[414],E,E,118,N],[3,R[342],E,E,N,N],[12,"cwd",E,E,119,N],[12,"swd",E,E,119,N],[12,"ftw",E,E,119,N],[12,"fop",E,E,119,N],[12,"rip",E,E,119,N],[12,"rdp",E,E,119,N],[12,"mxcsr",E,E,119,N],[12,R[284],E,E,119,N],[12,"_st",E,E,119,N],[12,"_xmm",E,E,119,N],[3,R[343],E,E,N,N],[12,"r15",E,E,120,N],[12,"r14",E,E,120,N],[12,"r13",E,E,120,N],[12,"r12",E,E,120,N],[12,"rbp",E,E,120,N],[12,"rbx",E,E,120,N],[12,"r11",E,E,120,N],[12,"r10",E,E,120,N],[12,"r9",E,E,120,N],[12,"r8",E,E,120,N],[12,"rax",E,E,120,N],[12,"rcx",E,E,120,N],[12,"rdx",E,E,120,N],[12,"rsi",E,E,120,N],[12,"rdi",E,E,120,N],[12,"orig_rax",E,E,120,N],[12,"rip",E,E,120,N],[12,"cs",E,E,120,N],[12,"eflags",E,E,120,N],[12,"rsp",E,E,120,N],[12,"ss",E,E,120,N],[12,"fs_base",E,E,120,N],[12,"gs_base",E,E,120,N],[12,"ds",E,E,120,N],[12,"es",E,E,120,N],[12,"fs",E,E,120,N],[12,"gs",E,E,120,N],[3,"user",E,E,N,N],[12,"regs",E,E,121,N],[12,"u_fpvalid",E,E,121,N],[12,"i387",E,E,121,N],[12,"u_tsize",E,E,121,N],[12,"u_dsize",E,E,121,N],[12,"u_ssize",E,E,121,N],[12,"start_code",E,E,121,N],[12,"start_stack",E,E,121,N],[12,"signal",E,E,121,N],[12,"u_ar0",E,E,121,N],[12,"u_fpstate",E,E,121,N],[12,"magic",E,E,121,N],[12,"u_comm",E,E,121,N],[12,"u_debugreg",E,E,121,N],[3,R[344],E,E,N,N],[12,"gregs",E,E,122,N],[12,"fpregs",E,E,122,N],[3,R[375],E,E,N,N],[12,"__key",E,E,123,N],[12,"uid",E,E,123,N],[12,"gid",E,E,123,N],[12,"cuid",E,E,123,N],[12,"cgid",E,E,123,N],[12,"mode",E,E,123,N],[12,"__seq",E,E,123,N],[3,R[376],E,E,N,N],[12,"shm_perm",E,E,124,N],[12,"shm_segsz",E,E,124,N],[12,"shm_atime",E,E,124,N],[12,"shm_dtime",E,E,124,N],[12,"shm_ctime",E,E,124,N],[12,"shm_cpid",E,E,124,N],[12,"shm_lpid",E,E,124,N],[12,"shm_nattch",E,E,124,N],[3,R[377],E,E,N,N],[12,"c_iflag",E,E,125,N],[12,"c_oflag",E,E,125,N],[12,"c_cflag",E,E,125,N],[12,"c_lflag",E,E,125,N],[12,"c_line",E,E,125,N],[12,"c_cc",E,E,125,N],[12,"c_ispeed",E,E,125,N],[12,"c_ospeed",E,E,125,N],[3,R[345],E,E,N,N],[12,"cwd",E,E,126,N],[12,"swd",E,E,126,N],[12,"ftw",E,E,126,N],[12,"fop",E,E,126,N],[12,"rip",E,E,126,N],[12,"rdp",E,E,126,N],[12,"mxcsr",E,E,126,N],[12,R[284],E,E,126,N],[12,"st_space",E,E,126,N],[12,"xmm_space",E,E,126,N],[3,R[346],E,E,N,N],[12,"uc_flags",E,E,127,N],[12,"uc_link",E,E,127,N],[12,"uc_stack",E,E,127,N],[12,"uc_mcontext",E,E,127,N],[12,"uc_sigmask",E,E,127,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,128,N],[12,R[281],E,E,128,N],[12,R[282],E,E,128,N],[12,"f_bfree",E,E,128,N],[12,R[283],E,E,128,N],[12,"f_files",E,E,128,N],[12,"f_ffree",E,E,128,N],[12,"f_favail",E,E,128,N],[12,"f_fsid",E,E,128,N],[12,"f_flag",E,E,128,N],[12,R[285],E,E,128,N],[3,"sem_t",E,E,N,N],[3,R[347],E,E,N,N],[3,R[348],E,E,N,N],[3,R[349],E,E,N,N],[3,R[350],E,E,N,N],[3,R[351],E,E,N,N],[3,R[352],E,E,N,N],[3,R[378],E,E,N,N],[12,"s6_addr",E,E,129,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[380],E,E,N,N],[4,R[381],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[286]]]]],[5,"CPU_SET",E,E,N,[[[R[286]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[286]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[["usize"],[R[286]]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[286]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[287],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,R[288],E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[338],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[289],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[290],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,R[481],E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[333],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,111,[[["self"]]]],[11,"si_value",E,E,111,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_RECVERR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,R[7],E,E,130,[[[U]],[R[2]]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[8],E,E,130,[[],[R[2]]]],[11,R[9],E,E,130,[[["self"]],[T]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[34]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,R[7],E,E,131,[[[U]],[R[2]]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[8],E,E,131,[[],[R[2]]]],[11,R[9],E,E,131,[[["self"]],[T]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[34]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,R[7],E,E,132,[[[U]],[R[2]]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[8],E,E,132,[[],[R[2]]]],[11,R[9],E,E,132,[[["self"]],[T]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[34]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,R[7],E,E,133,[[[U]],[R[2]]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[8],E,E,133,[[],[R[2]]]],[11,R[9],E,E,133,[[["self"]],[T]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[34]]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,R[7],E,E,134,[[[U]],[R[2]]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[8],E,E,134,[[],[R[2]]]],[11,R[9],E,E,134,[[["self"]],[T]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[34]]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,R[7],E,E,50,[[[U]],[R[2]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,R[7],E,E,51,[[[U]],[R[2]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[],[R[2]]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[34]]]],[11,R[7],E,E,52,[[[U]],[R[2]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[8],E,E,52,[[],[R[2]]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[34]]]],[11,R[7],E,E,53,[[[U]],[R[2]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[8],E,E,53,[[],[R[2]]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[34]]]],[11,R[7],E,E,54,[[[U]],[R[2]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[8],E,E,54,[[],[R[2]]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[34]]]],[11,R[7],E,E,55,[[[U]],[R[2]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[8],E,E,55,[[],[R[2]]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[34]]]],[11,R[7],E,E,56,[[[U]],[R[2]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[8],E,E,56,[[],[R[2]]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[34]]]],[11,R[7],E,E,57,[[[U]],[R[2]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[8],E,E,57,[[],[R[2]]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[34]]]],[11,R[7],E,E,58,[[[U]],[R[2]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[8],E,E,58,[[],[R[2]]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[34]]]],[11,R[7],E,E,59,[[[U]],[R[2]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[8],E,E,59,[[],[R[2]]]],[11,R[9],E,E,59,[[["self"]],[T]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[34]]]],[11,R[7],E,E,60,[[[U]],[R[2]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[8],E,E,60,[[],[R[2]]]],[11,R[9],E,E,60,[[["self"]],[T]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[34]]]],[11,R[7],E,E,61,[[[U]],[R[2]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[8],E,E,61,[[],[R[2]]]],[11,R[9],E,E,61,[[["self"]],[T]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[34]]]],[11,R[7],E,E,62,[[[U]],[R[2]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[8],E,E,62,[[],[R[2]]]],[11,R[9],E,E,62,[[["self"]],[T]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[34]]]],[11,R[7],E,E,63,[[[U]],[R[2]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[8],E,E,63,[[],[R[2]]]],[11,R[9],E,E,63,[[["self"]],[T]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[34]]]],[11,R[7],E,E,64,[[[U]],[R[2]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[8],E,E,64,[[],[R[2]]]],[11,R[9],E,E,64,[[["self"]],[T]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[34]]]],[11,R[7],E,E,65,[[[U]],[R[2]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[8],E,E,65,[[],[R[2]]]],[11,R[9],E,E,65,[[["self"]],[T]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[34]]]],[11,R[7],E,E,66,[[[U]],[R[2]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[8],E,E,66,[[],[R[2]]]],[11,R[9],E,E,66,[[["self"]],[T]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[34]]]],[11,R[7],E,E,67,[[[U]],[R[2]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[8],E,E,67,[[],[R[2]]]],[11,R[9],E,E,67,[[["self"]],[T]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[34]]]],[11,R[7],E,E,68,[[[U]],[R[2]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[8],E,E,68,[[],[R[2]]]],[11,R[9],E,E,68,[[["self"]],[T]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[34]]]],[11,R[7],E,E,69,[[[U]],[R[2]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[8],E,E,69,[[],[R[2]]]],[11,R[9],E,E,69,[[["self"]],[T]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[34]]]],[11,R[7],E,E,70,[[[U]],[R[2]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[8],E,E,70,[[],[R[2]]]],[11,R[9],E,E,70,[[["self"]],[T]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[34]]]],[11,R[7],E,E,71,[[[U]],[R[2]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[8],E,E,71,[[],[R[2]]]],[11,R[9],E,E,71,[[["self"]],[T]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[34]]]],[11,R[7],E,E,72,[[[U]],[R[2]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[8],E,E,72,[[],[R[2]]]],[11,R[9],E,E,72,[[["self"]],[T]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[34]]]],[11,R[7],E,E,73,[[[U]],[R[2]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[8],E,E,73,[[],[R[2]]]],[11,R[9],E,E,73,[[["self"]],[T]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[34]]]],[11,R[7],E,E,74,[[[U]],[R[2]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[8],E,E,74,[[],[R[2]]]],[11,R[9],E,E,74,[[["self"]],[T]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[34]]]],[11,R[7],E,E,75,[[[U]],[R[2]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[8],E,E,75,[[],[R[2]]]],[11,R[9],E,E,75,[[["self"]],[T]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[34]]]],[11,R[7],E,E,76,[[[U]],[R[2]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[8],E,E,76,[[],[R[2]]]],[11,R[9],E,E,76,[[["self"]],[T]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[34]]]],[11,R[7],E,E,135,[[[U]],[R[2]]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[8],E,E,135,[[],[R[2]]]],[11,R[9],E,E,135,[[["self"]],[T]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[34]]]],[11,R[7],E,E,136,[[[U]],[R[2]]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[8],E,E,136,[[],[R[2]]]],[11,R[9],E,E,136,[[["self"]],[T]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[34]]]],[11,R[7],E,E,77,[[[U]],[R[2]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[8],E,E,77,[[],[R[2]]]],[11,R[9],E,E,77,[[["self"]],[T]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[34]]]],[11,R[7],E,E,78,[[[U]],[R[2]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[8],E,E,78,[[],[R[2]]]],[11,R[9],E,E,78,[[["self"]],[T]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[34]]]],[11,R[7],E,E,79,[[[U]],[R[2]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[8],E,E,79,[[],[R[2]]]],[11,R[9],E,E,79,[[["self"]],[T]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[34]]]],[11,R[7],E,E,80,[[[U]],[R[2]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[8],E,E,80,[[],[R[2]]]],[11,R[9],E,E,80,[[["self"]],[T]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[34]]]],[11,R[7],E,E,81,[[[U]],[R[2]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[8],E,E,81,[[],[R[2]]]],[11,R[9],E,E,81,[[["self"]],[T]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[34]]]],[11,R[7],E,E,82,[[[U]],[R[2]]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[8],E,E,82,[[],[R[2]]]],[11,R[9],E,E,82,[[["self"]],[T]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[34]]]],[11,R[7],E,E,83,[[[U]],[R[2]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[8],E,E,83,[[],[R[2]]]],[11,R[9],E,E,83,[[["self"]],[T]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[34]]]],[11,R[7],E,E,84,[[[U]],[R[2]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[8],E,E,84,[[],[R[2]]]],[11,R[9],E,E,84,[[["self"]],[T]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[34]]]],[11,R[7],E,E,85,[[[U]],[R[2]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[8],E,E,85,[[],[R[2]]]],[11,R[9],E,E,85,[[["self"]],[T]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[34]]]],[11,R[7],E,E,86,[[[U]],[R[2]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[8],E,E,86,[[],[R[2]]]],[11,R[9],E,E,86,[[["self"]],[T]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[34]]]],[11,R[7],E,E,87,[[[U]],[R[2]]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[8],E,E,87,[[],[R[2]]]],[11,R[9],E,E,87,[[["self"]],[T]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[34]]]],[11,R[7],E,E,88,[[[U]],[R[2]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[8],E,E,88,[[],[R[2]]]],[11,R[9],E,E,88,[[["self"]],[T]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[34]]]],[11,R[7],E,E,89,[[[U]],[R[2]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[8],E,E,89,[[],[R[2]]]],[11,R[9],E,E,89,[[["self"]],[T]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[34]]]],[11,R[7],E,E,90,[[[U]],[R[2]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[8],E,E,90,[[],[R[2]]]],[11,R[9],E,E,90,[[["self"]],[T]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[34]]]],[11,R[7],E,E,91,[[[U]],[R[2]]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[8],E,E,91,[[],[R[2]]]],[11,R[9],E,E,91,[[["self"]],[T]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[34]]]],[11,R[7],E,E,92,[[[U]],[R[2]]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[8],E,E,92,[[],[R[2]]]],[11,R[9],E,E,92,[[["self"]],[T]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[34]]]],[11,R[7],E,E,93,[[[U]],[R[2]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[8],E,E,93,[[],[R[2]]]],[11,R[9],E,E,93,[[["self"]],[T]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[34]]]],[11,R[7],E,E,94,[[[U]],[R[2]]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[8],E,E,94,[[],[R[2]]]],[11,R[9],E,E,94,[[["self"]],[T]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[34]]]],[11,R[7],E,E,95,[[[U]],[R[2]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[8],E,E,95,[[],[R[2]]]],[11,R[9],E,E,95,[[["self"]],[T]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[34]]]],[11,R[7],E,E,96,[[[U]],[R[2]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[8],E,E,96,[[],[R[2]]]],[11,R[9],E,E,96,[[["self"]],[T]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[34]]]],[11,R[7],E,E,97,[[[U]],[R[2]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[8],E,E,97,[[],[R[2]]]],[11,R[9],E,E,97,[[["self"]],[T]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[34]]]],[11,R[7],E,E,98,[[[U]],[R[2]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[8],E,E,98,[[],[R[2]]]],[11,R[9],E,E,98,[[["self"]],[T]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[34]]]],[11,R[7],E,E,99,[[[U]],[R[2]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[8],E,E,99,[[],[R[2]]]],[11,R[9],E,E,99,[[["self"]],[T]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[34]]]],[11,R[7],E,E,100,[[[U]],[R[2]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[8],E,E,100,[[],[R[2]]]],[11,R[9],E,E,100,[[["self"]],[T]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[34]]]],[11,R[7],E,E,101,[[[U]],[R[2]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[8],E,E,101,[[],[R[2]]]],[11,R[9],E,E,101,[[["self"]],[T]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[34]]]],[11,R[7],E,E,102,[[[U]],[R[2]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[8],E,E,102,[[],[R[2]]]],[11,R[9],E,E,102,[[["self"]],[T]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[34]]]],[11,R[7],E,E,103,[[[U]],[R[2]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[8],E,E,103,[[],[R[2]]]],[11,R[9],E,E,103,[[["self"]],[T]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[34]]]],[11,R[7],E,E,104,[[[U]],[R[2]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[8],E,E,104,[[],[R[2]]]],[11,R[9],E,E,104,[[["self"]],[T]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[34]]]],[11,R[7],E,E,105,[[[U]],[R[2]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[8],E,E,105,[[],[R[2]]]],[11,R[9],E,E,105,[[["self"]],[T]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[34]]]],[11,R[7],E,E,137,[[[U]],[R[2]]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[8],E,E,137,[[],[R[2]]]],[11,R[9],E,E,137,[[["self"]],[T]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[34]]]],[11,R[7],E,E,106,[[[U]],[R[2]]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[8],E,E,106,[[],[R[2]]]],[11,R[9],E,E,106,[[["self"]],[T]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[34]]]],[11,R[7],E,E,107,[[[U]],[R[2]]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[8],E,E,107,[[],[R[2]]]],[11,R[9],E,E,107,[[["self"]],[T]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[34]]]],[11,R[7],E,E,108,[[[U]],[R[2]]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[8],E,E,108,[[],[R[2]]]],[11,R[9],E,E,108,[[["self"]],[T]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[34]]]],[11,R[7],E,E,109,[[[U]],[R[2]]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[8],E,E,109,[[],[R[2]]]],[11,R[9],E,E,109,[[["self"]],[T]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[34]]]],[11,R[7],E,E,110,[[[U]],[R[2]]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[8],E,E,110,[[],[R[2]]]],[11,R[9],E,E,110,[[["self"]],[T]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[34]]]],[11,R[7],E,E,111,[[[U]],[R[2]]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[8],E,E,111,[[],[R[2]]]],[11,R[9],E,E,111,[[["self"]],[T]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[34]]]],[11,R[7],E,E,112,[[[U]],[R[2]]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[8],E,E,112,[[],[R[2]]]],[11,R[9],E,E,112,[[["self"]],[T]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[34]]]],[11,R[7],E,E,113,[[[U]],[R[2]]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[8],E,E,113,[[],[R[2]]]],[11,R[9],E,E,113,[[["self"]],[T]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[34]]]],[11,R[7],E,E,114,[[[U]],[R[2]]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[8],E,E,114,[[],[R[2]]]],[11,R[9],E,E,114,[[["self"]],[T]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[34]]]],[11,R[7],E,E,115,[[[U]],[R[2]]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[8],E,E,115,[[],[R[2]]]],[11,R[9],E,E,115,[[["self"]],[T]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[34]]]],[11,R[7],E,E,116,[[[U]],[R[2]]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[8],E,E,116,[[],[R[2]]]],[11,R[9],E,E,116,[[["self"]],[T]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[34]]]],[11,R[7],E,E,138,[[[U]],[R[2]]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[8],E,E,138,[[],[R[2]]]],[11,R[9],E,E,138,[[["self"]],[T]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[34]]]],[11,R[7],E,E,117,[[[U]],[R[2]]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[8],E,E,117,[[],[R[2]]]],[11,R[9],E,E,117,[[["self"]],[T]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[34]]]],[11,R[7],E,E,118,[[[U]],[R[2]]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[8],E,E,118,[[],[R[2]]]],[11,R[9],E,E,118,[[["self"]],[T]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[34]]]],[11,R[7],E,E,119,[[[U]],[R[2]]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[8],E,E,119,[[],[R[2]]]],[11,R[9],E,E,119,[[["self"]],[T]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[34]]]],[11,R[7],E,E,120,[[[U]],[R[2]]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[8],E,E,120,[[],[R[2]]]],[11,R[9],E,E,120,[[["self"]],[T]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[34]]]],[11,R[7],E,E,121,[[[U]],[R[2]]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[8],E,E,121,[[],[R[2]]]],[11,R[9],E,E,121,[[["self"]],[T]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[34]]]],[11,R[7],E,E,122,[[[U]],[R[2]]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[8],E,E,122,[[],[R[2]]]],[11,R[9],E,E,122,[[["self"]],[T]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[34]]]],[11,R[7],E,E,123,[[[U]],[R[2]]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[8],E,E,123,[[],[R[2]]]],[11,R[9],E,E,123,[[["self"]],[T]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[34]]]],[11,R[7],E,E,124,[[[U]],[R[2]]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[8],E,E,124,[[],[R[2]]]],[11,R[9],E,E,124,[[["self"]],[T]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[34]]]],[11,R[7],E,E,125,[[[U]],[R[2]]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[8],E,E,125,[[],[R[2]]]],[11,R[9],E,E,125,[[["self"]],[T]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[34]]]],[11,R[7],E,E,126,[[[U]],[R[2]]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[8],E,E,126,[[],[R[2]]]],[11,R[9],E,E,126,[[["self"]],[T]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[34]]]],[11,R[7],E,E,127,[[[U]],[R[2]]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[8],E,E,127,[[],[R[2]]]],[11,R[9],E,E,127,[[["self"]],[T]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[34]]]],[11,R[7],E,E,128,[[[U]],[R[2]]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[8],E,E,128,[[],[R[2]]]],[11,R[9],E,E,128,[[["self"]],[T]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[34]]]],[11,R[7],E,E,139,[[[U]],[R[2]]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[8],E,E,139,[[],[R[2]]]],[11,R[9],E,E,139,[[["self"]],[T]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[34]]]],[11,R[7],E,E,140,[[[U]],[R[2]]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[8],E,E,140,[[],[R[2]]]],[11,R[9],E,E,140,[[["self"]],[T]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[34]]]],[11,R[7],E,E,141,[[[U]],[R[2]]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[8],E,E,141,[[],[R[2]]]],[11,R[9],E,E,141,[[["self"]],[T]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[34]]]],[11,R[7],E,E,142,[[[U]],[R[2]]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[8],E,E,142,[[],[R[2]]]],[11,R[9],E,E,142,[[["self"]],[T]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[34]]]],[11,R[7],E,E,143,[[[U]],[R[2]]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[8],E,E,143,[[],[R[2]]]],[11,R[9],E,E,143,[[["self"]],[T]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[34]]]],[11,R[7],E,E,144,[[[U]],[R[2]]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[8],E,E,144,[[],[R[2]]]],[11,R[9],E,E,144,[[["self"]],[T]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[34]]]],[11,R[7],E,E,145,[[[U]],[R[2]]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[8],E,E,145,[[],[R[2]]]],[11,R[9],E,E,145,[[["self"]],[T]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[34]]]],[11,R[7],E,E,129,[[[U]],[R[2]]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[8],E,E,129,[[],[R[2]]]],[11,R[9],E,E,129,[[["self"]],[T]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[34]]]],[11,R[7],E,E,146,[[[U]],[R[2]]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[8],E,E,146,[[],[R[2]]]],[11,R[9],E,E,146,[[["self"]],[T]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[34]]]],[11,R[7],E,E,147,[[[U]],[R[2]]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[8],E,E,147,[[],[R[2]]]],[11,R[9],E,E,147,[[["self"]],[T]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[34]]]],[11,R[7],E,E,148,[[[U]],[R[2]]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[8],E,E,148,[[],[R[2]]]],[11,R[9],E,E,148,[[["self"]],[T]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[34]]]],[11,R[7],E,E,149,[[[U]],[R[2]]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[8],E,E,149,[[],[R[2]]]],[11,R[9],E,E,149,[[["self"]],[T]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[34]]]],[11,R[7],E,E,150,[[[U]],[R[2]]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[8],E,E,150,[[],[R[2]]]],[11,R[9],E,E,150,[[["self"]],[T]]],[11,R[10],E,E,150,[[["self"]],[T]]],[11,R[11],E,E,150,[[["self"]],[R[34]]]],[11,"fmt",E,E,130,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"clone",E,E,146,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[353]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[291]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[292]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[354]]]],[11,"clone",E,E,147,[[["self"]],["file"]]],[11,"clone",E,E,148,[[["self"]],["fpos_t"]]],[11,"clone",E,E,149,[[["self"]],[R[380]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[355]]]],[11,"clone",E,E,20,[[["self"]],[R[293]]]],[11,"clone",E,E,21,[[["self"]],[R[294]]]],[11,"clone",E,E,22,[[["self"]],[R[356]]]],[11,"clone",E,E,23,[[["self"]],[R[295]]]],[11,"clone",E,E,131,[[["self"]],["fd_set"]]],[11,"clone",E,E,24,[[["self"]],["tm"]]],[11,"clone",E,E,25,[[["self"]],[R[296]]]],[11,"clone",E,E,26,[[["self"]],["dl_info"]]],[11,"clone",E,E,27,[[["self"]],["lconv"]]],[11,"clone",E,E,28,[[["self"]],[R[297]]]],[11,"clone",E,E,29,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,132,[[["self"]],[R[298]]]],[11,"clone",E,E,30,[[["self"]],["arpreq"]]],[11,"clone",E,E,31,[[["self"]],[R[299]]]],[11,"clone",E,E,32,[[["self"]],["arphdr"]]],[11,"clone",E,E,33,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,34,[[["self"]],[R[300]]]],[11,"clone",E,E,35,[[["self"]],[R[301]]]],[11,"clone",E,E,36,[[["self"]],[R[302]]]],[11,"clone",E,E,37,[[["self"]],["utsname"]]],[11,"clone",E,E,38,[[["self"]],[R[357]]]],[11,"clone",E,E,150,[[["self"]],[R[381]]]],[11,"clone",E,E,39,[[["self"]],[R[358]]]],[11,"clone",E,E,40,[[["self"]],["glob_t"]]],[11,"clone",E,E,41,[[["self"]],["passwd"]]],[11,"clone",E,E,42,[[["self"]],["spwd"]]],[11,"clone",E,E,43,[[["self"]],["dqblk"]]],[11,"clone",E,E,44,[[["self"]],[R[303]]]],[11,"clone",E,E,45,[[["self"]],[R[304]]]],[11,"clone",E,E,133,[[["self"]],["fsid_t"]]],[11,"clone",E,E,46,[[["self"]],[R[305]]]],[11,"clone",E,E,134,[[["self"]],[R[286]]]],[11,"clone",E,E,47,[[["self"]],[R[290]]]],[11,"clone",E,E,48,[[["self"]],["msginfo"]]],[11,"clone",E,E,49,[[["self"]],["sembuf"]]],[11,"clone",E,E,50,[[["self"]],[R[306]]]],[11,"clone",E,E,51,[[["self"]],[R[359]]]],[11,"clone",E,E,52,[[["self"]],[R[307]]]],[11,"clone",E,E,53,[[["self"]],[R[308]]]],[11,"clone",E,E,54,[[["self"]],[R[309]]]],[11,"clone",E,E,55,[[["self"]],[R[310]]]],[11,"clone",E,E,56,[[["self"]],[R[311]]]],[11,"clone",E,E,57,[[["self"]],[R[312]]]],[11,"clone",E,E,58,[[["self"]],[R[313]]]],[11,"clone",E,E,59,[[["self"]],[R[314]]]],[11,"clone",E,E,60,[[["self"]],[R[315]]]],[11,"clone",E,E,61,[[["self"]],[R[316]]]],[11,"clone",E,E,62,[[["self"]],[R[317]]]],[11,"clone",E,E,63,[[["self"]],[R[318]]]],[11,"clone",E,E,64,[[["self"]],[R[319]]]],[11,"clone",E,E,65,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,66,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,68,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,70,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,72,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,74,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,75,[[["self"]],["ucred"]]],[11,"clone",E,E,76,[[["self"]],["mntent"]]],[11,"clone",E,E,135,[[["self"]],[R[320]]]],[11,"clone",E,E,136,[[["self"]],[R[321]]]],[11,"clone",E,E,77,[[["self"]],[R[322]]]],[11,"clone",E,E,78,[[["self"]],[R[323]]]],[11,"clone",E,E,79,[[["self"]],[R[324]]]],[11,"clone",E,E,80,[[["self"]],[R[325]]]],[11,"clone",E,E,81,[[["self"]],[R[326]]]],[11,"clone",E,E,82,[[["self"]],[R[327]]]],[11,"clone",E,E,83,[[["self"]],["dirent"]]],[11,"clone",E,E,84,[[["self"]],[R[370]]]],[11,"clone",E,E,85,[[["self"]],[R[328]]]],[11,"clone",E,E,86,[[["self"]],[R[329]]]],[11,"clone",E,E,87,[[["self"]],["mq_attr"]]],[11,"clone",E,E,88,[[["self"]],["statx"]]],[11,"clone",E,E,89,[[["self"]],[R[330]]]],[11,"clone",E,E,90,[[["self"]],["aiocb"]]],[11,"clone",E,E,91,[[["self"]],[R[331]]]],[11,"clone",E,E,92,[[["self"]],[R[332]]]],[11,"clone",E,E,93,[[["self"]],[R[371]]]],[11,"clone",E,E,94,[[["self"]],["msghdr"]]],[11,"clone",E,E,95,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,96,[[["self"]],["termios"]]],[11,"clone",E,E,97,[[["self"]],[R[333]]]],[11,"clone",E,E,98,[[["self"]],[R[372]]]],[11,"clone",E,E,99,[[["self"]],[R[373]]]],[11,"clone",E,E,100,[[["self"]],[R[334]]]],[11,"clone",E,E,101,[[["self"]],[R[335]]]],[11,"clone",E,E,102,[[["self"]],[R[336]]]],[11,"clone",E,E,103,[[["self"]],["nlattr"]]],[11,"clone",E,E,104,[[["self"]],["rtentry"]]],[11,"clone",E,E,105,[[["self"]],["utmpx"]]],[11,"clone",E,E,137,[[["self"]],[R[379]]]],[11,"clone",E,E,106,[[["self"]],["sysinfo"]]],[11,"clone",E,E,107,[[["self"]],[R[374]]]],[11,"clone",E,E,108,[[["self"]],[R[287]]]],[11,"clone",E,E,109,[[["self"]],["statfs"]]],[11,"clone",E,E,110,[[["self"]],["flock"]]],[11,"clone",E,E,111,[[["self"]],[R[337]]]],[11,"clone",E,E,112,[[["self"]],["stack_t"]]],[11,"clone",E,E,113,[[["self"]],["stat"]]],[11,"clone",E,E,114,[[["self"]],["stat64"]]],[11,"clone",E,E,115,[[["self"]],[R[338]]]],[11,"clone",E,E,116,[[["self"]],[R[289]]]],[11,"clone",E,E,138,[[["self"]],[R[339]]]],[11,"clone",E,E,117,[[["self"]],[R[340]]]],[11,"clone",E,E,118,[[["self"]],[R[341]]]],[11,"clone",E,E,119,[[["self"]],[R[342]]]],[11,"clone",E,E,120,[[["self"]],[R[343]]]],[11,"clone",E,E,121,[[["self"]],["user"]]],[11,"clone",E,E,122,[[["self"]],[R[344]]]],[11,"clone",E,E,123,[[["self"]],[R[375]]]],[11,"clone",E,E,124,[[["self"]],[R[376]]]],[11,"clone",E,E,125,[[["self"]],[R[377]]]],[11,"clone",E,E,126,[[["self"]],[R[345]]]],[11,"clone",E,E,127,[[["self"]],[R[346]]]],[11,"clone",E,E,128,[[["self"]],["statvfs"]]],[11,"clone",E,E,139,[[["self"]],["sem_t"]]],[11,"clone",E,E,140,[[["self"]],[R[347]]]],[11,"clone",E,E,141,[[["self"]],[R[348]]]],[11,"clone",E,E,142,[[["self"]],[R[349]]]],[11,"clone",E,E,143,[[["self"]],[R[350]]]],[11,"clone",E,E,144,[[["self"]],[R[351]]]],[11,"clone",E,E,145,[[["self"]],[R[352]]]],[11,"clone",E,E,129,[[["self"]],[R[378]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[353]],[3,"rlimit"],[3,"rusage"],[3,R[291]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[292]],[3,"tms"],[3,"servent"],[3,R[354]],[3,"in_addr"],[3,"ip_mreq"],[3,R[355]],[3,R[293]],[3,R[294]],[3,R[356]],[3,R[295]],[3,"tm"],[3,R[296]],[3,"Dl_info"],[3,"lconv"],[3,R[297]],[3,"ifaddrs"],[3,"arpreq"],[3,R[299]],[3,"arphdr"],[3,"mmsghdr"],[3,R[300]],[3,R[301]],[3,R[302]],[3,"utsname"],[3,R[357]],[3,R[358]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[303]],[3,R[304]],[3,R[305]],[3,R[290]],[3,"msginfo"],[3,"sembuf"],[3,R[306]],[3,R[359]],[3,R[307]],[3,R[308]],[3,R[309]],[3,R[310]],[3,R[311]],[3,R[312]],[3,R[313]],[3,R[314]],[3,R[315]],[3,R[316]],[3,R[317]],[3,R[318]],[3,R[319]],[3,R[360]],[3,R[361]],[3,R[362]],[3,R[363]],[3,R[364]],[3,R[365]],[3,R[366]],[3,R[367]],[3,R[368]],[3,R[369]],[3,"ucred"],[3,"mntent"],[3,R[322]],[3,R[323]],[3,R[324]],[3,R[325]],[3,R[326]],[3,R[327]],[3,"dirent"],[3,R[370]],[3,R[328]],[3,R[329]],[3,"mq_attr"],[3,"statx"],[3,R[330]],[3,"aiocb"],[3,R[331]],[3,R[332]],[3,R[371]],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,R[333]],[3,R[372]],[3,R[373]],[3,R[334]],[3,R[335]],[3,R[336]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[374]],[3,R[287]],[3,"statfs"],[3,"flock"],[3,R[337]],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,R[338]],[3,R[289]],[3,R[340]],[3,R[341]],[3,R[342]],[3,R[343]],[3,"user"],[3,R[344]],[3,R[375]],[3,R[376]],[3,R[377]],[3,R[345]],[3,R[346]],[3,"statvfs"],[3,R[378]],[4,"c_void"],[3,"fd_set"],[3,R[298]],[3,"fsid_t"],[3,R[286]],[3,R[320]],[3,R[321]],[3,R[379]],[3,R[339]],[3,"sem_t"],[3,R[347]],[3,R[348]],[3,R[349]],[3,R[350]],[3,R[351]],[3,R[352]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[380]],[4,R[381]]]};
searchIndex["matrixmultiply"]={"doc":"General matrix multiplication for f32, f64 matrices.","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",N,[[["f32"],["usize"],["isize"]]]],[5,"dgemm",E,"General matrix multiplication (f64)",N,[[["usize"],["isize"],["f64"]]]]],"p":[]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[627],N,[[["u8"]],["memchr"]]],[5,"memchr2_iter",E,R[626],N,[[["u8"]],["memchr2"]]],[5,"memchr3_iter",E,R[626],N,[[["u8"]],["memchr3"]]],[5,"memrchr_iter",E,R[627],N,[[["u8"]],[["rev",["memchr"]],["memchr"]]]],[5,"memrchr2_iter",E,R[626],N,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter",E,R[626],N,[[["u8"]],[["memchr3"],["rev",["memchr3"]]]]],[5,"memchr",E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[5,"memchr2",E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[5,"memchr3",E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[32],["usize"]],["usize"]]]],[11,"new",E,R[628],0,[[["u8"]],["memchr"]]],[11,"new",E,R[628],1,[[["u8"]],["memchr2"]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"into",E,E,0,[[],[U]]],[11,R[30],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,R[30],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,R[30],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[119],E,E,0,[[["self"]],[R[32]]]],[11,R[119],E,E,1,[[["self"]],[R[32]]]],[11,R[119],E,E,2,[[["self"]],[R[32]]]],[11,"next",E,E,0,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[118],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[118],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[118],E,E,2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["ndarray"]={"doc":"The `ndarray` crate provides an n-dimensional container…","i":[[3,"Axis","ndarray","An axis index.",N,N],[12,"0",E,E,0,N],[3,R[2124],E,"Description of the axis, its length and its stride.",N,N],[12,"0",E,E,1,N],[12,"1",E,E,1,N],[12,"2",E,E,1,N],[3,"Dim",E,"Dimension description.",N,N],[3,"IxDynImpl",E,"Dynamic dimension or index type.",N,N],[3,"ShapeError",E,"An error related to array shape or layout.",N,N],[3,"Slice",E,"A slice (range with step size).",N,N],[12,"start",E,E,2,N],[12,"end",E,E,2,N],[12,"step",E,E,2,N],[3,"SliceInfo",E,"Represents all of the necessary information to perform a…",N,N],[3,"Zip",E,"Lock step function application across several arrays or…",N,N],[3,"ArrayBase",E,"An n-dimensional array.",N,N],[3,"OwnedRepr",E,"Array's representation.",N,N],[3,R[2132],E,"ArcArray's representation.",N,N],[3,"ViewRepr",E,"Array view’s representation.",N,N],[3,"Shape",E,"A contiguous array shape of n dimensions.",N,N],[3,R[2133],E,"An array shape of n dimensions in c-order, f-order or…",N,N],[4,R[715],E,"Error code for an error related to array shape or layout.",N,N],[13,"IncompatibleShape",E,"incompatible shape",3,N],[13,"IncompatibleLayout",E,"incompatible memory layout",3,N],[13,"RangeLimited",E,"the shape does not fit inside type limits",3,N],[13,"OutOfBounds",E,"out of bounds indexing",3,N],[13,R[2307],E,"aliasing array elements",3,N],[13,"Overflow",E,"overflow when computing offset, length, etc.",3,N],[4,R[2125],E,"A slice (range with step) or an index.",N,N],[13,"Slice",E,"A range with step size. `end` is an exclusive index.…",4,N],[12,"start","ndarray::SliceOrIndex",E,4,N],[12,"end",E,E,4,N],[12,"step",E,E,4,N],[13,"Index","ndarray","A single index.",4,N],[4,R[241],E,"Value controlling the execution of `.fold_while` on `Zip`.",N,N],[13,R[929],E,R[2035],5,N],[13,"Done",E,R[2036],5,N],[5,"Dim",E,"Create a new dimension value.",N,[[[T]]]],[5,"indices",E,"Create an iterable of the array shape `shape`.",N,[[["e"]],["indices"]]],[5,"indices_of",E,"Return an iterable of the indices of the passed-in array.",N,[[[R[2060]]],["indices"]]],[5,"stack",E,R[2084],N,[[["axis"]],[[R[2],["array",R[2044]]],["array"],[R[2044]]]]],[5,"Ix0",E,"Create a zero-dimensional index",N,[[],["ix0"]]],[5,"Ix1",E,"Create a one-dimensional index",N,[[["ix"]],["ix1"]]],[5,"Ix2",E,"Create a two-dimensional index",N,[[["ix"]],["ix2"]]],[5,"Ix3",E,"Create a three-dimensional index",N,[[["ix"]],["ix3"]]],[5,"Ix4",E,"Create a four-dimensional index",N,[[["ix"]],["ix4"]]],[5,"Ix5",E,"Create a five-dimensional index",N,[[["ix"]],["ix5"]]],[5,"Ix6",E,"Create a six-dimensional index",N,[[["ix"]],["ix6"]]],[5,"IxDyn",E,"Create a dynamic-dimensional index",N,[[],["ixdyn"]]],[5,"arr0",E,"Create a zero-dimensional array with the element `x`.",N,[[["a"]],["array0"]]],[5,"arr1",E,R[2037],N,[[],[["array1"],["clone"]]]],[5,"rcarr1",E,R[2037],N,[[],[["arcarray",["ix1"]],["clone"],["ix1"]]]],[5,"aview0",E,"Create a zero-dimensional array view borrowing `x`.",N,[[["a"]],["arrayview0"]]],[5,"aview1",E,"Create a one-dimensional array view with elements…",N,[[],[R[2072]]]],[5,"aview2",E,"Create a two-dimensional array view with elements…",N,[[],["arrayview2"]]],[5,"aview_mut1",E,"Create a one-dimensional read-write array view with…",N,[[],[R[2068]]]],[5,"aview_mut2",E,"Create a two-dimensional read-write array view with…",N,[[],["arrayviewmut2"]]],[5,"arr2",E,R[2038],N,[[],[["clone"],["array2"]]]],[5,"rcarr2",E,R[2038],N,[[],[["ix2"],["arcarray",["ix2"]],["clone"]]]],[5,"arr3",E,R[2039],N,[[],[["clone"],["array3"]]]],[5,"rcarr3",E,R[2039],N,[[],[["arcarray",["ix3"]],["clone"],["ix3"]]]],[11,"index",E,"Return the index of the axis.",0,[[["self"]],["usize"]]],[11,"axis",E,"Return axis",1,[[],["axis"]]],[11,"len",E,"Return length",1,[[],["ix"]]],[11,"stride",E,"Return stride",1,[[],["ixs"]]],[0,"iter",E,"Producers, iterables and iterators.",N,N],[3,"Axes",R[2045],"An iterator over the length and stride of each axis of an…",N,N],[3,"Indices",E,"Indices producer and iterable.",N,N],[3,R[2134],E,"An iterator over the indexes of an array shape.",N,N],[3,"Iter",E,"An iterator over the elements of an array.",N,N],[3,"IterMut",E,"An iterator over the elements of an array (mutable).",N,N],[3,R[2135],E,"An iterator over the indexes and elements of an array.",N,N],[3,R[2136],E,"An iterator over the indexes and elements of an array…",N,N],[3,"Lanes",E,"See `.lanes()` for more information.",N,N],[3,"LanesMut",E,"See `.lanes_mut()` for more information.",N,N],[3,"LanesIter",E,"An iterator that traverses over all axes but one, and…",N,N],[3,R[2137],E,"An iterator that traverses over all dimensions but the…",N,N],[3,"AxisIter",E,R[2040],N,N],[3,R[2126],E,R[2040],N,N],[3,R[2138],E,R[2041],N,N],[3,R[2139],E,R[2041],N,N],[3,R[2140],E,R[2042],N,N],[3,R[2141],E,R[2043],N,N],[3,R[2142],E,R[2042],N,N],[3,R[2143],E,R[2043],N,N],[3,"Windows",E,"Window producer and iterable",N,N],[11,"new","ndarray","Create a new `Slice` with the given extents.",2,[[["isize"],[R[32],["isize"]]],["slice"]]],[11,"step_by",E,"Create a new `Slice` with the given step size (multiplied…",2,[[["isize"]],["self"]]],[11,"is_slice",E,"Returns `true` if `self` is a `Slice` value.",4,[[["self"]],["bool"]]],[11,"is_index",E,"Returns `true` if `self` is an `Index` value.",4,[[["self"]],["bool"]]],[11,"step_by",E,"Returns a new `SliceOrIndex` with the given step size…",4,[[["isize"]],["self"]]],[11,"new",E,"Returns a new `SliceInfo` instance.",6,[[[T]],[[R[2],[R[2055],R[2044]]],[R[2044]],[R[2055]]]]],[11,"out_ndim",E,"Returns the number of dimensions after calling `.slice()`…",6,[[["self"]],["usize"]]],[11,"split_at",R[2045],R[2046],7,[[["usize"]]]],[11,"split_at",E,R[2046],8,[[["usize"]]]],[11,"kind","ndarray","Return the `ErrorKind` of this error.",9,[[["self"]],[R[710]]]],[11,"from_kind",E,"Create a new `ShapeError`",9,[[[R[710]]],["self"]]],[11,"size",E,"Return the size of the shape in number of elements",10,[[["self"]],["usize"]]],[11,"from",E,"Create a new `Zip` from the input array or other producer…",11,[[["ip"]],["self"]]],[11,"indexed",E,"Create a new `Zip` with an index producer and the producer…",11,[[["ip"]],["self"]]],[11,"size",E,"Return a the number of element tuples in the Zip",11,[[["self"]],["usize"]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"and",E,R[2050],11,[[["p"]],["zip"]]],[11,R[2051],E,R[2052],11,[[["p"]],["zip"]]],[11,"split",E,R[2053],11,[[]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"and",E,R[2050],11,[[["p"]],["zip"]]],[11,R[2051],E,R[2052],11,[[["p"]],["zip"]]],[11,"split",E,R[2053],11,[[]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"and",E,R[2050],11,[[["p"]],["zip"]]],[11,R[2051],E,R[2052],11,[[["p"]],["zip"]]],[11,"split",E,R[2053],11,[[]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"and",E,R[2050],11,[[["p"]],["zip"]]],[11,R[2051],E,R[2052],11,[[["p"]],["zip"]]],[11,"split",E,R[2053],11,[[]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"and",E,R[2050],11,[[["p"]],["zip"]]],[11,R[2051],E,R[2052],11,[[["p"]],["zip"]]],[11,"split",E,R[2053],11,[[]]],[11,"apply",E,R[2047],11,[[["f"]]]],[11,R[2048],E,R[2049],11,[[["acc"],["f"]],[R[208]]]],[11,"split",E,R[2053],11,[[]]],[11,R[6],E,"Return the inner value",5,[[],[T]]],[11,"is_done",E,"Return true if it is `Done`, false if `Continue`",5,[[["self"]],["bool"]]],[0,"prelude",E,"ndarray prelude.",N,N],[11,"from_vec",E,"Create a one-dimensional array from a vector (no copying…",12,[[["vec"]],["self"]]],[11,R[176],E,"Create a one-dimensional array from an iterable.",12,[[["i"]],["self"]]],[11,"linspace",E,"Create a one-dimensional array from the inclusive interval…",12,[[["a"],["usize"]],["self"]]],[11,"range",E,"Create a one-dimensional array from the half-open interval…",12,[[["a"]],["self"]]],[11,"eye",E,"Create an identity matrix of size `n` (square 2D array).",12,[[["ix"]],["self"]]],[11,"from_elem",E,"Create an array with copies of `elem`, shape `shape`.",12,[[["a"],["sh"]],["self"]]],[11,"zeros",E,"Create an array with zeros, shape `shape`.",12,[[["sh"]],["self"]]],[11,"ones",E,"Create an array with ones, shape `shape`.",12,[[["sh"]],["self"]]],[11,R[99],E,"Create an array with default values, shape `shape`",12,[[["sh"]],["self"]]],[11,"from_shape_fn",E,"Create an array with values created by the function `f`.",12,[[["f"],["sh"]],["self"]]],[11,"from_shape_vec",E,"Create an array with the given shape from a vector. (No…",12,[[["vec"],["sh"]],[[R[2],[R[2044]]],[R[2044]]]]],[11,"from_shape_vec_unchecked",E,"Creates an array from a vector and interpret it according…",12,[[["vec"],["sh"]],["self"]]],[11,"uninitialized",E,"Create an array with uninitalized elements, shape `shape`.",12,[[["sh"]],["self"]]],[11,"len",E,"Return the total number of elements in the array.",12,[[["self"]],["usize"]]],[11,"len_of",E,"Return the length of `axis`.",12,[[["self"],["axis"]],["usize"]]],[11,R[45],E,"Return whether the array has any elements",12,[[["self"]],["bool"]]],[11,"ndim",E,"Return the number of dimensions (axes) in the array",12,[[["self"]],["usize"]]],[11,"dim",E,"Return the shape of the array in its “pattern” form, an…",12,[[["self"]]]],[11,"raw_dim",E,"Return the shape of the array as it stored in the array.",12,[[["self"]],["d"]]],[11,"shape",E,"Return the shape of the array as a slice.",12,[[["self"]]]],[11,"strides",E,"Return the strides of the array as a slice",12,[[["self"]]]],[11,"stride_of",E,"Return the stride of `axis`.",12,[[["self"],["axis"]],["isize"]]],[11,"view",E,"Return a read-only view of the array",12,[[["self"]],[R[2059]]]],[11,"view_mut",E,"Return a read-write view of the array",12,[[["self"]],[R[2056]]]],[11,R[37],E,"Return an uniquely owned copy of the array.",12,[[["self"]],["array"]]],[11,"to_shared",E,"Return a shared ownership (copy on write) array.",12,[[["self"]],["arcarray"]]],[11,R[815],E,"Turn the array into a uniquely owned array, cloning the…",12,[[],["array"]]],[11,R[2054],E,"Turn the array into a shared ownership (copy on write)…",12,[[],["arcarray"]]],[11,"first",E,"Returns a reference to the first element of the array, or…",12,[[["self"]],[[R[32]],["a"]]]],[11,"first_mut",E,"Returns a mutable reference to the first element of the…",12,[[["self"]],[[R[32]],["a"]]]],[11,"iter",E,"Return an iterator of references to the elements of the…",12,[[["self"]],["iter"]]],[11,"iter_mut",E,"Return an iterator of mutable references to the elements…",12,[[["self"]],["itermut"]]],[11,"indexed_iter",E,"Return an iterator of indexes and references to the…",12,[[["self"]],[R[2110]]]],[11,"indexed_iter_mut",E,"Return an iterator of indexes and mutable references to…",12,[[["self"]],["indexeditermut"]]],[11,"slice",E,"Return a sliced view of the array.",12,[[["self"],[R[2055]]],[R[2059]]]],[11,R[2096],E,"Return a sliced read-write view of the array.",12,[[["self"],[R[2055]]],[R[2056]]]],[11,"slice_move",E,"Slice the array, possibly changing the number of dimensions.",12,[[[R[2055]]],[R[2060]]]],[11,"slice_collapse",E,R[2057],12,[[["self"]]]],[11,"slice_inplace",E,R[2057],12,[[["self"]]]],[11,"slice_axis",E,"Return a view of the array, sliced along the specified axis.",12,[[["self"],["axis"],["slice"]],[R[2059]]]],[11,"slice_axis_mut",E,"Return a mutable view of the array, sliced along the…",12,[[["self"],["axis"],["slice"]],[R[2056]]]],[11,"slice_axis_inplace",E,"Slice the array in place along the specified axis.",12,[[["self"],["axis"],["slice"]]]],[11,"get",E,"Return a reference to the element at `index`, or return…",12,[[["self"],["i"]],[[R[32]],["a"]]]],[11,"get_mut",E,"Return a mutable reference to the element at `index`, or…",12,[[["self"],["i"]],[[R[32]],["a"]]]],[11,"uget",E,R[2058],12,[[["self"],["i"]],["a"]]],[11,"uget_mut",E,R[2058],12,[[["self"],["i"]],["a"]]],[11,"swap",E,"Swap elements at indices `index1` and `index2`.",12,[[["self"],["i"]]]],[11,"uswap",E,"Swap elements unchecked at indices `index1` and `index2`.",12,[[["self"],["i"]]]],[11,"index_axis",E,"Returns a view restricted to `index` along the axis, with…",12,[[["self"],["axis"],["usize"]],[R[2059]]]],[11,"index_axis_mut",E,"Returns a mutable view restricted to `index` along the…",12,[[["self"],["axis"],["usize"]],[R[2056]]]],[11,"index_axis_move",E,R[2073],12,[[["axis"],["usize"]],[R[2060]]]],[11,"collapse_axis",E,"Selects `index` along the axis, collapsing the axis into…",12,[[["self"],["axis"],["usize"]]]],[11,"subview",E,"Along `axis`, select the subview `index` and return a view…",12,[[["self"],["axis"],["ix"]],[R[2059]]]],[11,"subview_mut",E,"Along `axis`, select the subview `index` and return a…",12,[[["self"],["axis"],["ix"]],[R[2056]]]],[11,"subview_inplace",E,"Collapse dimension `axis` into length one, and select the…",12,[[["self"],["axis"],["ix"]]]],[11,"into_subview",E,"Along `axis`, select the subview `index` and return `self`…",12,[[["axis"],["ix"]],[R[2060]]]],[11,"select",E,"Along `axis`, select arbitrary subviews corresponding to…",12,[[["self"],["axis"]],["array"]]],[11,"genrows",E,R[2061],12,[[["self"]],["lanes"]]],[11,"genrows_mut",E,R[2061],12,[[["self"]],["lanesmut"]]],[11,"gencolumns",E,R[2061],12,[[["self"]],["lanes"]]],[11,"gencolumns_mut",E,R[2061],12,[[["self"]],["lanesmut"]]],[11,"lanes",E,R[2062],12,[[["self"],["axis"]],["lanes"]]],[11,"lanes_mut",E,R[2062],12,[[["self"],["axis"]],["lanesmut"]]],[11,"outer_iter",E,R[2063],12,[[["self"]],["axisiter"]]],[11,"outer_iter_mut",E,R[2063],12,[[["self"]],[R[2065]]]],[11,"axis_iter",E,R[2064],12,[[["self"],["axis"]],["axisiter"]]],[11,"axis_iter_mut",E,R[2064],12,[[["self"],["axis"]],[R[2065]]]],[11,"axis_chunks_iter",E,R[2066],12,[[["self"],["axis"],["usize"]],["axischunksiter"]]],[11,"axis_chunks_iter_mut",E,R[2066],12,[[["self"],["axis"],["usize"]],["axischunksitermut"]]],[11,"exact_chunks",E,R[2067],12,[[["self"],["e"]],["exactchunks"]]],[11,"exact_chunks_mut",E,R[2067],12,[[["self"],["e"]],["exactchunksmut"]]],[11,"windows",E,"Return a window producer and iterable.",12,[[["self"],["e"]],["windows"]]],[11,"diag",E,"Return an view of the diagonal elements of the array.",12,[[["self"]],[R[2072]]]],[11,"diag_mut",E,"Return a read-write view over the diagonal elements of the…",12,[[["self"]],[R[2068]]]],[11,"into_diag",E,"Return the diagonal as a one-dimensional array.",12,[[],[["ix1"],[R[2060],["ix1"]]]]],[11,"is_standard_layout",E,"Return `true` if the array data is laid out in contiguous…",12,[[["self"]],["bool"]]],[11,"as_ptr",E,"Return a pointer to the first element in the array.",12,[[["self"]]]],[11,"as_mut_ptr",E,"Return a mutable pointer to the first element in the array.",12,[[["self"]]]],[11,"as_slice",E,R[2069],12,[[["self"]],[R[32]]]],[11,"as_slice_mut",E,R[2069],12,[[["self"]],[R[32]]]],[11,"as_slice_memory_order",E,R[2070],12,[[["self"]],[R[32]]]],[11,"as_slice_memory_order_mut",E,R[2070],12,[[["self"]],[R[32]]]],[11,R[2106],E,"Transform the array into `shape`; any shape with the same…",12,[[["e"]],[[R[2],[R[2060],R[2044]]],[R[2060]],[R[2044]]]]],[11,"reshape",E,"Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",12,[[["self"],["e"]],[R[2060]]]],[11,"into_dyn",E,"Convert any array or array view to a dynamic dimensional…",12,[[],[[R[2060],["ixdyn"]],["ixdyn"]]]],[11,"into_dimensionality",E,"Convert an array or array view to another with the same…",12,[[],[[R[2044]],[R[2060]],[R[2],[R[2060],R[2044]]]]]],[11,"broadcast",E,"Act like a larger size and/or shape array by broadcasting…",12,[[["self"],["e"]],[[R[2059]],[R[32],[R[2059]]]]]],[11,"swap_axes",E,"Swap axes `ax` and `bx`.",12,[[["self"],["usize"]]]],[11,"permuted_axes",E,"Permute the axes.",12,[[[T]],[R[2060]]]],[11,"reversed_axes",E,"Transpose the array by reversing axes.",12,[[],[R[2060]]]],[11,T,E,"Return a transposed view of the array.",12,[[["self"]],[R[2059]]]],[11,"axes",E,"Return an iterator over the length and stride of each axis.",12,[[["self"]],["axes"]]],[11,R[2094],E,"Return the axis with the greatest stride (by absolute…",12,[[["self"]],["axis"]]],[11,"invert_axis",E,"Reverse the stride of `axis`.",12,[[["self"],["axis"]]]],[11,"merge_axes",E,"If possible, merge in the axis `take` to `into`.",12,[[["self"],["axis"]],["bool"]]],[11,R[2091],E,"Insert new array axis at `axis` and return the result.",12,[[["axis"]],[R[2060]]]],[11,R[2077],E,"Remove array axis `axis` and return the result.",12,[[["axis"]],[R[2060]]]],[11,"assign",E,"Perform an elementwise assigment to `self` from `rhs`.",12,[[["self"],[R[2060]]]]],[11,"fill",E,"Perform an elementwise assigment to `self` from element `x`.",12,[[["self"],["a"]]]],[11,"zip_mut_with",E,"Traverse two arrays in unspecified order, in lock step,…",12,[[["self"],[R[2060]],["f"]]]],[11,"fold",E,"Traverse the array elements and apply a fold, returning…",12,[[["self"],["b"],["f"]],["b"]]],[11,"map",E,"Call `f` by reference on each element and create a new…",12,[[["self"],["f"]],["array"]]],[11,"map_mut",E,"Call `f` on a mutable reference of each element and create…",12,[[["self"],["f"]],["array"]]],[11,"mapv",E,"Call `f` by value on each element and create a new array…",12,[[["self"],["f"]],["array"]]],[11,"mapv_into",E,"Call `f` by value on each element, update the array with…",12,[[["f"]],["self"]]],[11,"map_inplace",E,"Modify the array in place by calling `f` by mutable…",12,[[["self"],["f"]]]],[11,"mapv_inplace",E,"Modify the array in place by calling `f` by value on each…",12,[[["self"],["f"]]]],[11,"visit",E,"Visit each element in the array by calling `f` by…",12,[[["self"],["f"]]]],[11,"fold_axis",E,"Fold along an axis.",12,[[["self"],["axis"],["b"],["f"]],["array"]]],[11,"map_axis",E,R[2071],12,[[["axis"],["self"],["f"]],["array"]]],[11,"map_axis_mut",E,R[2071],12,[[["axis"],["self"],["f"]],["array"]]],[11,"to_vec",E,"Return an vector with the elements of the one-dimensional…",12,[[["self"]],["vec"]]],[11,"row",E,"Return an array view of row `index`.",12,[[["self"],["ix"]],[R[2072]]]],[11,"row_mut",E,"Return a mutable array view of row `index`.",12,[[["self"],["ix"]],[R[2068]]]],[11,"rows",E,"Return the number of rows (length of `Axis(0)`) in the…",12,[[["self"]],["usize"]]],[11,"column",E,"Return an array view of column `index`.",12,[[["self"],["ix"]],[R[2072]]]],[11,"column_mut",E,"Return a mutable array view of column `index`.",12,[[["self"],["ix"]],[R[2068]]]],[11,"cols",E,"Return the number of columns (length of `Axis(1)`) in the…",12,[[["self"]],["usize"]]],[11,"is_square",E,"Return true if the array is square, false otherwise.",12,[[["self"]],["bool"]]],[11,"insert_axis_inplace",E,"Insert new array axis of length 1 at `axis`, modifying the…",12,[[["self"],["axis"]]]],[11,"index_axis_inplace",E,R[2073],12,[[["self"],["axis"],["usize"]]]],[11,"sum",E,R[2074],12,[[["self"]],["a"]]],[11,"scalar_sum",E,R[2074],12,[[["self"]],["a"]]],[11,"product",E,"Return the product of all elements in the array.",12,[[["self"]],["a"]]],[11,"sum_axis",E,"Return sum along `axis`.",12,[[["self"],["axis"]],["array"]]],[11,"mean_axis",E,"Return mean along `axis`.",12,[[["self"],["axis"]],["array"]]],[11,"var_axis",E,"Return variance along `axis`.",12,[[["self"],["axis"],["a"]],["array"]]],[11,"std_axis",E,"Return standard deviation along `axis`.",12,[[["self"],["axis"],["a"]],["array"]]],[11,"all_close",E,"Return `true` if the arrays' elementwise differences are…",12,[[["self"],[R[2060]],["a"]],["bool"]]],[0,"linalg",E,"Linear algebra.",N,N],[5,"general_mat_mul",R[2075],"General matrix-matrix multiplication.",N,[[["a"],[R[2060]],[R[2060]],[R[2060]]]]],[5,"general_mat_vec_mul",E,"General matrix-vector multiplication.",N,[[["a"],[R[2060]],[R[2060]],[R[2060]]]]],[11,"dot","ndarray","Perform dot product or matrix multiplication of arrays…",12,[[["self"],["rhs"]]]],[11,"dot",E,"Perform matrix multiplication of rectangular arrays `self`…",12,[[["self"],["rhs"]]]],[11,"scaled_add",E,"Perform the operation `self += alpha * rhs` efficiently,…",12,[[["self"],["a"],[R[2060]]]]],[8,"Dot",R[2075],"Matrix Multiplication",N,N],[16,"Output",E,"The result of the operation.",13,N],[10,"dot",E,E,13,[[["self"],["rhs"]]]],[6,"Ix0","ndarray","zero-dimensionial",N,N],[6,"Ix1",E,"one-dimensional",N,N],[6,"Ix2",E,"two-dimensional",N,N],[6,"Ix3",E,"three-dimensional",N,N],[6,"Ix4",E,"four-dimensional",N,N],[6,"Ix5",E,"five-dimensional",N,N],[6,"Ix6",E,"six-dimensional",N,N],[6,"IxDyn",E,"dynamic-dimensional",N,N],[6,"Array0",E,"zero-dimensional array",N,N],[6,"Array1",E,"one-dimensional array",N,N],[6,"Array2",E,"two-dimensional array",N,N],[6,"Array3",E,"three-dimensional array",N,N],[6,"Array4",E,"four-dimensional array",N,N],[6,"Array5",E,"five-dimensional array",N,N],[6,"Array6",E,"six-dimensional array",N,N],[6,"ArrayD",E,"dynamic-dimensional array",N,N],[6,"ArrayView0",E,"zero-dimensional array view",N,N],[6,"ArrayView1",E,"one-dimensional array view",N,N],[6,"ArrayView2",E,"two-dimensional array view",N,N],[6,"ArrayView3",E,"three-dimensional array view",N,N],[6,"ArrayView4",E,"four-dimensional array view",N,N],[6,"ArrayView5",E,"five-dimensional array view",N,N],[6,"ArrayView6",E,"six-dimensional array view",N,N],[6,"ArrayViewD",E,"dynamic-dimensional array view",N,N],[6,"ArrayViewMut0",E,"zero-dimensional read-write array view",N,N],[6,"ArrayViewMut1",E,"one-dimensional read-write array view",N,N],[6,"ArrayViewMut2",E,"two-dimensional read-write array view",N,N],[6,"ArrayViewMut3",E,"three-dimensional read-write array view",N,N],[6,"ArrayViewMut4",E,"four-dimensional read-write array view",N,N],[6,"ArrayViewMut5",E,"five-dimensional read-write array view",N,N],[6,"ArrayViewMut6",E,"six-dimensional read-write array view",N,N],[6,"ArrayViewMutD",E,"dynamic-dimensional read-write array view",N,N],[6,"RcArray1",E,"one-dimensional shared ownership array",N,N],[6,"RcArray2",E,"two-dimensional shared ownership array",N,N],[6,"Ix",E,"Array index type",N,N],[6,"Ixs",E,"Array index type (signed)",N,N],[6,"RcArray",E,R[2076],N,N],[6,"ArcArray",E,R[2076],N,N],[6,"Array",E,"An array that owns its data uniquely.",N,N],[6,R[2205],E,"A read-only array view.",N,N],[6,R[2144],E,"A read-write array view.",N,N],[8,"Dimension",E,"Array shape and index trait.",N,N],[18,"NDIM",E,R[2115],14,N],[16,"SliceArg",E,"`SliceArg` is the type which is used to specify slicing…",14,N],[16,"Pattern",E,"Pattern matching friendly form of the dimension value.",14,N],[16,"Smaller",E,"Next smaller dimension (if applicable)",14,N],[16,"Larger",E,"Next larger dimension",14,N],[10,"ndim",E,"Returns the number of dimensions (number of axes).",14,[[["self"]],["usize"]]],[10,R[2090],E,"Convert the dimension into a pattern matching friendly…",14,[[]]],[11,"size",E,R[2116],14,[[["self"]],["usize"]]],[11,R[2092],E,R[2117],14,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2118],E,R[2119],14,[[["self"]],[[R[2072],["ix"]],["ix"]]]],[11,R[2120],E,R[2121],14,[[["self"]],[["ix"],[R[2068],["ix"]]]]],[10,"zeros",E,"Creates a dimension of all zeros with the specified ndim.",14,[[["usize"]],["self"]]],[11,"into_dyn",E,R[2122],14,[[],["ixdyn"]]],[10,R[2079],E,R[2080],14,[[["self"]],[R[2081]]]],[8,R[2127],E,"Argument conversion a dimension.",N,N],[16,"Dim",E,E,15,N],[10,R[2089],E,E,15,[[]]],[8,"RemoveAxis",E,"Array shape with a next smaller dimension.",N,N],[10,R[2077],E,E,16,[[["self"],["axis"]]]],[8,"NdIndex",E,"Tuple or fixed size arrays that can be used to index an…",N,N],[8,"AsArray",E,"Argument conversion into an array view",N,N],[8,"LinalgScalar",E,"Elements that support linear algebra operations.",N,N],[8,"NdFloat",E,"Floating-point element types `f32` and `f64`.",N,N],[8,R[2128],E,"A trait for `Shape` and `D where D: Dimension` that allows…",N,N],[16,"Dim",E,E,17,N],[16,"Strides",E,E,17,N],[10,R[2106],E,E,17,[[],["shape"]]],[10,"f",E,E,17,[[],["shape"]]],[10,"set_f",E,E,17,[[["bool"]],["shape"]]],[10,"strides",E,E,17,[[],[R[2107]]]],[8,R[2129],E,"Extra indexing methods for array views",N,N],[16,"Output",E,"The type of the reference to the element that is produced,…",18,N],[10,"index",E,R[2078],18,[[["i"]]]],[10,"get",E,R[2078],18,[[["i"]],[R[32]]]],[10,"uget",E,"Get a reference of a element through the view without…",18,[[["i"]]]],[8,"Data",E,R[2082],N,N],[16,"Elem",E,"The array element type.",19,N],[10,R[2079],E,R[2080],19,[[["self"]],[R[2081]]]],[8,"DataMut",E,R[2082],N,N],[8,"DataOwned",E,R[2082],N,N],[8,"DataShared",E,R[2082],N,N],[8,"DataClone",E,R[2082],N,N],[8,R[2130],E,"Fixed-size array used for array initialization",N,N],[16,"Elem",E,E,20,N],[10,"as_init_slice",E,E,20,[[["self"]]]],[10,"len",E,E,20,[[],["usize"]]],[8,"NdProducer",E,"A producer of an n-dimensional set of elements; for…",N,N],[16,"Item",E,R[2083],21,N],[16,"Dim",E,"Dimension type",21,N],[10,R[2079],E,R[2080],21,[[["self"]],[R[2081]]]],[8,R[2131],E,"Argument conversion into a producer.",N,N],[16,"Item",E,R[2083],22,N],[16,"Dim",E,"Dimension type of the producer",22,N],[16,"Output",E,E,22,N],[10,"into_producer",E,"Convert the value into an `NdProducer`.",22,[[]]],[8,"ScalarOperand",E,"Elements that can be used as direct operands in arithmetic…",N,N],[14,"array",E,"Create an `Array` with one, two or three dimensions.",N,N],[14,"s",E,"Slice argument constructor.",N,N],[14,"stack",E,R[2084],N,N],[14,"azip",E,"Array zip macro: lock step function application across…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[37],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"],[T]]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,R[95],E,E,9,[[["self"]],[R[63]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,R[30],E,E,12,[[],["i"]]],[11,R[95],E,E,12,[[["self"]],[R[63]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[37],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"],[T]]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[37],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"],[T]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,R[95],E,E,4,[[["self"]],[R[63]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",R[2045],E,29,[[],[U]]],[11,R[30],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,R[30],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",E,E,31,[[],[U]]],[11,R[30],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[37],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"],[T]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"into",E,E,32,[[],[U]]],[11,R[30],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,33,[[],[U]]],[11,R[30],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,"into",E,E,34,[[],[U]]],[11,R[30],E,E,34,[[],["i"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[37],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"],[T]]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,"into",E,E,35,[[],[U]]],[11,R[30],E,E,35,[[],["i"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,"into",E,E,36,[[],[U]]],[11,R[30],E,E,36,[[],["i"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[37],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"],[T]]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,"into",E,E,37,[[],[U]]],[11,R[30],E,E,37,[[],["i"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"into",E,E,38,[[],[U]]],[11,R[30],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[37],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"],[T]]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,"into",E,E,39,[[],[U]]],[11,R[30],E,E,39,[[],["i"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[30],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,R[30],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,40,[[],[U]]],[11,R[30],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[37],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"],[T]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,"into",E,E,41,[[],[U]]],[11,R[30],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,"into",E,E,42,[[],[U]]],[11,R[30],E,E,42,[[],["i"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,"into",E,E,43,[[],[U]]],[11,R[30],E,E,43,[[],["i"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[37],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"],[T]]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,"into",E,E,44,[[],[U]]],[11,R[30],E,E,44,[[],["i"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,"into",E,E,45,[[],[U]]],[11,R[30],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,"into",E,E,46,[[],[U]]],[11,R[30],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[37],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"],[T]]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,R[2085],"ndarray",E,26,[[["self"]]]],[11,R[815],E,E,26,[[[R[2060]]],[[R[2086]],[R[2060],[R[2086]]]]]],[11,R[2085],E,E,25,[[["self"]]]],[11,R[815],E,E,25,[[[R[2060]]],[[R[2086]],[R[2060],[R[2086]]]]]],[11,R[2085],E,E,27,[[["self"]]]],[11,R[815],E,E,27,[[[R[2060]]],[[R[2086]],[R[2060],[R[2086]]]]]],[11,R[2085],E,E,27,[[["self"]]]],[11,R[815],E,E,27,[[[R[2060]]],[[R[2086]],[R[2060],[R[2086]]]]]],[11,"ensure_unique",E,E,26,[[[R[2060]]]]],[11,"is_unique",E,E,26,[[["self"]],["bool"]]],[11,R[2087],E,E,26,[[["self"]]]],[11,R[2087],E,E,25,[[["self"]]]],[11,"clone_from_with_ptr",E,E,25,[[["self"],["self"]]]],[11,R[2087],E,E,27,[[["self"]]]],[11,"new",E,E,25,[[["vec"]],["self"]]],[11,R[2054],E,E,25,[[],[R[2088]]]],[11,"new",E,E,26,[[["vec"]],["self"]]],[11,R[2054],E,E,26,[[],[R[2088]]]],[11,R[2089],E,E,47,[[],["ix1"]]],[11,R[2089],E,E,24,[[]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,R[2093],E,E,23,[[["self"]],["self"]]],[11,R[2090],E,E,23,[[]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,"next_for",E,E,23,[[["self"]],[R[32]]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,R[2090],E,E,23,[[]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,"next_for",E,E,23,[[["self"]],[R[32]]]],[11,"equal",E,E,23,[[["self"]],["bool"]]],[11,"size",E,E,23,[[["self"]],["usize"]]],[11,R[2092],E,E,23,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2097],E,E,23,[[["self"]],["self"]]],[11,R[2093],E,E,23,[[["self"]],["self"]]],[11,R[2098],E,E,23,[[["self"]],["axis"]]],[11,R[2094],E,E,23,[[["self"]],["axis"]]],[11,R[2099],E,E,23,[[["self"]],[R[32]]]],[11,R[2100],E,R[2101],23,[[["self"]],["isize"]]],[11,R[2102],E,R[2103],23,[[["self"]],[[R[32],["isize"]],["isize"]]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,R[2090],E,E,23,[[]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,"next_for",E,E,23,[[["self"]],[R[32]]]],[11,"equal",E,E,23,[[["self"]],["bool"]]],[11,"size",E,E,23,[[["self"]],["usize"]]],[11,R[2092],E,E,23,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"last_elem",E,E,23,[[["self"]],["usize"]]],[11,"set_last_elem",E,E,23,[[["self"],["usize"]]]],[11,R[2097],E,E,23,[[["self"]],["self"]]],[11,"fortran_strides",E,E,23,[[["self"]],["self"]]],[11,R[2093],E,E,23,[[["self"]],["self"]]],[11,R[2098],E,E,23,[[["self"]],["axis"]]],[11,R[2099],E,E,23,[[["self"]],[R[32]]]],[11,R[2100],E,R[2101],23,[[["self"]],["isize"]]],[11,R[2102],E,R[2103],23,[[["self"]],[[R[32],["isize"]],["isize"]]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,R[2090],E,E,23,[[]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,"size",E,E,23,[[["self"]],["usize"]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,"next_for",E,E,23,[[["self"]],[R[32]]]],[11,R[2100],E,R[2101],23,[[["self"]],["isize"]]],[11,R[2102],E,R[2103],23,[[["self"]],[[R[32],["isize"]],["isize"]]]],[11,R[2093],E,E,23,[[["self"]],["self"]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,R[2090],E,E,23,[[]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,R[2090],E,E,23,[[]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,23,[[["self"]],["usize"]]],[11,R[2090],E,E,23,[[]]],[11,"slice",E,E,23,[[["self"]]]],[11,R[2096],E,E,23,[[["self"]]]],[11,"zeros",E,E,23,[[["usize"]],["self"]]],[11,R[2091],E,E,23,[[["self"],["axis"]]]],[11,R[2095],E,E,23,[[["self"],["axis"]]]],[11,"ndim",E,E,48,[[["self"]],["usize"]]],[11,"slice",E,E,48,[[["self"]]]],[11,R[2096],E,E,48,[[["self"]]]],[11,R[2090],E,E,48,[[]]],[11,"zeros",E,E,48,[[["usize"]],["self"]]],[11,R[2091],E,E,48,[[["self"],["axis"]]]],[11,R[2095],E,E,48,[[["self"],["axis"]]]],[11,"from_dimension",E,E,48,[[["d2"]],[R[32]]]],[11,R[2104],E,E,47,[[["self"],["ix1"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,47,[[["self"],["ix1"]],["isize"]]],[11,R[2104],E,E,47,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,47,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2104],E,E,23,[[["self"],["ixdyn"]],[[R[32],["isize"]],["isize"]]]],[11,R[2105],E,E,23,[[["self"],["ixdyn"]],["isize"]]],[11,R[2077],E,E,23,[[["self"],["axis"]],["self"]]],[11,R[2077],E,E,23,[[["self"],["axis"]],["ix0"]]],[11,R[2077],E,E,23,[[["self"],["axis"]],["ix1"]]],[11,R[2077],E,E,23,[[["self"],["axis"]]]],[11,R[2077],E,E,23,[[["self"],["axis"]]]],[11,R[2077],E,E,23,[[["self"],["axis"]]]],[11,R[2077],E,E,23,[[["self"],["axis"]]]],[11,R[2106],E,E,10,[[],["shape"]]],[11,"f",E,E,10,[[],["self"]]],[11,"set_f",E,E,10,[[["bool"]],["self"]]],[11,"strides",E,E,10,[[["d"]],[R[2107]]]],[11,R[2108],R[2045],E,30,[[["self"]]]],[11,R[2108],E,E,7,[[["self"]],["isize"]]],[11,R[2108],E,E,8,[[["self"]],["isize"]]],[11,R[2108],"ndarray",E,49,[[["self"]]]],[11,R[2108],E,E,50,[[["self"]]]],[11,"dot",E,"Compute the dot product of one-dimensional arrays.",12,[[["self"],[R[2060]]],["a"]]],[11,"dot",E,"Perform the matrix multiplication of the row vector `self`…",12,[[["self"],[R[2060]]],[["array",["ix1"]],["ix1"]]]],[11,"dot",E,E,12,[[["self"],[R[2060]]],["array2"]]],[11,"dot",E,E,12,[[["self"],[R[2060]]],[["array",["ix1"]],["ix1"]]]],[11,"index",E,R[2109],50,[[["i"]],["a"]]],[11,"get",E,R[2109],50,[[["i"]],[[R[32]],["a"]]]],[11,"uget",E,R[2109],50,[[["i"]],["a"]]],[11,"clone",E,E,0,[[["self"]],["self"]]],[11,"clone",E,E,23,[[["self"]],["dim"]]],[11,"clone",E,E,24,[[["self"]],[R[2114]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",R[2045],E,29,[[["self"]],["self"]]],[11,"clone","ndarray",E,2,[[["self"]],["slice"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["self"]]],[11,"clone",R[2045],E,31,[[["self"]],["indicesiter"]]],[11,"clone",E,E,30,[[["self"]],["indices"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],[R[2110]]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,7,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone","ndarray",E,9,[[["self"]],[R[2044]]]],[11,"clone",E,E,3,[[["self"]],[R[710]]]],[11,"clone",E,E,11,[[["self"]],["zip"]]],[11,"clone",E,E,5,[[["self"]],[R[208]]]],[11,"clone",E,E,25,[[["self"]],[R[2086]]]],[11,"clone",E,E,26,[[["self"]],["self"]]],[11,"clone",E,E,27,[[["self"]],["viewrepr"]]],[11,"clone",E,E,12,[[["self"]],[R[2060]]]],[11,R[122],E,"`Array` implements `.clone_from()` to reuse an array's…",12,[[["self"],["self"]]]],[11,"clone",E,E,10,[[["self"]],["shape"]]],[11,"clone",E,E,28,[[["self"]],[R[2107]]]],[11,"cmp",E,E,0,[[["self"],["axis"]],[R[31]]]],[11,"len",R[2045],E,32,[[["self"]],["usize"]]],[11,"len",E,E,34,[[["self"]],["usize"]]],[11,"len",E,E,33,[[["self"]],["usize"]]],[11,"len",E,E,35,[[["self"]],["usize"]]],[11,"len",E,E,38,[[["self"]],["usize"]]],[11,"len",E,E,39,[[["self"]],["usize"]]],[11,"len",E,E,7,[[["self"]],["usize"]]],[11,"len",E,E,8,[[["self"]],["usize"]]],[11,R[30],"ndarray",E,49,[[]]],[11,R[30],E,E,50,[[]]],[11,R[30],R[2045],E,30,[[]]],[11,R[30],E,E,42,[[]]],[11,R[30],E,E,44,[[]]],[11,R[30],E,E,46,[[]]],[11,R[30],E,E,36,[[]]],[11,R[30],E,E,37,[[]]],[11,R[99],"ndarray",E,12,[[],["self"]]],[11,R[99],E,E,23,[[],["dim"]]],[11,R[99],E,E,24,[[],[R[2114]]]],[11,"from",E,E,49,[[["slice"]],["self"]]],[11,"from",E,E,49,[[[R[2060]]],["self"]]],[11,"from",E,E,50,[[["slice"]],["self"]]],[11,"from",E,E,50,[[[R[2060]]],["self"]]],[11,"from",E,E,24,[[],["self"]]],[11,"from",E,E,24,[[["vec",["ix"]],["ix"]],["self"]]],[11,"from",E,E,51,[[["vec"]],["self"]]],[11,"from",E,"Converts the `Vec` of arrays to an owned 2-D array.",52,[[["vec"]],["self"]]],[11,"from",E,"Converts the `Vec` of arrays to an owned 3-D array.",53,[[["vec"]],["self"]]],[11,"from",E,E,2,[[["range",["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[[R[1188],["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[[R[2111],["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[["rangeto",["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[[R[1512],["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[["range",["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[1188],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[2111],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[["rangeto",["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[1512],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[["range",["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[1188],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[2111],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[["rangeto",["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[1512],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,4,[[["range",["isize"]],["isize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1188],["isize"]],["isize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[2111],["isize"]],["isize"]],[R[2112]]]],[11,"from",E,E,4,[[["rangeto",["isize"]],["isize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1512],["isize"]],["isize"]],[R[2112]]]],[11,"from",E,E,4,[[["range",["usize"]],["usize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1188],["usize"]],["usize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[2111],["usize"]],["usize"]],[R[2112]]]],[11,"from",E,E,4,[[["rangeto",["usize"]],["usize"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1512],["usize"]],["usize"]],[R[2112]]]],[11,"from",E,E,4,[[["range",["i32"]],["i32"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1188],["i32"]],["i32"]],[R[2112]]]],[11,"from",E,E,4,[[[R[2111],["i32"]],["i32"]],[R[2112]]]],[11,"from",E,E,4,[[["rangeto",["i32"]],["i32"]],[R[2112]]]],[11,"from",E,E,4,[[[R[1512],["i32"]],["i32"]],[R[2112]]]],[11,"from",E,E,2,[[[R[2113]]],["slice"]]],[11,"from",E,E,4,[[[R[2113]]],[R[2112]]]],[11,"from",E,E,4,[[["slice"]],[R[2112]]]],[11,"from",E,E,4,[[["isize"]],[R[2112]]]],[11,"from",E,E,4,[[["usize"]],[R[2112]]]],[11,"from",E,E,4,[[["i32"]],[R[2112]]]],[11,"from",E,"Create a `Shape` from `dimension`, using the default…",10,[[["d"]],["shape"]]],[11,"from",E,E,28,[[[T]],["self"]]],[11,R[117],E,E,0,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[119],R[2045],E,29,[[["self"]],[R[32]]]],[11,R[119],E,E,32,[[["self"]],[[R[32]],["a"]]]],[11,"rfold",E,E,32,[[["acc"],["g"]],["acc"]]],[11,R[119],E,E,33,[[["self"]],[[R[32]],["a"]]]],[11,"rfold",E,E,33,[[["acc"],["g"]],["acc"]]],[11,R[119],E,E,7,[[["self"]],[R[32]]]],[11,R[119],E,E,8,[[["self"]],[R[32]]]],[11,R[119],E,E,40,[[["self"]],[R[32]]]],[11,R[119],E,E,41,[[["self"]],[R[32]]]],[11,"eq","ndarray",E,12,[[["self"],[R[2060]]],["bool"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["dim"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["dim"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["i"]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[2114]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[2114]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["slice"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["slice"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[2112]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[2112]]],["bool"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"]],["bool"]]],[11,"next",R[2045],E,29,[[["self"]],[R[32]]]],[11,R[118],E,E,29,[[["self"]]]],[11,"next",E,E,31,[[["self"]],[R[32]]]],[11,R[118],E,E,31,[[["self"]]]],[11,"next",E,E,43,[[["self"]],[R[32]]]],[11,R[118],E,E,43,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[32]]]],[11,R[118],E,E,45,[[["self"]]]],[11,"next",E,E,32,[[["self"]],[[R[32]],["a"]]]],[11,R[118],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,34,[[["self"]],[R[32]]]],[11,R[118],E,E,34,[[["self"]]]],[11,"next",E,E,33,[[["self"]],[[R[32]],["a"]]]],[11,R[118],E,E,33,[[["self"]]]],[11,"fold",E,E,33,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,35,[[["self"]],[R[32]]]],[11,R[118],E,E,35,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[R[32]]]],[11,R[118],E,E,38,[[["self"]]]],[11,"next",E,E,39,[[["self"]],[R[32]]]],[11,R[118],E,E,39,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[32]]]],[11,R[118],E,E,7,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[32]]]],[11,R[118],E,E,8,[[["self"]]]],[11,"next",E,E,40,[[["self"]],[R[32]]]],[11,R[118],E,E,40,[[["self"]]]],[11,"next",E,E,41,[[["self"]],[R[32]]]],[11,R[118],E,E,41,[[["self"]]]],[11,"as_ref","ndarray",E,6,[[["self"]]]],[11,"as_ref",E,E,6,[[["self"]],[R[2055]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2045],E,29,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","ndarray",E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2045],E,30,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","ndarray",E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"div",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"div",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"div",E,E,12,[[["b"]],[R[2060]]]],[11,"add",E,E,23,[[],["self"]]],[11,"add",E,E,23,[[["ix"]],["self"]]],[11,"add",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"add",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"add",E,E,12,[[["b"]],[R[2060]]]],[11,"sub",E,E,23,[[],["self"]]],[11,"sub",E,E,23,[[["ix"]],["self"]]],[11,"sub",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"sub",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"sub",E,E,12,[[["b"]],[R[2060]]]],[11,"mul",E,E,23,[[],["self"]]],[11,"mul",E,E,23,[[["ix"]],["self"]]],[11,"mul",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"mul",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"mul",E,E,12,[[["b"]],[R[2060]]]],[11,"rem",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"rem",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"rem",E,E,12,[[["b"]],[R[2060]]]],[11,"neg",E,"Perform an elementwise negation of `self` and return the…",12,[[],["self"]]],[11,R[781],E,E,23,[[["self"]]]],[11,R[781],E,E,23,[[["self"],["self"]]]],[11,R[781],E,E,23,[[["self"],["ix"]]]],[11,R[781],E,E,12,[[["self"],[R[2060]]]]],[11,R[781],E,E,12,[[["self"],["a"]]]],[11,R[782],E,E,23,[[["self"]]]],[11,R[782],E,E,23,[[["self"],["self"]]]],[11,R[782],E,E,23,[[["self"],["ix"]]]],[11,R[782],E,E,12,[[["self"],[R[2060]]]]],[11,R[782],E,E,12,[[["self"],["a"]]]],[11,R[783],E,E,23,[[["self"]]]],[11,R[783],E,E,23,[[["self"],["self"]]]],[11,R[783],E,E,23,[[["self"],["ix"]]]],[11,R[783],E,E,12,[[["self"],[R[2060]]]]],[11,R[783],E,E,12,[[["self"],["a"]]]],[11,R[784],E,E,12,[[["self"],[R[2060]]]]],[11,R[784],E,E,12,[[["self"],["a"]]]],[11,R[785],E,E,12,[[["self"],[R[2060]]]]],[11,R[785],E,E,12,[[["self"],["a"]]]],[11,"not",E,"Perform an elementwise unary not of `self` and return the…",12,[[],["self"]]],[11,"bitand",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitand",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitand",E,E,12,[[["b"]],[R[2060]]]],[11,"bitor",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitor",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitor",E,E,12,[[["b"]],[R[2060]]]],[11,"bitxor",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitxor",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"bitxor",E,E,12,[[["b"]],[R[2060]]]],[11,"shl",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"shl",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"shl",E,E,12,[[["b"]],[R[2060]]]],[11,"shr",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"shr",E,E,12,[[[R[2060]]],[R[2060]]]],[11,"shr",E,E,12,[[["b"]],[R[2060]]]],[11,R[1429],E,E,12,[[["self"],[R[2060]]]]],[11,R[1429],E,E,12,[[["self"],["a"]]]],[11,R[1430],E,E,12,[[["self"],[R[2060]]]]],[11,R[1430],E,E,12,[[["self"],["a"]]]],[11,R[1431],E,E,12,[[["self"],[R[2060]]]]],[11,R[1431],E,E,12,[[["self"],["a"]]]],[11,R[1871],E,E,12,[[["self"],[R[2060]]]]],[11,R[1871],E,E,12,[[["self"],["a"]]]],[11,R[1872],E,E,12,[[["self"],[R[2060]]]]],[11,R[1872],E,E,12,[[["self"],["a"]]]],[11,"deref",E,E,24,[[["self"]]]],[11,"deref",E,E,6,[[["self"]]]],[11,R[14],E,E,24,[[["self"]]]],[11,"index",E,E,12,[[["self"],["i"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,23,[[["self"],["usize"]]]],[11,"index",E,E,24,[[["self"],["j"]]]],[11,R[1511],E,E,12,[[["self"],["i"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,23,[[["self"],["usize"]]]],[11,R[1511],E,E,24,[[["self"],["j"]]]],[11,"hash",E,E,12,[[["self"],["h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,R[176],E,E,12,[[["i"]],[["ix1"],[R[2060],["ix1"]]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,9,[[["self"]],["str"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[11,"zero",E,E,23,[[],["self"]]],[11,"is_zero",E,E,23,[[["self"]],["bool"]]],[18,"NDIM",E,R[2115],14,N],[11,"size",E,R[2116],14,[[["self"]],["usize"]]],[11,R[2092],E,R[2117],14,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2118],E,R[2119],14,[[["self"]],[[R[2072],["ix"]],["ix"]]]],[11,R[2120],E,R[2121],14,[[["self"]],[["ix"],[R[2068],["ix"]]]]],[11,"into_dyn",E,R[2122],14,[[],["ixdyn"]]],[11,"zeros",E,"Create a new dimension value with `n` axes, all zeros",48,[[["usize"]],["ixdyn"]]],[11,"into_scalar",E,"Returns the single element in the array without cloning it.",54,[[],["a"]]],[11,"into_raw_vec",E,"Return a vector of the elements in the array, in the way…",54,[[],["vec"]]],[11,"from_shape",E,"Create a read-only array view borrowing its data from a…",49,[[["sh"]],[[R[2],[R[2044]]],[R[2044]]]]],[11,R[2123],E,"Create an `ArrayView<A, D>` from shape information and a…",49,[[["sh"]],["self"]]],[11,"reborrow",E,"Convert the view into an `ArrayView<'b, A, D>` where `'b`…",49,[[],[R[2059]]]],[11,"split_at",E,"Split the array view along `axis` and return one view…",49,[[["axis"],["ix"]]]],[11,"into_slice",E,R[2069],49,[[["self"]],[R[32]]]],[11,"from_shape",E,"Create a read-write array view borrowing its data from a…",50,[[["sh"]],[[R[2],[R[2044]]],[R[2044]]]]],[11,R[2123],E,"Create an `ArrayViewMut<A, D>` from shape information and…",50,[[["sh"]],["self"]]],[11,"reborrow",E,"Convert the view into an `ArrayViewMut<'b, A, D>` where…",50,[[],[R[2056]]]],[11,"split_at",E,"Split the array view along `axis` and return one mutable…",50,[[["axis"],["ix"]]]],[11,"into_slice",E,R[2069],50,[[],[R[32]]]]],"p":[[3,"Axis"],[3,R[2124]],[3,"Slice"],[4,R[715]],[4,R[2125]],[4,R[241]],[3,"SliceInfo"],[3,"AxisIter"],[3,R[2126]],[3,"ShapeError"],[3,"Shape"],[3,"Zip"],[3,"ArrayBase"],[8,"Dot"],[8,"Dimension"],[8,R[2127]],[8,"RemoveAxis"],[8,R[2128]],[8,R[2129]],[8,"Data"],[8,R[2130]],[8,"NdProducer"],[8,R[2131]],[3,"Dim"],[3,"IxDynImpl"],[3,"OwnedRepr"],[3,R[2132]],[3,"ViewRepr"],[3,R[2133]],[3,"Axes"],[3,"Indices"],[3,R[2134]],[3,"Iter"],[3,"IterMut"],[3,R[2135]],[3,R[2136]],[3,"Lanes"],[3,"LanesMut"],[3,"LanesIter"],[3,R[2137]],[3,R[2138]],[3,R[2139]],[3,R[2140]],[3,R[2141]],[3,R[2142]],[3,R[2143]],[3,"Windows"],[6,"Ix"],[6,"IxDyn"],[6,R[2205]],[6,R[2144]],[6,"Array1"],[6,"Array2"],[6,"Array3"],[6,"Array"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","i":[[3,R[3],R[1],"A type holding T that will not call its destructor on drop",N,N],[11,"new",E,"Create a new NoDrop.",0,[[[T]],[R[1]]]],[11,R[6],E,"Extract the inner value.",0,[[],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,R[3]]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num",R[1749],N,N],[3,"BigUint",E,R[1748],N,N],[3,"Complex",E,R[1750],N,N],[12,"re",E,R[1751],0,N],[12,"im",E,R[1752],0,N],[6,"Rational",E,R[1844],N,N],[6,R[1845],E,R[1846],N,N],[8,"Integer",E,E,N,N],[10,R[744],E,R[1753],1,[[["self"]],["self"]]],[10,R[745],E,R[1754],1,[[["self"]],["self"]]],[11,"div_ceil",E,R[1755],1,[[["self"]],["self"]]],[10,"gcd",E,R[1756],1,[[["self"]],["self"]]],[10,"lcm",E,R[1757],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1758],1,[[["self"]]]],[11,R[1759],E,R[1760],1,[[["self"]],[R[747]]]],[11,R[1761],E,R[1762],1,[[["self"]]]],[10,"divides",E,R[1434],1,[[["self"]],["bool"]]],[10,R[1435],E,R[1763],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1764],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1765],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1766],1,[[["self"]]]],[11,R[746],E,R[1767],1,[[["self"]]]],[11,R[1768],E,R[1769],1,[[["self"]],["self"]]],[11,R[1770],E,R[1771],1,[[["self"]],["self"]]],[5,"range",E,R[1772],N,[[["a"]],["range"]]],[5,R[1773],E,R[1774],N,[[["a"]],[R[1188]]]],[5,R[1933],E,R[1775],N,[[["a"]],[R[1934]]]],[5,R[1776],E,R[1777],N,[[["a"]],[R[1189]]]],[8,"Num",E,R[1840],N,N],[16,R[1841],E,E,2,N],[10,R[793],E,R[1842],2,[[["u32"],["str"]],[R[2]]]],[8,"Zero",E,R[1792],N,N],[10,"zero",E,R[1793],3,[[],["self"]]],[11,R[1873],E,R[1794],3,[[["self"]]]],[10,"is_zero",E,R[1795],3,[[["self"]],["bool"]]],[8,"One",E,R[1796],N,N],[10,"one",E,R[1797],4,[[],["self"]]],[11,"set_one",E,R[1798],4,[[["self"]]]],[11,"is_one",E,R[1799],4,[[["self"]],["bool"]]],[8,"Signed",E,R[1836],N,N],[10,"abs",E,R[601],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[582],5,[[["self"]],["self"]]],[10,"signum",E,R[602],5,[[["self"]],["self"]]],[10,R[1445],E,R[1837],5,[[["self"]],["bool"]]],[10,R[1446],E,R[1838],5,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1839],N,N],[8,"Bounded",E,R[1778],N,N],[10,R[532],E,R[1779],6,[[],["self"]]],[10,R[533],E,R[1780],6,[[],["self"]]],[5,"one",E,R[1801],N,[[],[T]]],[5,"zero",E,R[1800],N,[[],[T]]],[5,"abs",E,R[601],N,[[[T]],[T]]],[5,"abs_sub",E,R[582],N,[[[T]],[T]]],[5,"signum",E,R[602],N,[[[T]],[T]]],[8,R[619],E,R[1829],N,N],[10,R[1830],E,R[1831],7,[[],["self"]]],[10,R[1832],E,R[1833],7,[[],["self"]]],[8,R[610],E,R[1820],N,N],[10,R[1442],E,R[1821],8,[[["self"]],[R[32]]]],[8,R[611],E,R[1822],N,N],[10,R[1441],E,R[1823],9,[[["self"]],[R[32]]]],[8,R[612],E,R[1824],N,N],[10,R[1443],E,R[1825],10,[[["self"]],[R[32]]]],[8,R[613],E,R[1826],N,N],[10,R[1440],E,R[1827],11,[[["self"]],[R[32]]]],[8,"PrimInt",E,R[1802],N,N],[10,R[1990],E,R[1803],12,[[],["u32"]]],[10,R[1804],E,R[1805],12,[[],["u32"]]],[10,R[1806],E,R[1807],12,[[],["u32"]]],[10,R[1808],E,R[1809],12,[[],["u32"]]],[10,R[1810],E,R[563],12,[[["u32"]],["self"]]],[10,R[1811],E,R[564],12,[[["u32"]],["self"]]],[10,R[1991],E,R[563],12,[[["u32"]],["self"]]],[10,R[1992],E,R[564],12,[[["u32"]],["self"]]],[10,R[1812],E,R[563],12,[[["u32"]],["self"]]],[10,R[1813],E,R[564],12,[[["u32"]],["self"]]],[10,R[1993],E,R[1814],12,[[],["self"]]],[10,"from_be",E,R[1815],12,[[],["self"]]],[10,"from_le",E,R[1816],12,[[],["self"]]],[10,"to_be",E,R[1817],12,[[],["self"]]],[10,"to_le",E,R[1818],12,[[],["self"]]],[10,"pow",E,R[1819],12,[[["u32"]],["self"]]],[8,R[605],E,R[1712],N,N],[11,"to_isize",E,R[1713],13,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_i8",E,R[1714],13,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,R[1715],13,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,R[1716],13,[[["self"]],[[R[32],["i32"]],["i32"]]]],[10,"to_i64",E,R[1717],13,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,R[1718],13,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,R[794],E,R[1719],13,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_u8",E,R[1720],13,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,R[1721],13,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,R[1722],13,[[["self"]],[["u32"],[R[32],["u32"]]]]],[10,"to_u64",E,R[1723],13,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,R[1724],13,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_f32",E,R[1725],13,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,R[1726],13,[[["self"]],[["f64"],[R[32],["f64"]]]]],[8,R[606],E,R[1727],N,N],[11,R[789],E,R[1728],14,[[["isize"]],[R[32]]]],[11,"from_i8",E,R[1729],14,[[["i8"]],[R[32]]]],[11,"from_i16",E,R[1730],14,[[["i16"]],[R[32]]]],[11,"from_i32",E,R[1731],14,[[["i32"]],[R[32]]]],[10,R[1450],E,R[1732],14,[[["i64"]],[R[32]]]],[11,R[790],E,R[1733],14,[[["i128"]],[R[32]]]],[11,R[625],E,R[1734],14,[[["usize"]],[R[32]]]],[11,"from_u8",E,R[1735],14,[[["u8"]],[R[32]]]],[11,"from_u16",E,R[1736],14,[[["u16"]],[R[32]]]],[11,"from_u32",E,R[1737],14,[[["u32"]],[R[32]]]],[10,R[1451],E,R[1738],14,[[["u64"]],[R[32]]]],[11,R[791],E,R[1739],14,[[["u128"]],[R[32]]]],[11,R[1453],E,R[1740],14,[[["f32"]],[R[32]]]],[11,R[1452],E,R[1741],14,[[["f64"]],[R[32]]]],[8,"NumCast",E,R[1742],N,N],[10,"from",E,R[1743],15,[[[T]],[R[32]]]],[0,"cast",E,E,N,N],[8,R[605],"num::cast",R[1712],N,N],[11,"to_isize",E,R[1713],13,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_i8",E,R[1714],13,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,R[1715],13,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,R[1716],13,[[["self"]],[[R[32],["i32"]],["i32"]]]],[10,"to_i64",E,R[1717],13,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,R[1718],13,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,R[794],E,R[1719],13,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_u8",E,R[1720],13,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,R[1721],13,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,R[1722],13,[[["self"]],[["u32"],[R[32],["u32"]]]]],[10,"to_u64",E,R[1723],13,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,R[1724],13,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_f32",E,R[1725],13,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,R[1726],13,[[["self"]],[["f64"],[R[32],["f64"]]]]],[8,R[606],E,R[1727],N,N],[11,R[789],E,R[1728],14,[[["isize"]],[R[32]]]],[11,"from_i8",E,R[1729],14,[[["i8"]],[R[32]]]],[11,"from_i16",E,R[1730],14,[[["i16"]],[R[32]]]],[11,"from_i32",E,R[1731],14,[[["i32"]],[R[32]]]],[10,R[1450],E,R[1732],14,[[["i64"]],[R[32]]]],[11,R[790],E,R[1733],14,[[["i128"]],[R[32]]]],[11,R[625],E,R[1734],14,[[["usize"]],[R[32]]]],[11,"from_u8",E,R[1735],14,[[["u8"]],[R[32]]]],[11,"from_u16",E,R[1736],14,[[["u16"]],[R[32]]]],[11,"from_u32",E,R[1737],14,[[["u32"]],[R[32]]]],[10,R[1451],E,R[1738],14,[[["u64"]],[R[32]]]],[11,R[791],E,R[1739],14,[[["u128"]],[R[32]]]],[11,R[1453],E,R[1740],14,[[["f32"]],[R[32]]]],[11,R[1452],E,R[1741],14,[[["f64"]],[R[32]]]],[5,"cast",E,R[1744],N,[[[T]],[R[32]]]],[8,"NumCast",E,R[1742],N,N],[10,"from",E,R[1743],15,[[[T]],[R[32]]]],[8,R[607],E,R[1782],N,N],[10,"as_",E,R[1783],16,[[],[T]]],[5,"cast","num",R[1744],N,[[[T]],[R[32]]]],[0,"pow",E,E,N,N],[8,"Pow","num::pow",R[1834],N,N],[16,"Output",E,R[569],17,N],[10,"pow",E,R[1835],17,[[["rhs"]]]],[5,"pow",E,R[1745],N,[[[T],["usize"]],[T]]],[5,R[1746],E,R[1747],N,[[[T],["usize"]],[R[32]]]],[5,"pow","num",R[1745],N,[[[T],["usize"]],[T]]],[5,R[1746],E,R[1747],N,[[[T],["usize"]],[R[32]]]],[5,"clamp",E,R[1843],N,[[[T]],[T]]],[8,"Float",E,R[1784],N,N],[10,"nan",E,R[1785],18,[[],["self"]]],[10,"infinity",E,R[1786],18,[[],["self"]]],[10,R[534],E,R[1787],18,[[],["self"]]],[10,"neg_zero",E,R[535],18,[[],["self"]]],[10,R[532],E,R[536],18,[[],["self"]]],[10,R[537],E,R[538],18,[[],["self"]]],[11,"epsilon",E,R[539],18,[[],["self"]]],[10,R[533],E,R[540],18,[[],["self"]]],[10,"is_nan",E,R[1788],18,[[],["bool"]]],[10,R[541],E,R[1789],18,[[],["bool"]]],[10,R[542],E,R[1790],18,[[],["bool"]]],[10,R[543],E,R[544],18,[[],["bool"]]],[10,"classify",E,R[545],18,[[],[R[546]]]],[10,"floor",E,R[547],18,[[],["self"]]],[10,"ceil",E,R[548],18,[[],["self"]]],[10,"round",E,R[549],18,[[],["self"]]],[10,"trunc",E,R[550],18,[[],["self"]]],[10,"fract",E,R[551],18,[[],["self"]]],[10,"abs",E,R[552],18,[[],["self"]]],[10,"signum",E,R[553],18,[[],["self"]]],[10,R[554],E,R[570],18,[[],["bool"]]],[10,R[555],E,R[571],18,[[],["bool"]]],[10,"mul_add",E,R[566],18,[[],["self"]]],[10,"recip",E,R[572],18,[[],["self"]]],[10,"powi",E,R[556],18,[[["i32"]],["self"]]],[10,"powf",E,R[1791],18,[[],["self"]]],[10,"sqrt",E,R[573],18,[[],["self"]]],[10,"exp",E,R[574],18,[[],["self"]]],[10,"exp2",E,R[575],18,[[],["self"]]],[10,"ln",E,R[576],18,[[],["self"]]],[10,"log",E,R[577],18,[[],["self"]]],[10,"log2",E,R[578],18,[[],["self"]]],[10,"log10",E,R[579],18,[[],["self"]]],[11,R[557],E,R[580],18,[[],["self"]]],[11,R[558],E,R[581],18,[[],["self"]]],[10,"max",E,R[559],18,[[],["self"]]],[10,"min",E,R[560],18,[[],["self"]]],[10,"abs_sub",E,R[582],18,[[],["self"]]],[10,"cbrt",E,R[583],18,[[],["self"]]],[10,"hypot",E,R[584],18,[[],["self"]]],[10,"sin",E,R[585],18,[[],["self"]]],[10,"cos",E,R[586],18,[[],["self"]]],[10,"tan",E,R[587],18,[[],["self"]]],[10,"asin",E,R[588],18,[[],["self"]]],[10,"acos",E,R[589],18,[[],["self"]]],[10,"atan",E,R[590],18,[[],["self"]]],[10,"atan2",E,R[591],18,[[],["self"]]],[10,"sin_cos",E,R[592],18,[[]]],[10,"exp_m1",E,R[593],18,[[],["self"]]],[10,"ln_1p",E,R[594],18,[[],["self"]]],[10,"sinh",E,R[595],18,[[],["self"]]],[10,"cosh",E,R[596],18,[[],["self"]]],[10,"tanh",E,R[597],18,[[],["self"]]],[10,"asinh",E,R[598],18,[[],["self"]]],[10,"acosh",E,R[599],18,[[],["self"]]],[10,"atanh",E,R[600],18,[[],["self"]]],[10,R[561],E,R[562],18,[[]]],[0,"bigint",E,E,N,N],[3,R[1444],R[1847],E,N,N],[3,"BigUint",E,R[1748],N,N],[3,"BigInt",E,R[1749],N,N],[8,"ToBigInt",E,R[1867],N,N],[10,R[1868],E,R[1869],19,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[8,R[1874],E,R[1865],N,N],[10,R[1427],E,R[1866],20,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[4,"Sign",E,R[1851],N,N],[13,"Minus",E,E,21,N],[13,"NoSign",E,E,21,N],[13,"Plus",E,E,21,N],[0,R[779],"num",E,N,N],[3,"Complex",R[1848],R[1750],N,N],[12,"re",E,R[1751],0,N],[12,"im",E,R[1752],0,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[3,R[788],E,E,N,N],[0,R[33],"num",E,N,N],[8,"Integer",R[1849],E,N,N],[10,R[744],E,R[1753],1,[[["self"]],["self"]]],[10,R[745],E,R[1754],1,[[["self"]],["self"]]],[11,"div_ceil",E,R[1755],1,[[["self"]],["self"]]],[10,"gcd",E,R[1756],1,[[["self"]],["self"]]],[10,"lcm",E,R[1757],1,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1758],1,[[["self"]]]],[11,R[1759],E,R[1760],1,[[["self"]],[R[747]]]],[11,R[1761],E,R[1762],1,[[["self"]]]],[10,"divides",E,R[1434],1,[[["self"]],["bool"]]],[10,R[1435],E,R[1763],1,[[["self"]],["bool"]]],[10,"is_even",E,R[1764],1,[[["self"]],["bool"]]],[10,"is_odd",E,R[1765],1,[[["self"]],["bool"]]],[10,"div_rem",E,R[1766],1,[[["self"]]]],[11,R[746],E,R[1767],1,[[["self"]]]],[11,R[1768],E,R[1769],1,[[["self"]],["self"]]],[11,R[1770],E,R[1771],1,[[["self"]],["self"]]],[3,R[748],E,R[1915],N,N],[12,"gcd",E,E,22,N],[12,"x",E,E,22,N],[12,"y",E,E,22,N],[5,"div_rem",E,R[1917],N,[[[T]]]],[5,R[744],E,R[1918],N,[[[T]],[T]]],[5,R[745],E,R[1919],N,[[[T]],[T]]],[5,R[746],E,R[1920],N,[[[T]]]],[5,"div_ceil",E,R[1921],N,[[[T]],[T]]],[5,"gcd",E,R[1432],N,[[[T]],[T]]],[5,"lcm",E,R[1433],N,[[[T]],[T]]],[5,"gcd_lcm",E,R[1922],N,[[[T]]]],[3,R[749],E,R[1916],N,N],[5,"binomial",E,R[1923],N,[[[T]],[T]]],[5,R[1924],E,R[1925],N,[[],[T]]],[5,"sqrt",E,R[742],N,[[[T]],[T]]],[5,R[1861],E,R[741],N,[[["u32"],[T]],[T]]],[5,"cbrt",E,R[743],N,[[[T]],[T]]],[8,"Roots",E,R[1926],N,N],[10,R[1861],E,R[741],23,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[742],23,[[["self"]],["self"]]],[11,"cbrt",E,R[743],23,[[["self"]],["self"]]],[0,"iter","num",E,N,N],[3,"Range","num::iter",R[1929],N,N],[5,"range",E,R[1772],N,[[["a"]],["range"]]],[3,R[1190],E,R[1930],N,N],[5,R[1773],E,R[1774],N,[[["a"]],[R[1188]]]],[3,R[1935],E,R[1931],N,N],[5,R[1933],E,R[1775],N,[[["a"]],[R[1934]]]],[3,R[1191],E,R[1932],N,N],[5,R[1776],E,R[1777],N,[[["a"]],[R[1189]]]],[0,"traits","num",E,N,N],[0,"bounds",R[1781],E,N,N],[8,"Bounded","num::traits::bounds",R[1778],N,N],[10,R[532],E,R[1779],6,[[],["self"]]],[10,R[533],E,R[1780],6,[[],["self"]]],[0,"cast",R[1781],E,N,N],[8,R[605],"num::traits::cast",R[1712],N,N],[11,"to_isize",E,R[1713],13,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_i8",E,R[1714],13,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,R[1715],13,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,R[1716],13,[[["self"]],[[R[32],["i32"]],["i32"]]]],[10,"to_i64",E,R[1717],13,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,R[1718],13,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,R[794],E,R[1719],13,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_u8",E,R[1720],13,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,R[1721],13,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,R[1722],13,[[["self"]],[["u32"],[R[32],["u32"]]]]],[10,"to_u64",E,R[1723],13,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,R[1724],13,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_f32",E,R[1725],13,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,R[1726],13,[[["self"]],[["f64"],[R[32],["f64"]]]]],[8,R[606],E,R[1727],N,N],[11,R[789],E,R[1728],14,[[["isize"]],[R[32]]]],[11,"from_i8",E,R[1729],14,[[["i8"]],[R[32]]]],[11,"from_i16",E,R[1730],14,[[["i16"]],[R[32]]]],[11,"from_i32",E,R[1731],14,[[["i32"]],[R[32]]]],[10,R[1450],E,R[1732],14,[[["i64"]],[R[32]]]],[11,R[790],E,R[1733],14,[[["i128"]],[R[32]]]],[11,R[625],E,R[1734],14,[[["usize"]],[R[32]]]],[11,"from_u8",E,R[1735],14,[[["u8"]],[R[32]]]],[11,"from_u16",E,R[1736],14,[[["u16"]],[R[32]]]],[11,"from_u32",E,R[1737],14,[[["u32"]],[R[32]]]],[10,R[1451],E,R[1738],14,[[["u64"]],[R[32]]]],[11,R[791],E,R[1739],14,[[["u128"]],[R[32]]]],[11,R[1453],E,R[1740],14,[[["f32"]],[R[32]]]],[11,R[1452],E,R[1741],14,[[["f64"]],[R[32]]]],[5,"cast",E,R[1744],N,[[[T]],[R[32]]]],[8,"NumCast",E,R[1742],N,N],[10,"from",E,R[1743],15,[[[T]],[R[32]]]],[8,R[607],E,R[1782],N,N],[10,"as_",E,R[1783],16,[[],[T]]],[0,"float",R[1781],E,N,N],[8,R[608],"num::traits::float",R[1960],N,N],[10,"infinity",E,R[1961],24,[[],["self"]]],[10,R[534],E,R[1962],24,[[],["self"]]],[10,"nan",E,R[1963],24,[[],["self"]]],[10,"neg_zero",E,R[535],24,[[],["self"]]],[10,R[532],E,R[536],24,[[],["self"]]],[10,R[537],E,R[538],24,[[],["self"]]],[10,"epsilon",E,R[539],24,[[],["self"]]],[10,R[533],E,R[540],24,[[],["self"]]],[11,"is_nan",E,R[1964],24,[[],["bool"]]],[11,R[541],E,R[1965],24,[[],["bool"]]],[11,R[542],E,R[1966],24,[[],["bool"]]],[11,R[543],E,R[544],24,[[],["bool"]]],[10,"classify",E,R[545],24,[[],[R[546]]]],[11,"floor",E,R[547],24,[[],["self"]]],[11,"ceil",E,R[548],24,[[],["self"]]],[11,"round",E,R[549],24,[[],["self"]]],[11,"trunc",E,R[550],24,[[],["self"]]],[11,"fract",E,R[551],24,[[],["self"]]],[11,"abs",E,R[552],24,[[],["self"]]],[11,"signum",E,R[553],24,[[],["self"]]],[11,R[554],E,R[1967],24,[[],["bool"]]],[11,R[555],E,R[1968],24,[[],["bool"]]],[11,"min",E,R[560],24,[[],["self"]]],[11,"max",E,R[559],24,[[],["self"]]],[11,"recip",E,R[1969],24,[[],["self"]]],[11,"powi",E,R[556],24,[[["i32"]],["self"]]],[10,R[557],E,R[1970],24,[[],["self"]]],[10,R[558],E,R[1971],24,[[],["self"]]],[10,R[561],E,R[562],24,[[]]],[8,"Float",E,R[1784],N,N],[10,"nan",E,R[1785],18,[[],["self"]]],[10,"infinity",E,R[1786],18,[[],["self"]]],[10,R[534],E,R[1787],18,[[],["self"]]],[10,"neg_zero",E,R[535],18,[[],["self"]]],[10,R[532],E,R[536],18,[[],["self"]]],[10,R[537],E,R[538],18,[[],["self"]]],[11,"epsilon",E,R[539],18,[[],["self"]]],[10,R[533],E,R[540],18,[[],["self"]]],[10,"is_nan",E,R[1788],18,[[],["bool"]]],[10,R[541],E,R[1789],18,[[],["bool"]]],[10,R[542],E,R[1790],18,[[],["bool"]]],[10,R[543],E,R[544],18,[[],["bool"]]],[10,"classify",E,R[545],18,[[],[R[546]]]],[10,"floor",E,R[547],18,[[],["self"]]],[10,"ceil",E,R[548],18,[[],["self"]]],[10,"round",E,R[549],18,[[],["self"]]],[10,"trunc",E,R[550],18,[[],["self"]]],[10,"fract",E,R[551],18,[[],["self"]]],[10,"abs",E,R[552],18,[[],["self"]]],[10,"signum",E,R[553],18,[[],["self"]]],[10,R[554],E,R[570],18,[[],["bool"]]],[10,R[555],E,R[571],18,[[],["bool"]]],[10,"mul_add",E,R[566],18,[[],["self"]]],[10,"recip",E,R[572],18,[[],["self"]]],[10,"powi",E,R[556],18,[[["i32"]],["self"]]],[10,"powf",E,R[1791],18,[[],["self"]]],[10,"sqrt",E,R[573],18,[[],["self"]]],[10,"exp",E,R[574],18,[[],["self"]]],[10,"exp2",E,R[575],18,[[],["self"]]],[10,"ln",E,R[576],18,[[],["self"]]],[10,"log",E,R[577],18,[[],["self"]]],[10,"log2",E,R[578],18,[[],["self"]]],[10,"log10",E,R[579],18,[[],["self"]]],[11,R[557],E,R[580],18,[[],["self"]]],[11,R[558],E,R[581],18,[[],["self"]]],[10,"max",E,R[559],18,[[],["self"]]],[10,"min",E,R[560],18,[[],["self"]]],[10,"abs_sub",E,R[582],18,[[],["self"]]],[10,"cbrt",E,R[583],18,[[],["self"]]],[10,"hypot",E,R[584],18,[[],["self"]]],[10,"sin",E,R[585],18,[[],["self"]]],[10,"cos",E,R[586],18,[[],["self"]]],[10,"tan",E,R[587],18,[[],["self"]]],[10,"asin",E,R[588],18,[[],["self"]]],[10,"acos",E,R[589],18,[[],["self"]]],[10,"atan",E,R[590],18,[[],["self"]]],[10,"atan2",E,R[591],18,[[],["self"]]],[10,"sin_cos",E,R[592],18,[[]]],[10,"exp_m1",E,R[593],18,[[],["self"]]],[10,"ln_1p",E,R[594],18,[[],["self"]]],[10,"sinh",E,R[595],18,[[],["self"]]],[10,"cosh",E,R[596],18,[[],["self"]]],[10,"tanh",E,R[597],18,[[],["self"]]],[10,"asinh",E,R[598],18,[[],["self"]]],[10,"acosh",E,R[599],18,[[],["self"]]],[10,"atanh",E,R[600],18,[[],["self"]]],[10,R[561],E,R[562],18,[[]]],[8,R[609],E,E,N,N],[10,"E",E,R[1972],25,[[],["self"]]],[10,"FRAC_1_PI",E,R[1973],25,[[],["self"]]],[10,R[1974],E,R[1975],25,[[],["self"]]],[10,"FRAC_2_PI",E,R[1976],25,[[],["self"]]],[10,R[1977],E,R[1978],25,[[],["self"]]],[10,"FRAC_PI_2",E,R[1979],25,[[],["self"]]],[10,"FRAC_PI_3",E,R[1980],25,[[],["self"]]],[10,"FRAC_PI_4",E,R[1981],25,[[],["self"]]],[10,"FRAC_PI_6",E,R[1982],25,[[],["self"]]],[10,"FRAC_PI_8",E,R[1983],25,[[],["self"]]],[10,"LN_10",E,R[1984],25,[[],["self"]]],[10,"LN_2",E,R[1985],25,[[],["self"]]],[10,"LOG10_E",E,R[1986],25,[[],["self"]]],[10,"LOG2_E",E,R[1987],25,[[],["self"]]],[10,"PI",E,R[1988],25,[[],["self"]]],[10,"SQRT_2",E,R[1989],25,[[],["self"]]],[0,"identities",R[1781],E,N,N],[8,"Zero","num::traits::identities",R[1792],N,N],[10,"zero",E,R[1793],3,[[],["self"]]],[11,R[1873],E,R[1794],3,[[["self"]]]],[10,"is_zero",E,R[1795],3,[[["self"]],["bool"]]],[8,"One",E,R[1796],N,N],[10,"one",E,R[1797],4,[[],["self"]]],[11,"set_one",E,R[1798],4,[[["self"]]]],[11,"is_one",E,R[1799],4,[[["self"]],["bool"]]],[5,"zero",E,R[1800],N,[[],[T]]],[5,"one",E,R[1801],N,[[],[T]]],[0,"int",R[1781],E,N,N],[8,"PrimInt","num::traits::int",R[1802],N,N],[10,R[1990],E,R[1803],12,[[],["u32"]]],[10,R[1804],E,R[1805],12,[[],["u32"]]],[10,R[1806],E,R[1807],12,[[],["u32"]]],[10,R[1808],E,R[1809],12,[[],["u32"]]],[10,R[1810],E,R[563],12,[[["u32"]],["self"]]],[10,R[1811],E,R[564],12,[[["u32"]],["self"]]],[10,R[1991],E,R[563],12,[[["u32"]],["self"]]],[10,R[1992],E,R[564],12,[[["u32"]],["self"]]],[10,R[1812],E,R[563],12,[[["u32"]],["self"]]],[10,R[1813],E,R[564],12,[[["u32"]],["self"]]],[10,R[1993],E,R[1814],12,[[],["self"]]],[10,"from_be",E,R[1815],12,[[],["self"]]],[10,"from_le",E,R[1816],12,[[],["self"]]],[10,"to_be",E,R[1817],12,[[],["self"]]],[10,"to_le",E,R[1818],12,[[],["self"]]],[10,"pow",E,R[1819],12,[[["u32"]],["self"]]],[0,"ops",R[1781],E,N,N],[0,"checked",R[1828],E,N,N],[8,R[610],"num::traits::ops::checked",R[1820],N,N],[10,R[1442],E,R[1821],8,[[["self"]],[R[32]]]],[8,R[611],E,R[1822],N,N],[10,R[1441],E,R[1823],9,[[["self"]],[R[32]]]],[8,R[612],E,R[1824],N,N],[10,R[1443],E,R[1825],10,[[["self"]],[R[32]]]],[8,R[613],E,R[1826],N,N],[10,R[1440],E,R[1827],11,[[["self"]],[R[32]]]],[8,R[614],E,R[1994],N,N],[10,R[1995],E,R[1996],26,[[["self"]],[R[32]]]],[8,R[615],E,R[1997],N,N],[10,R[1998],E,R[1999],27,[[["self"]],[R[32]]]],[8,R[616],E,R[2000],N,N],[10,R[2001],E,R[2002],28,[[["self"],["u32"]],[R[32]]]],[8,R[617],E,R[2003],N,N],[10,R[2004],E,R[2005],29,[[["self"],["u32"]],[R[32]]]],[0,"inv",R[1828],E,N,N],[8,"Inv","num::traits::ops::inv",R[2006],N,N],[16,"Output",E,R[569],30,N],[10,"inv",E,R[2007],30,[[]]],[0,"mul_add",R[1828],E,N,N],[8,"MulAdd","num::traits::ops::mul_add",R[566],N,N],[16,"Output",E,R[2008],31,N],[10,"mul_add",E,R[567],31,[[["a"],["b"]]]],[8,R[618],E,R[2009],N,N],[10,R[787],E,R[567],32,[[["self"],["a"],["b"]]]],[0,"saturating",R[1828],E,N,N],[8,R[619],"num::traits::ops::saturating",R[1829],N,N],[10,R[1830],E,R[1831],7,[[],["self"]]],[10,R[1832],E,R[1833],7,[[],["self"]]],[0,"wrapping",R[1828],E,N,N],[8,R[620],"num::traits::ops::wrapping",R[2010],N,N],[10,R[2011],E,R[2012],33,[[["self"]],["self"]]],[8,R[621],E,R[2013],N,N],[10,R[2014],E,R[2015],34,[[["self"]],["self"]]],[8,R[622],E,R[2016],N,N],[10,R[2017],E,R[2018],35,[[["self"]],["self"]]],[8,R[623],E,R[2019],N,N],[10,R[2020],E,R[2021],36,[[["self"],["u32"]],["self"]]],[8,R[624],E,R[2022],N,N],[10,R[2023],E,R[2024],37,[[["self"],["u32"]],["self"]]],[0,"pow",R[1781],E,N,N],[8,"Pow","num::traits::pow",R[1834],N,N],[16,"Output",E,R[569],17,N],[10,"pow",E,R[1835],17,[[["rhs"]]]],[5,"pow",E,R[1745],N,[[[T],["usize"]],[T]]],[5,R[1746],E,R[1747],N,[[[T],["usize"]],[R[32]]]],[0,"real",R[1781],E,N,N],[8,"Real","num::traits::real",R[2025],N,N],[10,R[532],E,R[536],38,[[],["self"]]],[10,R[537],E,R[538],38,[[],["self"]]],[10,"epsilon",E,R[539],38,[[],["self"]]],[10,R[533],E,R[540],38,[[],["self"]]],[10,"floor",E,R[547],38,[[],["self"]]],[10,"ceil",E,R[548],38,[[],["self"]]],[10,"round",E,R[549],38,[[],["self"]]],[10,"trunc",E,R[550],38,[[],["self"]]],[10,"fract",E,R[551],38,[[],["self"]]],[10,"abs",E,R[552],38,[[],["self"]]],[10,"signum",E,R[553],38,[[],["self"]]],[10,R[554],E,R[570],38,[[],["bool"]]],[10,R[555],E,R[571],38,[[],["bool"]]],[10,"mul_add",E,R[566],38,[[],["self"]]],[10,"recip",E,R[572],38,[[],["self"]]],[10,"powi",E,R[556],38,[[["i32"]],["self"]]],[10,"powf",E,R[2026],38,[[],["self"]]],[10,"sqrt",E,R[573],38,[[],["self"]]],[10,"exp",E,R[574],38,[[],["self"]]],[10,"exp2",E,R[575],38,[[],["self"]]],[10,"ln",E,R[576],38,[[],["self"]]],[10,"log",E,R[577],38,[[],["self"]]],[10,"log2",E,R[578],38,[[],["self"]]],[10,"log10",E,R[579],38,[[],["self"]]],[10,R[557],E,R[580],38,[[],["self"]]],[10,R[558],E,R[581],38,[[],["self"]]],[10,"max",E,R[559],38,[[],["self"]]],[10,"min",E,R[560],38,[[],["self"]]],[10,"abs_sub",E,R[582],38,[[],["self"]]],[10,"cbrt",E,R[583],38,[[],["self"]]],[10,"hypot",E,R[584],38,[[],["self"]]],[10,"sin",E,R[585],38,[[],["self"]]],[10,"cos",E,R[586],38,[[],["self"]]],[10,"tan",E,R[587],38,[[],["self"]]],[10,"asin",E,R[588],38,[[],["self"]]],[10,"acos",E,R[589],38,[[],["self"]]],[10,"atan",E,R[590],38,[[],["self"]]],[10,"atan2",E,R[591],38,[[],["self"]]],[10,"sin_cos",E,R[592],38,[[]]],[10,"exp_m1",E,R[593],38,[[],["self"]]],[10,"ln_1p",E,R[594],38,[[],["self"]]],[10,"sinh",E,R[595],38,[[],["self"]]],[10,"cosh",E,R[596],38,[[],["self"]]],[10,"tanh",E,R[597],38,[[],["self"]]],[10,"asinh",E,R[598],38,[[],["self"]]],[10,"acosh",E,R[599],38,[[],["self"]]],[10,"atanh",E,R[600],38,[[],["self"]]],[0,"sign",R[1781],E,N,N],[8,"Signed","num::traits::sign",R[1836],N,N],[10,"abs",E,R[601],5,[[["self"]],["self"]]],[10,"abs_sub",E,R[582],5,[[["self"]],["self"]]],[10,"signum",E,R[602],5,[[["self"]],["self"]]],[10,R[1445],E,R[1837],5,[[["self"]],["bool"]]],[10,R[1446],E,R[1838],5,[[["self"]],["bool"]]],[5,"abs",E,R[601],N,[[[T]],[T]]],[5,"abs_sub",E,R[582],N,[[[T]],[T]]],[5,"signum",E,R[602],N,[[[T]],[T]]],[8,"Unsigned",E,R[1839],N,N],[8,"Num",R[1781],R[1840],N,N],[16,R[1841],E,E,2,N],[10,R[793],E,R[1842],2,[[["u32"],["str"]],[R[2]]]],[8,"NumOps",E,R[2027],N,N],[8,"NumRef",E,R[2028],N,N],[8,"RefNum",E,R[2029],N,N],[8,R[2030],E,R[2031],N,N],[8,"NumAssign",E,R[2032],N,N],[8,R[2033],E,R[2034],N,N],[4,R[604],E,E,N,N],[13,"Empty",E,E,39,N],[13,"Invalid",E,E,39,N],[3,R[603],E,E,N,N],[12,"kind",E,E,40,N],[5,"clamp",E,R[1843],N,[[[T]],[T]]],[0,"rational","num",E,N,N],[3,"Ratio",R[1850],R[1936],N,N],[6,"Rational",E,R[1844],N,N],[6,"Rational32",E,R[1937],N,N],[6,"Rational64",E,R[1938],N,N],[6,R[1845],E,R[1846],N,N],[3,R[1454],E,E,N,N],[11,R[7],R[1847],E,41,[[[U]],[R[2]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,R[37],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"],[T]]]],[11,R[95],E,E,41,[[["self"]],[R[63]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[95],E,E,42,[[["self"]],[R[63]]]],[11,R[7],R[1848],E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[7],R[1847],E,43,[[[U]],[R[2]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,R[37],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"],[T]]]],[11,R[95],E,E,43,[[["self"]],[R[63]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,R[37],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"],[T]]]],[11,R[7],R[1848],E,44,[[[U]],[R[2]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,R[95],E,E,44,[[["self"]],[R[63]]]],[11,R[7],R[1849],E,22,[[[U]],[R[2]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,R[37],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"],[T]]]],[11,R[30],E,E,45,[[],["i"]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,R[30],"num::iter",E,46,[[],["i"]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,R[37],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"],[T]]]],[11,R[30],E,E,47,[[],["i"]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,R[37],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"],[T]]]],[11,R[30],E,E,48,[[],["i"]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,R[37],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"],[T]]]],[11,R[30],E,E,49,[[],["i"]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,R[37],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"],[T]]]],[11,R[7],R[1781],E,39,[[[U]],[R[2]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,R[95],E,E,40,[[["self"]],[R[63]]]],[11,R[7],R[1850],E,50,[[[U]],[R[2]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,R[37],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"],[T]]]],[11,R[95],E,E,50,[[["self"]],[R[63]]]],[11,R[7],E,E,51,[[[U]],[R[2]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[8],E,E,51,[[],[R[2]]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[34]]]],[11,R[37],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"],[T]]]],[11,R[95],E,E,51,[[["self"]],[R[63]]]],[11,R[1440],R[1847],E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1440],E,E,42,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,"cmp",E,E,42,[[["self"],["biguint"]],[R[31]]]],[11,"cmp",E,E,41,[[["self"],["bigint"]],[R[31]]]],[11,"cmp",E,E,21,[[["self"],["sign"]],[R[31]]]],[11,R[782],E,E,42,[[["self"],["u16"]]]],[11,R[782],E,E,41,[[["self"],["i128"]]]],[11,R[782],E,E,41,[[["self"],["usize"]]]],[11,R[782],E,E,42,[[["self"],["biguint"]]]],[11,R[782],E,E,41,[[["self"],["i8"]]]],[11,R[782],E,E,41,[[["self"],["bigint"]]]],[11,R[782],E,E,41,[[["self"],["isize"]]]],[11,R[782],E,E,41,[[["self"],["i64"]]]],[11,R[782],E,E,41,[[["self"],["bigint"]]]],[11,R[782],E,E,42,[[["self"],["u64"]]]],[11,R[782],E,E,41,[[["self"],["i16"]]]],[11,R[782],E,E,42,[[["self"],["usize"]]]],[11,R[782],E,E,42,[[["self"],["u128"]]]],[11,R[782],E,E,41,[[["self"],["u64"]]]],[11,R[782],E,E,41,[[["self"],["u128"]]]],[11,R[782],E,E,42,[[["self"],["u32"]]]],[11,R[782],E,E,42,[[["self"],["biguint"]]]],[11,R[782],E,E,41,[[["self"],["u32"]]]],[11,R[782],E,E,41,[[["self"],["u16"]]]],[11,R[782],E,E,42,[[["self"],["u8"]]]],[11,R[782],E,E,41,[[["self"],["i32"]]]],[11,R[782],E,E,41,[[["self"],["u8"]]]],[11,"eq",E,E,42,[[["self"],["biguint"]],["bool"]]],[11,"eq",E,E,43,[[["self"],[R[1428]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[1428]]],["bool"]]],[11,"eq",E,E,21,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,41,[[["self"],["bigint"]],["bool"]]],[11,"not",E,E,41,[[],["bigint"]]],[11,"product",E,E,42,[[["i"]],["biguint"]]],[11,"product",E,E,41,[[["i"]],["bigint"]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,41,[[["bigint"]],["bigint"]]],[11,R[793],E,R[1439],41,[[["u32"],["str"]],[["bigint"],[R[2],["bigint",R[1428]]],[R[1428]]]]],[11,R[793],E,R[1406],42,[[["u32"],["str"]],[[R[1428]],[R[2],["biguint",R[1428]]],["biguint"]]]],[11,R[1429],E,E,41,[[["self"],["bigint"]]]],[11,R[1429],E,E,42,[[["self"],["biguint"]]]],[11,R[1429],E,E,42,[[["self"],["biguint"]]]],[11,R[1429],E,E,41,[[["self"],["bigint"]]]],[11,"zero",E,E,42,[[],["biguint"]]],[11,R[1873],E,E,42,[[["self"]]]],[11,"is_zero",E,E,42,[[["self"]],["bool"]]],[11,"zero",E,E,41,[[],["bigint"]]],[11,R[1873],E,E,41,[[["self"]]]],[11,"is_zero",E,E,41,[[["self"]],["bool"]]],[11,R[1861],E,E,42,[[["self"],["u32"]],["biguint"]]],[11,"sqrt",E,E,42,[[["self"]],["biguint"]]],[11,"cbrt",E,E,42,[[["self"]],["biguint"]]],[11,R[1861],E,E,41,[[["self"],["u32"]],["bigint"]]],[11,"sqrt",E,E,41,[[["self"]],["bigint"]]],[11,"cbrt",E,E,41,[[["self"]],["bigint"]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[1427],E,E,42,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1427],E,E,41,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,"div_rem",E,E,42,[[["self"],["biguint"]]]],[11,R[744],E,E,42,[[["self"],["biguint"]],["biguint"]]],[11,R[745],E,E,42,[[["self"],["biguint"]],["biguint"]]],[11,R[746],E,E,42,[[["self"],["biguint"]]]],[11,"gcd",E,R[1432],42,[[["self"],["biguint"]],["biguint"]]],[11,"lcm",E,R[1433],42,[[["self"],["biguint"]],["biguint"]]],[11,"divides",E,R[1434],42,[[["self"],["biguint"]],["bool"]]],[11,R[1435],E,R[1436],42,[[["self"],["biguint"]],["bool"]]],[11,"is_even",E,R[1437],42,[[["self"]],["bool"]]],[11,"is_odd",E,R[1438],42,[[["self"]],["bool"]]],[11,"div_rem",E,E,41,[[["self"],["bigint"]]]],[11,R[744],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[745],E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,R[746],E,E,41,[[["self"],["bigint"]]]],[11,"gcd",E,R[1432],41,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1433],41,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1434],41,[[["self"],["bigint"]],["bool"]]],[11,R[1435],E,R[1436],41,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1437],41,[[["self"]],["bool"]]],[11,"is_odd",E,R[1438],41,[[["self"]],["bool"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,42,[[["u128"]],["biguint"]]],[11,"mul",E,E,42,[[["u8"]],["biguint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,42,[[["u64"]],["biguint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,41,[[["u128"]],["bigint"]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,42,[[["u32"]],["biguint"]]],[11,"mul",E,E,42,[[["u8"]],["biguint"]]],[11,"mul",E,E,42,[[["u32"]],["biguint"]]],[11,"mul",E,E,42,[[["u16"]],["biguint"]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,41,[[["i128"]],["bigint"]]],[11,"mul",E,E,41,[[["i16"]],["bigint"]]],[11,"mul",E,E,41,[[["u32"]],["bigint"]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,42,[[["u128"]],["biguint"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,42,[[["u64"]],["biguint"]]],[11,"mul",E,E,42,[[["usize"]],["biguint"]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,"mul",E,E,21,[[["sign"]],["sign"]]],[11,"mul",E,E,42,[[["biguint"]],["biguint"]]],[11,"mul",E,E,42,[[["biguint"]],["biguint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"mul",E,E,41,[[["usize"]],["bigint"]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,41,[[["i32"]],["bigint"]]],[11,"mul",E,E,41,[[["bigint"]],["bigint"]]],[11,"mul",E,E,41,[[["i8"]],["bigint"]]],[11,"mul",E,E,41,[[["i64"]],["bigint"]]],[11,"mul",E,E,42,[[["u16"]],["biguint"]]],[11,"mul",E,E,41,[[["u64"]],["bigint"]]],[11,"mul",E,E,41,[[["u16"]],["bigint"]]],[11,"mul",E,E,41,[[["isize"]],["bigint"]]],[11,"mul",E,E,41,[[["u8"]],["bigint"]]],[11,"mul",E,E,42,[[["usize"]],["biguint"]]],[11,"from",E,E,41,[[["isize"]],["bigint"]]],[11,"from",E,E,42,[[["u16"]],["biguint"]]],[11,"from",E,E,42,[[["usize"]],["biguint"]]],[11,"from",E,E,41,[[["u128"]],["bigint"]]],[11,"from",E,E,42,[[["u128"]],["biguint"]]],[11,"from",E,E,41,[[["usize"]],["bigint"]]],[11,"from",E,E,41,[[["i64"]],["bigint"]]],[11,"from",E,E,41,[[["biguint"]],["bigint"]]],[11,"from",E,E,41,[[["u8"]],["bigint"]]],[11,"from",E,E,42,[[["u64"]],["biguint"]]],[11,"from",E,E,41,[[["i16"]],["bigint"]]],[11,"from",E,E,41,[[["i128"]],["bigint"]]],[11,"from",E,E,41,[[["u16"]],["bigint"]]],[11,"from",E,E,41,[[["u32"]],["bigint"]]],[11,"from",E,E,41,[[["i8"]],["bigint"]]],[11,"from",E,E,42,[[["u32"]],["biguint"]]],[11,"from",E,E,41,[[["i32"]],["bigint"]]],[11,"from",E,E,41,[[["u64"]],["bigint"]]],[11,"from",E,E,42,[[["u8"]],["biguint"]]],[11,R[781],E,E,41,[[["self"],["usize"]]]],[11,R[781],E,E,42,[[["self"],["biguint"]]]],[11,R[781],E,E,42,[[["self"],["u32"]]]],[11,R[781],E,E,42,[[["self"],["u8"]]]],[11,R[781],E,E,41,[[["self"],["bigint"]]]],[11,R[781],E,E,41,[[["self"],["isize"]]]],[11,R[781],E,E,41,[[["self"],["i32"]]]],[11,R[781],E,E,42,[[["self"],["usize"]]]],[11,R[781],E,E,42,[[["self"],["u64"]]]],[11,R[781],E,E,42,[[["self"],["biguint"]]]],[11,R[781],E,E,41,[[["self"],["i16"]]]],[11,R[781],E,E,41,[[["self"],["u32"]]]],[11,R[781],E,E,41,[[["self"],["u8"]]]],[11,R[781],E,E,42,[[["self"],["u16"]]]],[11,R[781],E,E,41,[[["self"],["u64"]]]],[11,R[781],E,E,41,[[["self"],["bigint"]]]],[11,R[781],E,E,41,[[["self"],["u16"]]]],[11,R[781],E,E,41,[[["self"],["i64"]]]],[11,R[781],E,E,42,[[["self"],["u128"]]]],[11,R[781],E,E,41,[[["self"],["i128"]]]],[11,R[781],E,E,41,[[["self"],["u128"]]]],[11,R[781],E,E,41,[[["self"],["i8"]]]],[11,R[1443],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1443],E,E,42,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,"neg",E,E,42,[[],["biguint"]]],[11,"neg",E,R[1870],21,[[],["sign"]]],[11,"neg",E,E,41,[[],["bigint"]]],[11,R[1441],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1441],E,E,42,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[784],E,E,41,[[["self"],["u8"]]]],[11,R[784],E,E,41,[[["self"],["u32"]]]],[11,R[784],E,E,41,[[["self"],["isize"]]]],[11,R[784],E,E,41,[[["self"],["i128"]]]],[11,R[784],E,E,42,[[["self"],["u16"]]]],[11,R[784],E,E,41,[[["self"],["bigint"]]]],[11,R[784],E,E,41,[[["self"],["i8"]]]],[11,R[784],E,E,41,[[["self"],["u16"]]]],[11,R[784],E,E,42,[[["self"],["biguint"]]]],[11,R[784],E,E,42,[[["self"],["biguint"]]]],[11,R[784],E,E,42,[[["self"],["usize"]]]],[11,R[784],E,E,41,[[["self"],["u64"]]]],[11,R[784],E,E,41,[[["self"],["i32"]]]],[11,R[784],E,E,42,[[["self"],["u64"]]]],[11,R[784],E,E,41,[[["self"],["i16"]]]],[11,R[784],E,E,41,[[["self"],["usize"]]]],[11,R[784],E,E,42,[[["self"],["u32"]]]],[11,R[784],E,E,42,[[["self"],["u8"]]]],[11,R[784],E,E,41,[[["self"],["u128"]]]],[11,R[784],E,E,42,[[["self"],["u128"]]]],[11,R[784],E,E,41,[[["self"],["i64"]]]],[11,R[784],E,E,41,[[["self"],["bigint"]]]],[11,R[783],E,E,41,[[["self"],["u128"]]]],[11,R[783],E,E,41,[[["self"],["bigint"]]]],[11,R[783],E,E,41,[[["self"],["i64"]]]],[11,R[783],E,E,41,[[["self"],["u16"]]]],[11,R[783],E,E,41,[[["self"],["u8"]]]],[11,R[783],E,E,41,[[["self"],["u64"]]]],[11,R[783],E,E,42,[[["self"],["u32"]]]],[11,R[783],E,E,42,[[["self"],["biguint"]]]],[11,R[783],E,E,42,[[["self"],["usize"]]]],[11,R[783],E,E,41,[[["self"],["bigint"]]]],[11,R[783],E,E,41,[[["self"],["usize"]]]],[11,R[783],E,E,41,[[["self"],["u32"]]]],[11,R[783],E,E,42,[[["self"],["biguint"]]]],[11,R[783],E,E,42,[[["self"],["u8"]]]],[11,R[783],E,E,41,[[["self"],["i8"]]]],[11,R[783],E,E,42,[[["self"],["u128"]]]],[11,R[783],E,E,41,[[["self"],["i32"]]]],[11,R[783],E,E,42,[[["self"],["u16"]]]],[11,R[783],E,E,41,[[["self"],["isize"]]]],[11,R[783],E,E,41,[[["self"],["i128"]]]],[11,R[783],E,E,42,[[["self"],["u64"]]]],[11,R[783],E,E,41,[[["self"],["i16"]]]],[11,"bitand",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,42,[[["biguint"]],["biguint"]]],[11,"div",E,E,42,[[["usize"]],["biguint"]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,42,[[["u8"]],["biguint"]]],[11,"div",E,E,42,[[["usize"]],["biguint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,42,[[["u64"]],["biguint"]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,41,[[["u128"]],["bigint"]]],[11,"div",E,E,41,[[["i32"]],["bigint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,42,[[["u8"]],["biguint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,42,[[["u64"]],["biguint"]]],[11,"div",E,E,42,[[["u128"]],["biguint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,41,[[["u8"]],["bigint"]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,"div",E,E,41,[[["i64"]],["bigint"]]],[11,"div",E,E,42,[[["biguint"]],["biguint"]]],[11,"div",E,E,42,[[["u128"]],["biguint"]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,"div",E,E,42,[[["u16"]],["biguint"]]],[11,"div",E,E,42,[[["u32"]],["biguint"]]],[11,"div",E,E,41,[[["usize"]],["bigint"]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,41,[[["bigint"]],["bigint"]]],[11,"div",E,E,42,[[["biguint"]],["biguint"]]],[11,"div",E,E,41,[[["i8"]],["bigint"]]],[11,"div",E,E,42,[[["u16"]],["biguint"]]],[11,"div",E,E,41,[[["u32"]],["bigint"]]],[11,"div",E,E,41,[[["u64"]],["bigint"]]],[11,"div",E,E,41,[[["i128"]],["bigint"]]],[11,"div",E,E,41,[[["i16"]],["bigint"]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,41,[[["isize"]],["bigint"]]],[11,"div",E,E,42,[[["u32"]],["biguint"]]],[11,"div",E,E,41,[[["u16"]],["bigint"]]],[11,R[99],E,E,42,[[],["biguint"]]],[11,R[99],E,E,41,[[],["bigint"]]],[11,"to_i64",E,E,42,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,E,42,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_u64",E,E,42,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,E,42,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_f32",E,E,42,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,42,[[["self"]],[["f64"],[R[32],["f64"]]]]],[11,"to_i64",E,E,41,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,E,41,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_u64",E,E,41,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,E,41,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_f32",E,E,41,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,41,[[["self"]],[["f64"],[R[32],["f64"]]]]],[11,R[1431],E,E,41,[[["self"],["bigint"]]]],[11,R[1431],E,E,42,[[["self"],["biguint"]]]],[11,R[1431],E,E,42,[[["self"],["biguint"]]]],[11,R[1431],E,E,41,[[["self"],["bigint"]]]],[11,"one",E,E,41,[[],["bigint"]]],[11,"set_one",E,E,41,[[["self"]]]],[11,"is_one",E,E,41,[[["self"]],["bool"]]],[11,"one",E,E,42,[[],["biguint"]]],[11,"set_one",E,E,42,[[["self"]]]],[11,"is_one",E,E,42,[[["self"]],["bool"]]],[11,R[1430],E,E,42,[[["self"],["biguint"]]]],[11,R[1430],E,E,42,[[["self"],["biguint"]]]],[11,R[1430],E,E,41,[[["self"],["bigint"]]]],[11,R[1430],E,E,41,[[["self"],["bigint"]]]],[11,"bitor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,42,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,41,[[["bigint"]],["bigint"]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[117],E,E,41,[[["self"],["bigint"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,21,[[["self"],["sign"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,42,[[["self"],["biguint"]],[[R[31]],[R[32],[R[31]]]]]],[11,"shl",E,E,42,[[["usize"]],["biguint"]]],[11,"shl",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],["biguint"]]],[11,"rem",E,E,42,[[["u8"]],["biguint"]]],[11,"rem",E,E,42,[[["u128"]],["biguint"]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,42,[[["u16"]],["biguint"]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,42,[[["u64"]],["biguint"]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,42,[[["biguint"]],["biguint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,42,[[["usize"]],["biguint"]]],[11,"rem",E,E,42,[[["u128"]],["biguint"]]],[11,"rem",E,E,41,[[["u8"]],["bigint"]]],[11,"rem",E,E,41,[[["isize"]],["bigint"]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,41,[[["i128"]],["bigint"]]],[11,"rem",E,E,42,[[["u32"]],["biguint"]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["u16"]],["bigint"]]],[11,"rem",E,E,42,[[["u32"]],["biguint"]]],[11,"rem",E,E,41,[[["u64"]],["bigint"]]],[11,"rem",E,E,41,[[["u32"]],["bigint"]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,42,[[["u16"]],["biguint"]]],[11,"rem",E,E,41,[[["i64"]],["bigint"]]],[11,"rem",E,E,41,[[["i32"]],["bigint"]]],[11,"rem",E,E,41,[[["u128"]],["bigint"]]],[11,"rem",E,E,42,[[["usize"]],["biguint"]]],[11,"rem",E,E,41,[[["i8"]],["bigint"]]],[11,"rem",E,E,42,[[["biguint"]],["biguint"]]],[11,"rem",E,E,41,[[["i16"]],["bigint"]]],[11,"rem",E,E,41,[[["bigint"]],["bigint"]]],[11,"rem",E,E,41,[[["usize"]],["bigint"]]],[11,"rem",E,E,42,[[["u8"]],["biguint"]]],[11,R[785],E,E,41,[[["self"],["u8"]]]],[11,R[785],E,E,41,[[["self"],["u16"]]]],[11,R[785],E,E,41,[[["self"],["u128"]]]],[11,R[785],E,E,41,[[["self"],["i32"]]]],[11,R[785],E,E,42,[[["self"],["u64"]]]],[11,R[785],E,E,42,[[["self"],["u16"]]]],[11,R[785],E,E,42,[[["self"],["u128"]]]],[11,R[785],E,E,42,[[["self"],["biguint"]]]],[11,R[785],E,E,41,[[["self"],["i8"]]]],[11,R[785],E,E,41,[[["self"],["i128"]]]],[11,R[785],E,E,42,[[["self"],["biguint"]]]],[11,R[785],E,E,41,[[["self"],["u32"]]]],[11,R[785],E,E,41,[[["self"],["u64"]]]],[11,R[785],E,E,41,[[["self"],["i16"]]]],[11,R[785],E,E,41,[[["self"],["usize"]]]],[11,R[785],E,E,41,[[["self"],["bigint"]]]],[11,R[785],E,E,42,[[["self"],["u8"]]]],[11,R[785],E,E,42,[[["self"],["usize"]]]],[11,R[785],E,E,41,[[["self"],["bigint"]]]],[11,R[785],E,E,41,[[["self"],["i64"]]]],[11,R[785],E,E,42,[[["self"],["u32"]]]],[11,R[785],E,E,41,[[["self"],["isize"]]]],[11,R[1872],E,E,41,[[["self"],["usize"]]]],[11,R[1872],E,E,42,[[["self"],["usize"]]]],[11,"hash",E,E,42,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"abs",E,E,41,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,41,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,41,[[["self"]],["bigint"]]],[11,R[1445],E,E,41,[[["self"]],["bool"]]],[11,R[1446],E,E,41,[[["self"]],["bool"]]],[11,"clone",E,E,41,[[["self"]],["bigint"]]],[11,"clone",E,E,42,[[["self"]],["biguint"]]],[11,"clone",E,E,21,[[["self"]],["sign"]]],[11,"clone",E,E,43,[[["self"]],[R[1428]]]],[11,"sum",E,E,42,[[["i"]],["biguint"]]],[11,"sum",E,E,41,[[["i"]],["bigint"]]],[11,R[1868],E,E,41,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1868],E,E,42,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[11,"sub",E,E,42,[[["u32"]],["biguint"]]],[11,"sub",E,E,42,[[["u8"]],["biguint"]]],[11,"sub",E,E,42,[[["u64"]],["biguint"]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,42,[[["u128"]],["biguint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,42,[[["u128"]],["biguint"]]],[11,"sub",E,E,42,[[["u64"]],["biguint"]]],[11,"sub",E,E,41,[[["u8"]],["bigint"]]],[11,"sub",E,E,41,[[["u32"]],["bigint"]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,42,[[["u32"]],["biguint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,41,[[["isize"]],["bigint"]]],[11,"sub",E,E,42,[[["usize"]],["biguint"]]],[11,"sub",E,E,42,[[["u16"]],["biguint"]]],[11,"sub",E,E,42,[[["u8"]],["biguint"]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,42,[[["u16"]],["biguint"]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,41,[[["bigint"]],["bigint"]]],[11,"sub",E,E,41,[[["i128"]],["bigint"]]],[11,"sub",E,E,41,[[["u16"]],["bigint"]]],[11,"sub",E,E,41,[[["u128"]],["bigint"]]],[11,"sub",E,E,41,[[["i16"]],["bigint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"sub",E,E,41,[[["u64"]],["bigint"]]],[11,"sub",E,E,41,[[["usize"]],["bigint"]]],[11,"sub",E,E,41,[[["i32"]],["bigint"]]],[11,"sub",E,E,42,[[["usize"]],["biguint"]]],[11,"sub",E,E,41,[[["i8"]],["bigint"]]],[11,"sub",E,E,42,[[["biguint"]],["biguint"]]],[11,"sub",E,E,41,[[["i64"]],["bigint"]]],[11,"sub",E,E,42,[[["biguint"]],["biguint"]]],[11,R[1871],E,E,42,[[["self"],["usize"]]]],[11,R[1871],E,E,41,[[["self"],["usize"]]]],[11,R[712],E,E,42,[[["str"]],[[R[1428]],[R[2],["biguint",R[1428]]],["biguint"]]]],[11,R[712],E,E,41,[[["str"]],[["bigint"],[R[2],["bigint",R[1428]]],[R[1428]]]]],[11,R[1442],E,E,42,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1442],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1450],E,E,42,[[["i64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[790],E,E,42,[[["i128"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1451],E,E,42,[[["u64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[791],E,E,42,[[["u128"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1452],E,E,42,[[["f64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1450],E,E,41,[[["i64"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[790],E,E,41,[[["i128"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1451],E,E,41,[[["u64"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[791],E,E,41,[[["u128"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1452],E,E,41,[[["f64"]],[["bigint"],[R[32],["bigint"]]]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,42,[[["biguint"]],["biguint"]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],["biguint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,42,[[["u8"]],["biguint"]]],[11,"add",E,E,41,[[["u8"]],["bigint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,42,[[["biguint"]],["biguint"]]],[11,"add",E,E,41,[[["i64"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],["biguint"]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"add",E,E,41,[[["bigint"]],["bigint"]]],[11,"add",E,E,41,[[["u128"]],["bigint"]]],[11,"add",E,E,42,[[["usize"]],["biguint"]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,41,[[["i128"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],["biguint"]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,41,[[["i16"]],["bigint"]]],[11,"add",E,E,41,[[["isize"]],["bigint"]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,42,[[["u128"]],["biguint"]]],[11,"add",E,E,41,[[["i32"]],["bigint"]]],[11,"add",E,E,42,[[["u8"]],["biguint"]]],[11,"add",E,E,42,[[["u16"]],["biguint"]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,42,[[["u128"]],["biguint"]]],[11,"add",E,E,41,[[["i8"]],["bigint"]]],[11,"add",E,E,41,[[["usize"]],["bigint"]]],[11,"add",E,E,41,[[["u64"]],["bigint"]]],[11,"add",E,E,42,[[["u32"]],["biguint"]]],[11,"add",E,E,41,[[["u16"]],["bigint"]]],[11,"add",E,E,42,[[["u64"]],["biguint"]]],[11,"add",E,E,41,[[["u32"]],["bigint"]]],[11,"add",E,E,42,[[["u16"]],["biguint"]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[409],E,E,43,[[["self"]],["str"]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"shr",E,E,42,[[["usize"]],["biguint"]]],[11,"shr",E,E,41,[[["usize"]],["bigint"]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"clone",R[1849],E,22,[[["self"]],[R[747]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"eq",E,E,22,[[["self"],[R[747]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[747]]],["bool"]]],[11,"next",E,E,45,[[["self"]],[R[32]]]],[11,"fmt",R[1781],E,40,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,39,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"one",R[1848],E,0,[[],[R[779]]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"product",E,E,0,[[["i"]],[R[779]]]],[11,"product",E,E,0,[[["i"]],[R[779]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[409],E,E,44,[[["self"]],["str"]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[779]]]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[779]]]]],[11,R[625],E,E,0,[[["usize"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[789],E,E,0,[[["isize"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_u8",E,E,0,[[["u8"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_u16",E,E,0,[[["u16"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_u32",E,E,0,[[["u32"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[1451],E,E,0,[[["u64"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_i8",E,E,0,[[["i8"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_i16",E,E,0,[[["i16"]],[[R[32],[R[779]]],[R[779]]]]],[11,"from_i32",E,E,0,[[["i32"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[1450],E,E,0,[[["i64"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[791],E,E,0,[[["u128"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[790],E,E,0,[[["i128"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[1453],E,E,0,[[["f32"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[1452],E,E,0,[[["f64"]],[[R[32],[R[779]]],[R[779]]]]],[11,R[787],E,E,0,[[["self"],[R[779]]]]],[11,R[787],E,E,0,[[["self"],[R[779]]]]],[11,R[783],E,E,0,[[["self"],[R[779]]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,R[783],E,E,0,[[["self"],[R[779]]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,"eq",E,E,44,[[["self"],[R[780]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[780]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[779]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[779]]],["bool"]]],[11,"zero",E,E,0,[[],[R[779]]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1873],E,E,0,[[["self"]]]],[11,R[784],E,E,0,[[["self"],[R[779]]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"],[R[779]]]]],[11,"neg",E,E,0,[[]]],[11,R[781],E,E,0,[[["self"],[R[779]]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[781],E,E,0,[[["self"],[R[779]]]]],[11,"inv",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[779]]]]],[11,"sub",E,E,0,[[[R[779]]]]],[11,"sub",E,E,0,[[[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[99],E,E,0,[[],[R[779]]]],[11,"add",E,E,0,[[[R[779]]]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[R[779]]]]],[11,"add",E,E,0,[[[T]]]],[11,"pow",E,E,0,[[[R[779]]]]],[11,"pow",E,E,0,[[[R[779]]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"],[R[779]]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"],[R[779]]]]],[11,"rem",E,E,0,[[[R[779]]]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[779]]]]],[11,"rem",E,E,0,[[[T]]]],[11,"from",E,E,0,[[[U]],[[R[32],[R[779]]],[R[779]]]]],[11,R[712],E,R[786],0,[[["str"]],[[R[2],[R[779]]],[R[779]]]]],[11,R[793],E,R[786],0,[[["u32"],["str"]],[[R[779]],[R[2],[R[779]]]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[779]]]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[779]]]]],[11,R[794],E,E,0,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_isize",E,E,0,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[["u32"],[R[32],["u32"]]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[32],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_u128",E,E,0,[[["self"]],[["u128"],[R[32],["u128"]]]]],[11,"to_i128",E,E,0,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[["f64"],[R[32],["f64"]]]]],[11,"from",E,E,0,[[[T]],[R[779]]]],[11,"from",E,E,0,[[[T]],[R[779]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"sum",E,E,0,[[["i"]],[R[779]]]],[11,"sum",E,E,0,[[["i"]],[R[779]]]],[11,"mul_add",E,E,0,[[[R[779]]],[R[779]]]],[11,"clone",E,E,0,[[["self"]],[R[779]]]],[11,R[782],E,E,0,[[["self"],[R[779]]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,R[782],E,E,0,[[["self"],[R[779]]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[119],"num::iter",E,47,[[["self"]],[R[32]]]],[11,R[119],E,E,46,[[["self"]],[R[32]]]],[11,"next",E,E,48,[[["self"]],[R[32]]]],[11,"next",E,E,47,[[["self"]],[R[32]]]],[11,R[118],E,E,47,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[32]]]],[11,R[118],E,E,46,[[["self"]]]],[11,"next",E,E,49,[[["self"]],[R[32]]]],[11,"clone",E,E,48,[[["self"]],[R[1934]]]],[11,"clone",E,E,46,[[["self"]],["range"]]],[11,"clone",E,E,49,[[["self"]],[R[1189]]]],[11,"clone",E,E,47,[[["self"]],[R[1188]]]],[11,R[117],R[1850],E,50,[[["self"],["ratio"]],[[R[31]],[R[32],[R[31]]]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,R[1957],50,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["isize"]]]]],[11,R[1450],E,E,50,[[["i64"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[790],E,E,50,[[["i128"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[1451],E,E,50,[[["u64"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[791],E,E,50,[[["u128"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[1453],E,E,50,[[["f32"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[1452],E,E,50,[[["f64"]],[["ratio",["i16"]],[R[32],["ratio"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["i8"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["i32"]]]]],[11,R[1450],E,E,50,[[["i64"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[790],E,E,50,[[["i128"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[1451],E,E,50,[[["u64"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[791],E,E,50,[[["u128"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[1453],E,E,50,[[["f32"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[1452],E,E,50,[[["f64"]],[["ratio",["usize"]],[R[32],["ratio"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["i128"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["u32"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["u16"]]]]],[11,R[1450],E,E,50,[[["i64"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[790],E,E,50,[[["i128"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[1451],E,E,50,[[["u64"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[791],E,E,50,[[["u128"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[1453],E,E,50,[[["f32"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[1452],E,E,50,[[["f64"]],[["ratio",["u128"]],[R[32],["ratio"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[1450],E,E,50,[[["i64"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[790],E,E,50,[[["i128"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[1451],E,E,50,[[["u64"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[791],E,E,50,[[["u128"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[1453],E,E,50,[[["f32"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[1452],E,E,50,[[["f64"]],[[R[32],["ratio"]],["ratio",["u8"]]]]],[11,R[1450],E,E,50,[[["i64"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[790],E,E,50,[[["i128"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[1451],E,E,50,[[["u64"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[791],E,E,50,[[["u128"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[1453],E,E,50,[[["f32"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[1452],E,E,50,[[["f64"]],[["ratio",["i64"]],[R[32],["ratio"]]]]],[11,R[1450],E,E,50,[[["i64"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,R[790],E,E,50,[[["i128"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,R[1451],E,E,50,[[["u64"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,R[791],E,E,50,[[["u128"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,R[1453],E,E,50,[[["f32"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,R[1452],E,E,50,[[["f64"]],[["ratio",["u64"]],[R[32],["ratio"]]]]],[11,"product",E,E,50,[[["i"]],["ratio"]]],[11,"product",E,E,50,[[["i"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"div",E,E,50,[[[T]],["ratio"]]],[11,"div",E,E,50,[[["ratio"]],["ratio"]]],[11,"inv",E,E,50,[[],["ratio"]]],[11,"eq",E,E,51,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[1449]]],["bool"]]],[11,"eq",E,E,50,[[["self"],["ratio"]],["bool"]]],[11,R[1441],E,E,50,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[783],E,E,50,[[["self"],["ratio"]]]],[11,R[783],E,E,50,[[["self"],["ratio"]]]],[11,R[783],E,E,50,[[["self"],[T]]]],[11,R[783],E,E,50,[[["self"],[T]]]],[11,R[1443],E,E,50,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[784],E,E,50,[[["self"],["ratio"]]]],[11,R[784],E,E,50,[[["self"],[T]]]],[11,R[784],E,E,50,[[["self"],["ratio"]]]],[11,R[784],E,E,50,[[["self"],[T]]]],[11,"neg",E,E,50,[[],["ratio"]]],[11,"cmp",E,E,50,[[["self"],["ratio"]],[R[31]]]],[11,R[781],E,E,50,[[["self"],["ratio"]]]],[11,R[781],E,E,50,[[["self"],["ratio"]]]],[11,R[781],E,E,50,[[["self"],[T]]]],[11,R[781],E,E,50,[[["self"],[T]]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,"sub",E,E,50,[[["ratio"]],["ratio"]]],[11,"sub",E,E,50,[[[T]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["i64"]],["ratio"]]],[11,"pow",E,E,50,[[["usize"]],["ratio"]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["i32"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["i16"]],["ratio"]]],[11,"pow",E,E,50,[[["isize"]],["ratio"]]],[11,"pow",E,E,50,[[["u64"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"pow",E,E,50,[[["u32"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["i8"]],["ratio"]]],[11,"pow",E,E,50,[[["u8"]],["ratio"]]],[11,"pow",E,E,50,[[["u16"]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,"add",E,E,50,[[[T]],["ratio"]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,"add",E,E,50,[[["ratio"]],["ratio"]]],[11,R[785],E,E,50,[[["self"],[T]]]],[11,R[785],E,E,50,[[["self"],["ratio"]]]],[11,R[785],E,E,50,[[["self"],[T]]]],[11,R[785],E,E,50,[[["self"],["ratio"]]]],[11,R[409],E,E,51,[[["self"]],["str"]]],[11,R[793],E,R[1959],50,[[["u32"],["str"]],[[R[1449]],[R[2],["ratio",R[1449]]],["ratio"]]]],[11,"rem",E,E,50,[[[T]],["ratio"]]],[11,"rem",E,E,50,[[[T]],["ratio"]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,"rem",E,E,50,[[["ratio"]],["ratio"]]],[11,R[712],E,R[1958],50,[[["str"]],[[R[1449]],[R[2],["ratio",R[1449]]],["ratio"]]]],[11,R[1442],E,E,50,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"mul",E,E,50,[[[T]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"mul",E,E,50,[[["ratio"]],["ratio"]]],[11,"from",E,E,50,[[],["ratio"]]],[11,"from",E,E,50,[[[T]],["ratio"]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,"sum",E,E,50,[[["i"]],["ratio"]]],[11,"clone",E,E,51,[[["self"]],[R[1449]]]],[11,"clone",E,E,50,[[["self"]],["ratio"]]],[11,R[1440],E,E,50,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[782],E,E,50,[[["self"],["ratio"]]]],[11,R[782],E,E,50,[[["self"],[T]]]],[11,R[782],E,E,50,[[["self"],[T]]]],[11,R[782],E,E,50,[[["self"],["ratio"]]]],[11,"one",E,E,50,[[],["ratio"]]],[11,"is_one",E,E,50,[[["self"]],["bool"]]],[11,"set_one",E,E,50,[[["self"]]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"into",E,E,50,[[]]],[11,"abs",E,E,50,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,50,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,50,[[["self"]],["ratio"]]],[11,R[1445],E,E,50,[[["self"]],["bool"]]],[11,R[1446],E,E,50,[[["self"]],["bool"]]],[11,"zero",E,E,50,[[],["ratio"]]],[11,"is_zero",E,E,50,[[["self"]],["bool"]]],[11,R[1873],E,E,50,[[["self"]]]],[11,"new",R[1847],R[1439],41,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,R[1852],E,R[1401],41,[[["biguint"],["sign"]],["bigint"]]],[11,R[1654],E,R[1401],41,[[["sign"]],["bigint"]]],[11,R[1407],E,R[1853],41,[[["self"],["sign"]]]],[11,R[1408],E,R[1401],41,[[["sign"]],["bigint"]]],[11,R[1409],E,R[1401],41,[[["sign"]],["bigint"]]],[11,R[1854],E,R[1402],41,[[],["bigint"]]],[11,R[1855],E,R[1402],41,[[],["bigint"]]],[11,R[1410],E,R[1401],41,[[["u32"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1411],E,R[1403],41,[[["u32"],["sign"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1412],E,R[1403],41,[[["u32"],["sign"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1414],E,R[1404],41,[[["self"]]]],[11,R[1415],E,R[1404],41,[[["self"]]]],[11,R[1856],E,R[1405],41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1857],E,R[1405],41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1417],E,R[1418],41,[[["self"],["u32"]],[R[63]]]],[11,R[1419],E,R[1420],41,[[["self"],["u32"]]]],[11,R[1421],E,R[1422],41,[[["self"],["u32"]]]],[11,"sign",E,R[1858],41,[[["self"]],["sign"]]],[11,"bits",E,R[1423],41,[[["self"]],["usize"]]],[11,R[1427],E,R[1859],41,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1442],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1441],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1443],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1440],E,E,41,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,"modpow",E,R[1860],41,[[["self"],["bigint"]],["bigint"]]],[11,"sqrt",E,R[1424],41,[[["self"]],["bigint"]]],[11,"cbrt",E,R[1425],41,[[["self"]],["bigint"]]],[11,R[1861],E,R[1426],41,[[["self"],["u32"]],["bigint"]]],[11,"new",E,R[1406],42,[[["u32"],["vec",["u32"]]],["biguint"]]],[11,R[1654],E,R[1406],42,[[],["biguint"]]],[11,R[1407],E,R[1862],42,[[["self"]]]],[11,R[1408],E,R[1406],42,[[],["biguint"]]],[11,R[1409],E,R[1406],42,[[],["biguint"]]],[11,R[1410],E,R[1863],42,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1411],E,R[1413],42,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1412],E,R[1413],42,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1414],E,R[1416],42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1415],E,R[1416],42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[1417],E,R[1418],42,[[["self"],["u32"]],[R[63]]]],[11,R[1419],E,R[1420],42,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,R[1421],E,R[1422],42,[[["self"],["u32"]],[["vec",["u8"]],["u8"]]]],[11,"bits",E,R[1423],42,[[["self"]],["usize"]]],[11,"modpow",E,R[1864],42,[[["self"],["biguint"]],["biguint"]]],[11,"sqrt",E,R[1424],42,[[["self"]],["biguint"]]],[11,"cbrt",E,R[1425],42,[[["self"]],["biguint"]]],[11,R[1861],E,R[1426],42,[[["self"],["u32"]],["biguint"]]],[11,"new",R[1848],R[1875],0,[[[T]],[R[779]]]],[11,"i",E,R[1876],0,[[],[R[779]]]],[11,"norm_sqr",E,R[1877],0,[[["self"]],[T]]],[11,"scale",E,R[1878],0,[[["self"],[T]],[R[779]]]],[11,"unscale",E,R[1879],0,[[["self"],[T]],[R[779]]]],[11,"powu",E,R[1880],0,[[["self"],["u32"]],[R[779]]]],[11,"conj",E,R[1881],0,[[["self"]],[R[779]]]],[11,"inv",E,R[1882],0,[[["self"]],[R[779]]]],[11,"powi",E,R[1883],0,[[["self"],["i32"]],[R[779]]]],[11,"l1_norm",E,R[1884],0,[[["self"]],[T]]],[11,"norm",E,R[1885],0,[[["self"]],[T]]],[11,"arg",E,R[1886],0,[[["self"]],[T]]],[11,"to_polar",E,R[1887],0,[[["self"]]]],[11,"from_polar",E,R[1888],0,[[[T]],[R[779]]]],[11,"exp",E,R[1889],0,[[["self"]],[R[779]]]],[11,"ln",E,R[1890],0,[[["self"]],[R[779]]]],[11,"sqrt",E,R[1891],0,[[["self"]],[R[779]]]],[11,"cbrt",E,R[1892],0,[[["self"]],[R[779]]]],[11,"powf",E,R[1893],0,[[["self"],[T]],[R[779]]]],[11,"log",E,R[1894],0,[[["self"],[T]],[R[779]]]],[11,"powc",E,R[1895],0,[[["self"],[R[779]]],[R[779]]]],[11,"expf",E,R[1896],0,[[["self"],[T]],[R[779]]]],[11,"sin",E,R[1897],0,[[["self"]],[R[779]]]],[11,"cos",E,R[1898],0,[[["self"]],[R[779]]]],[11,"tan",E,R[1899],0,[[["self"]],[R[779]]]],[11,"asin",E,R[1900],0,[[["self"]],[R[779]]]],[11,"acos",E,R[1901],0,[[["self"]],[R[779]]]],[11,"atan",E,R[1902],0,[[["self"]],[R[779]]]],[11,"sinh",E,R[1903],0,[[["self"]],[R[779]]]],[11,"cosh",E,R[1904],0,[[["self"]],[R[779]]]],[11,"tanh",E,R[1905],0,[[["self"]],[R[779]]]],[11,"asinh",E,R[1906],0,[[["self"]],[R[779]]]],[11,"acosh",E,R[1907],0,[[["self"]],[R[779]]]],[11,"atanh",E,R[1908],0,[[["self"]],[R[779]]]],[11,"finv",E,R[1909],0,[[["self"]],[R[779]]]],[11,"fdiv",E,R[1910],0,[[["self"],[R[779]]],[R[779]]]],[11,"is_nan",E,R[1911],0,[[],["bool"]]],[11,R[541],E,R[1912],0,[[],["bool"]]],[11,R[542],E,R[1913],0,[[],["bool"]]],[11,R[543],E,R[1914],0,[[],["bool"]]],[11,"new",R[1849],R[1927],45,[[[T]],[R[1928]]]],[11,"new",R[1850],R[1939],50,[[[T]],["ratio"]]],[11,R[1940],E,R[1941],50,[[[T]],["ratio"]]],[11,"new_raw",E,R[1942],50,[[[T]],["ratio"]]],[11,"to_integer",E,R[1943],50,[[["self"]],[T]]],[11,"numer",E,R[1944],50,[[["self"]],[T]]],[11,"denom",E,R[1945],50,[[["self"]],[T]]],[11,"is_integer",E,R[1946],50,[[["self"]],["bool"]]],[11,"reduced",E,R[1947],50,[[["self"]],["ratio"]]],[11,"recip",E,R[1948],50,[[["self"]],["ratio"]]],[11,"floor",E,R[1949],50,[[["self"]],["ratio"]]],[11,"ceil",E,R[1950],50,[[["self"]],["ratio"]]],[11,"round",E,R[1951],50,[[["self"]],["ratio"]]],[11,"trunc",E,R[1952],50,[[["self"]],["ratio"]]],[11,"fract",E,R[1953],50,[[["self"]],["ratio"]]],[11,"pow",E,R[1954],50,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1955],50,[[[T]],[[R[32],["ratio"]],["ratio",["bigint"]]]]],[11,R[1956],E,E,50,[[["f"]],[[R[32],["ratio"]],["ratio"]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,R[619]],[8,R[610]],[8,R[611]],[8,R[612]],[8,R[613]],[8,"PrimInt"],[8,R[605]],[8,R[606]],[8,"NumCast"],[8,R[607]],[8,"Pow"],[8,"Float"],[8,"ToBigInt"],[8,R[1874]],[4,"Sign"],[3,R[748]],[8,"Roots"],[8,R[608]],[8,R[609]],[8,R[614]],[8,R[615]],[8,R[616]],[8,R[617]],[8,"Inv"],[8,"MulAdd"],[8,R[618]],[8,R[620]],[8,R[621]],[8,R[622]],[8,R[623]],[8,R[624]],[8,"Real"],[4,R[604]],[3,R[603]],[3,"BigInt"],[3,"BigUint"],[3,R[1444]],[3,R[788]],[3,R[749]],[3,"Range"],[3,R[1190]],[3,R[1935]],[3,R[1191]],[3,"Ratio"],[3,R[1454]]]};
searchIndex["num_bigint"]={"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,R[1444],"num_bigint",E,N,N],[3,"BigUint",E,R[1748],N,N],[3,"BigInt",E,R[1749],N,N],[4,"Sign",E,R[1851],N,N],[13,"Minus",E,E,0,N],[13,"NoSign",E,E,0,N],[13,"Plus",E,E,0,N],[11,"new",E,R[1439],1,[[["vec",["u32"]],["u32"],["sign"]],["bigint"]]],[11,R[1852],E,R[1401],1,[[["biguint"],["sign"]],["bigint"]]],[11,R[1654],E,R[1401],1,[[["sign"]],["bigint"]]],[11,R[1407],E,R[1853],1,[[["self"],["sign"]]]],[11,R[1408],E,R[1401],1,[[["sign"]],["bigint"]]],[11,R[1409],E,R[1401],1,[[["sign"]],["bigint"]]],[11,R[1854],E,R[1402],1,[[],["bigint"]]],[11,R[1855],E,R[1402],1,[[],["bigint"]]],[11,R[1410],E,R[1401],1,[[["u32"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1411],E,R[1403],1,[[["u32"],["sign"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1412],E,R[1403],1,[[["u32"],["sign"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1414],E,R[1404],1,[[["self"]]]],[11,R[1415],E,R[1404],1,[[["self"]]]],[11,R[1856],E,R[1405],1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1857],E,R[1405],1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1417],E,R[1418],1,[[["self"],["u32"]],[R[63]]]],[11,R[1419],E,R[1420],1,[[["self"],["u32"]]]],[11,R[1421],E,R[1422],1,[[["self"],["u32"]]]],[11,"sign",E,R[1858],1,[[["self"]],["sign"]]],[11,"bits",E,R[1423],1,[[["self"]],["usize"]]],[11,R[1427],E,R[1859],1,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1442],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1441],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1443],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1440],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,"modpow",E,R[1860],1,[[["self"]],["self"]]],[11,"sqrt",E,R[1424],1,[[["self"]],["self"]]],[11,"cbrt",E,R[1425],1,[[["self"]],["self"]]],[11,R[1861],E,R[1426],1,[[["self"],["u32"]],["self"]]],[11,"new",E,R[1406],2,[[["vec",["u32"]],["u32"]],["biguint"]]],[11,R[1654],E,R[1406],2,[[],["biguint"]]],[11,R[1407],E,R[1862],2,[[["self"]]]],[11,R[1408],E,R[1406],2,[[],["biguint"]]],[11,R[1409],E,R[1406],2,[[],["biguint"]]],[11,R[1410],E,R[1863],2,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1411],E,R[1413],2,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1412],E,R[1413],2,[[["u32"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1414],E,R[1416],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1415],E,R[1416],2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,R[1417],E,R[1418],2,[[["self"],["u32"]],[R[63]]]],[11,R[1419],E,R[1420],2,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,R[1421],E,R[1422],2,[[["self"],["u32"]],[["u8"],["vec",["u8"]]]]],[11,"bits",E,R[1423],2,[[["self"]],["usize"]]],[11,"modpow",E,R[1864],2,[[["self"]],["self"]]],[11,"sqrt",E,R[1424],2,[[["self"]],["self"]]],[11,"cbrt",E,R[1425],2,[[["self"]],["self"]]],[11,R[1861],E,R[1426],2,[[["self"],["u32"]],["self"]]],[8,R[1874],E,R[1865],N,N],[10,R[1427],E,R[1866],3,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[8,"ToBigInt",E,R[1867],N,N],[10,R[1868],E,R[1869],4,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[11,"into",E,E,5,[[],[U]]],[11,R[95],E,E,5,[[["self"]],[R[63]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,R[95],E,E,2,[[["self"]],[R[63]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,R[95],E,E,1,[[["self"]],[R[63]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[1868],E,E,1,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1868],E,E,2,[[["self"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1427],E,E,1,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1427],E,E,2,[[["self"]],[[R[32],["biguint"]],["biguint"]]]],[11,"clone",E,E,0,[[["self"]],["sign"]]],[11,"clone",E,E,1,[[["self"]],["bigint"]]],[11,"clone",E,E,2,[[["self"]],["biguint"]]],[11,"clone",E,E,5,[[["self"]],[R[1428]]]],[11,"cmp",E,E,0,[[["self"],["sign"]],[R[31]]]],[11,"cmp",E,E,1,[[["self"],["bigint"]],[R[31]]]],[11,"cmp",E,E,2,[[["self"],["biguint"]],[R[31]]]],[11,R[99],E,E,1,[[],["bigint"]]],[11,R[99],E,E,2,[[],["biguint"]]],[11,"from",E,E,1,[[["i64"]],["self"]]],[11,"from",E,E,1,[[["i128"]],["self"]]],[11,"from",E,E,1,[[["i8"]],["self"]]],[11,"from",E,E,1,[[["i16"]],["self"]]],[11,"from",E,E,1,[[["i32"]],["self"]]],[11,"from",E,E,1,[[["isize"]],["self"]]],[11,"from",E,E,1,[[["u64"]],["self"]]],[11,"from",E,E,1,[[["u128"]],["self"]]],[11,"from",E,E,1,[[["u8"]],["self"]]],[11,"from",E,E,1,[[["u16"]],["self"]]],[11,"from",E,E,1,[[["u32"]],["self"]]],[11,"from",E,E,1,[[["usize"]],["self"]]],[11,"from",E,E,1,[[["biguint"]],["self"]]],[11,"from",E,E,2,[[["u64"]],["self"]]],[11,"from",E,E,2,[[["u128"]],["self"]]],[11,"from",E,E,2,[[["u8"]],["self"]]],[11,"from",E,E,2,[[["u16"]],["self"]]],[11,"from",E,E,2,[[["u32"]],["self"]]],[11,"from",E,E,2,[[["usize"]],["self"]]],[11,R[117],E,E,0,[[["self"],["sign"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,1,[[["self"],["bigint"]],[[R[31]],[R[32],[R[31]]]]]],[11,R[117],E,E,2,[[["self"],["biguint"]],[[R[31]],[R[32],[R[31]]]]]],[11,"eq",E,E,0,[[["self"],["sign"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["bigint"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["biguint"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[1428]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[1428]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["bigint"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u8"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["u16"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["usize"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i8"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["i16"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["isize"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["u32"]],["bigint"]]],[11,"div",E,E,1,[[["u64"]],["bigint"]]],[11,"div",E,E,1,[[["u128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,1,[[["i32"]],["bigint"]]],[11,"div",E,E,1,[[["i64"]],["bigint"]]],[11,"div",E,E,1,[[["i128"]],["bigint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["biguint"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u8"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["u16"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["usize"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"div",E,E,2,[[["u32"]],["biguint"]]],[11,"div",E,E,2,[[["u64"]],["biguint"]]],[11,"div",E,E,2,[[["u128"]],["biguint"]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["bigint"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u8"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["u16"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["usize"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i8"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["i16"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["isize"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["u32"]],["bigint"]]],[11,"add",E,E,1,[[["u64"]],["bigint"]]],[11,"add",E,E,1,[[["u128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,1,[[["i32"]],["bigint"]]],[11,"add",E,E,1,[[["i64"]],["bigint"]]],[11,"add",E,E,1,[[["i128"]],["bigint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["biguint"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u8"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["u16"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["usize"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"add",E,E,2,[[["u32"]],["biguint"]]],[11,"add",E,E,2,[[["u64"]],["biguint"]]],[11,"add",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["bigint"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u8"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["u16"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["usize"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i8"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["i16"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["isize"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["u32"]],["bigint"]]],[11,"sub",E,E,1,[[["u64"]],["bigint"]]],[11,"sub",E,E,1,[[["u128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,1,[[["i32"]],["bigint"]]],[11,"sub",E,E,1,[[["i64"]],["bigint"]]],[11,"sub",E,E,1,[[["i128"]],["bigint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["biguint"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u8"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["u16"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["usize"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,"sub",E,E,2,[[["u32"]],["biguint"]]],[11,"sub",E,E,2,[[["u64"]],["biguint"]]],[11,"sub",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,0,[[["sign"]],["sign"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["bigint"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u8"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["u16"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["usize"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i8"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["i16"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["isize"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["u32"]],["bigint"]]],[11,"mul",E,E,1,[[["u64"]],["bigint"]]],[11,"mul",E,E,1,[[["u128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,1,[[["i32"]],["bigint"]]],[11,"mul",E,E,1,[[["i64"]],["bigint"]]],[11,"mul",E,E,1,[[["i128"]],["bigint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["biguint"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u8"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["u16"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["usize"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"mul",E,E,2,[[["u32"]],["biguint"]]],[11,"mul",E,E,2,[[["u64"]],["biguint"]]],[11,"mul",E,E,2,[[["u128"]],["biguint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["bigint"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u8"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["u16"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["usize"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i8"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["i16"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["isize"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["u32"]],["bigint"]]],[11,"rem",E,E,1,[[["u64"]],["bigint"]]],[11,"rem",E,E,1,[[["u128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,1,[[["i32"]],["bigint"]]],[11,"rem",E,E,1,[[["i64"]],["bigint"]]],[11,"rem",E,E,1,[[["i128"]],["bigint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["biguint"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u8"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["u16"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["usize"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u32"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"rem",E,E,2,[[["u64"]],["biguint"]]],[11,"rem",E,E,2,[[["u128"]],["biguint"]]],[11,"neg",E,R[1870],0,[[],["sign"]]],[11,"neg",E,E,1,[[],["bigint"]]],[11,"neg",E,E,2,[[],["biguint"]]],[11,R[781],E,E,1,[[["self"],["bigint"]]]],[11,R[781],E,E,1,[[["self"],["bigint"]]]],[11,R[781],E,E,1,[[["self"],["u8"]]]],[11,R[781],E,E,1,[[["self"],["u16"]]]],[11,R[781],E,E,1,[[["self"],["usize"]]]],[11,R[781],E,E,1,[[["self"],["i8"]]]],[11,R[781],E,E,1,[[["self"],["i16"]]]],[11,R[781],E,E,1,[[["self"],["isize"]]]],[11,R[781],E,E,1,[[["self"],["u32"]]]],[11,R[781],E,E,1,[[["self"],["u64"]]]],[11,R[781],E,E,1,[[["self"],["u128"]]]],[11,R[781],E,E,1,[[["self"],["i32"]]]],[11,R[781],E,E,1,[[["self"],["i64"]]]],[11,R[781],E,E,1,[[["self"],["i128"]]]],[11,R[781],E,E,2,[[["self"],["biguint"]]]],[11,R[781],E,E,2,[[["self"],["biguint"]]]],[11,R[781],E,E,2,[[["self"],["u8"]]]],[11,R[781],E,E,2,[[["self"],["u16"]]]],[11,R[781],E,E,2,[[["self"],["usize"]]]],[11,R[781],E,E,2,[[["self"],["u32"]]]],[11,R[781],E,E,2,[[["self"],["u64"]]]],[11,R[781],E,E,2,[[["self"],["u128"]]]],[11,R[782],E,E,1,[[["self"],["bigint"]]]],[11,R[782],E,E,1,[[["self"],["bigint"]]]],[11,R[782],E,E,1,[[["self"],["u8"]]]],[11,R[782],E,E,1,[[["self"],["u16"]]]],[11,R[782],E,E,1,[[["self"],["usize"]]]],[11,R[782],E,E,1,[[["self"],["i8"]]]],[11,R[782],E,E,1,[[["self"],["i16"]]]],[11,R[782],E,E,1,[[["self"],["isize"]]]],[11,R[782],E,E,1,[[["self"],["u32"]]]],[11,R[782],E,E,1,[[["self"],["u64"]]]],[11,R[782],E,E,1,[[["self"],["u128"]]]],[11,R[782],E,E,1,[[["self"],["i32"]]]],[11,R[782],E,E,1,[[["self"],["i64"]]]],[11,R[782],E,E,1,[[["self"],["i128"]]]],[11,R[782],E,E,2,[[["self"],["biguint"]]]],[11,R[782],E,E,2,[[["self"],["biguint"]]]],[11,R[782],E,E,2,[[["self"],["u8"]]]],[11,R[782],E,E,2,[[["self"],["u16"]]]],[11,R[782],E,E,2,[[["self"],["usize"]]]],[11,R[782],E,E,2,[[["self"],["u32"]]]],[11,R[782],E,E,2,[[["self"],["u64"]]]],[11,R[782],E,E,2,[[["self"],["u128"]]]],[11,R[783],E,E,1,[[["self"],["bigint"]]]],[11,R[783],E,E,1,[[["self"],["bigint"]]]],[11,R[783],E,E,1,[[["self"],["u8"]]]],[11,R[783],E,E,1,[[["self"],["u16"]]]],[11,R[783],E,E,1,[[["self"],["usize"]]]],[11,R[783],E,E,1,[[["self"],["i8"]]]],[11,R[783],E,E,1,[[["self"],["i16"]]]],[11,R[783],E,E,1,[[["self"],["isize"]]]],[11,R[783],E,E,1,[[["self"],["u32"]]]],[11,R[783],E,E,1,[[["self"],["u64"]]]],[11,R[783],E,E,1,[[["self"],["u128"]]]],[11,R[783],E,E,1,[[["self"],["i32"]]]],[11,R[783],E,E,1,[[["self"],["i64"]]]],[11,R[783],E,E,1,[[["self"],["i128"]]]],[11,R[783],E,E,2,[[["self"],["biguint"]]]],[11,R[783],E,E,2,[[["self"],["biguint"]]]],[11,R[783],E,E,2,[[["self"],["u8"]]]],[11,R[783],E,E,2,[[["self"],["u16"]]]],[11,R[783],E,E,2,[[["self"],["usize"]]]],[11,R[783],E,E,2,[[["self"],["u32"]]]],[11,R[783],E,E,2,[[["self"],["u64"]]]],[11,R[783],E,E,2,[[["self"],["u128"]]]],[11,R[784],E,E,1,[[["self"],["bigint"]]]],[11,R[784],E,E,1,[[["self"],["bigint"]]]],[11,R[784],E,E,1,[[["self"],["u8"]]]],[11,R[784],E,E,1,[[["self"],["u16"]]]],[11,R[784],E,E,1,[[["self"],["usize"]]]],[11,R[784],E,E,1,[[["self"],["i8"]]]],[11,R[784],E,E,1,[[["self"],["i16"]]]],[11,R[784],E,E,1,[[["self"],["isize"]]]],[11,R[784],E,E,1,[[["self"],["u32"]]]],[11,R[784],E,E,1,[[["self"],["u64"]]]],[11,R[784],E,E,1,[[["self"],["u128"]]]],[11,R[784],E,E,1,[[["self"],["i32"]]]],[11,R[784],E,E,1,[[["self"],["i64"]]]],[11,R[784],E,E,1,[[["self"],["i128"]]]],[11,R[784],E,E,2,[[["self"],["biguint"]]]],[11,R[784],E,E,2,[[["self"],["biguint"]]]],[11,R[784],E,E,2,[[["self"],["u8"]]]],[11,R[784],E,E,2,[[["self"],["u16"]]]],[11,R[784],E,E,2,[[["self"],["usize"]]]],[11,R[784],E,E,2,[[["self"],["u32"]]]],[11,R[784],E,E,2,[[["self"],["u64"]]]],[11,R[784],E,E,2,[[["self"],["u128"]]]],[11,R[785],E,E,1,[[["self"],["bigint"]]]],[11,R[785],E,E,1,[[["self"],["bigint"]]]],[11,R[785],E,E,1,[[["self"],["u8"]]]],[11,R[785],E,E,1,[[["self"],["u16"]]]],[11,R[785],E,E,1,[[["self"],["usize"]]]],[11,R[785],E,E,1,[[["self"],["i8"]]]],[11,R[785],E,E,1,[[["self"],["i16"]]]],[11,R[785],E,E,1,[[["self"],["isize"]]]],[11,R[785],E,E,1,[[["self"],["u32"]]]],[11,R[785],E,E,1,[[["self"],["u64"]]]],[11,R[785],E,E,1,[[["self"],["u128"]]]],[11,R[785],E,E,1,[[["self"],["i32"]]]],[11,R[785],E,E,1,[[["self"],["i64"]]]],[11,R[785],E,E,1,[[["self"],["i128"]]]],[11,R[785],E,E,2,[[["self"],["biguint"]]]],[11,R[785],E,E,2,[[["self"],["biguint"]]]],[11,R[785],E,E,2,[[["self"],["u8"]]]],[11,R[785],E,E,2,[[["self"],["u16"]]]],[11,R[785],E,E,2,[[["self"],["usize"]]]],[11,R[785],E,E,2,[[["self"],["u32"]]]],[11,R[785],E,E,2,[[["self"],["u64"]]]],[11,R[785],E,E,2,[[["self"],["u128"]]]],[11,"not",E,E,1,[[],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitand",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,1,[[["bigint"]],["bigint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"bitxor",E,E,2,[[["biguint"]],["biguint"]]],[11,"shl",E,E,1,[[["usize"]],["bigint"]]],[11,"shl",E,E,2,[[["usize"]],["biguint"]]],[11,"shr",E,E,1,[[["usize"]],["bigint"]]],[11,"shr",E,E,2,[[["usize"]],["biguint"]]],[11,R[1429],E,E,1,[[["self"],["bigint"]]]],[11,R[1429],E,E,1,[[["self"],["bigint"]]]],[11,R[1429],E,E,2,[[["self"],["biguint"]]]],[11,R[1429],E,E,2,[[["self"],["biguint"]]]],[11,R[1430],E,E,1,[[["self"],["bigint"]]]],[11,R[1430],E,E,1,[[["self"],["bigint"]]]],[11,R[1430],E,E,2,[[["self"],["biguint"]]]],[11,R[1430],E,E,2,[[["self"],["biguint"]]]],[11,R[1431],E,E,1,[[["self"],["bigint"]]]],[11,R[1431],E,E,1,[[["self"],["bigint"]]]],[11,R[1431],E,E,2,[[["self"],["biguint"]]]],[11,R[1431],E,E,2,[[["self"],["biguint"]]]],[11,R[1871],E,E,1,[[["self"],["usize"]]]],[11,R[1871],E,E,2,[[["self"],["usize"]]]],[11,R[1872],E,E,1,[[["self"],["usize"]]]],[11,R[1872],E,E,2,[[["self"],["usize"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"product",E,E,1,[[["i"]],["self"]]],[11,"product",E,E,2,[[["i"]],["self"]]],[11,"sum",E,E,1,[[["i"]],["self"]]],[11,"sum",E,E,2,[[["i"]],["self"]]],[11,R[712],E,E,1,[[["str"]],[["bigint"],[R[1428]],[R[2],["bigint",R[1428]]]]]],[11,R[712],E,E,2,[[["str"]],[[R[2],["biguint",R[1428]]],[R[1428]],["biguint"]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,5,[[["self"]],["str"]]],[11,R[1861],E,E,1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,1,[[["self"]],["self"]]],[11,"cbrt",E,E,1,[[["self"]],["self"]]],[11,R[1861],E,E,2,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,E,2,[[["self"]],["self"]]],[11,"cbrt",E,E,2,[[["self"]],["self"]]],[11,"div_rem",E,E,1,[[["self"],["bigint"]]]],[11,R[744],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[745],E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,R[746],E,E,1,[[["self"],["bigint"]]]],[11,"gcd",E,R[1432],1,[[["self"],["bigint"]],["bigint"]]],[11,"lcm",E,R[1433],1,[[["self"],["bigint"]],["bigint"]]],[11,"divides",E,R[1434],1,[[["self"],["bigint"]],["bool"]]],[11,R[1435],E,R[1436],1,[[["self"],["bigint"]],["bool"]]],[11,"is_even",E,R[1437],1,[[["self"]],["bool"]]],[11,"is_odd",E,R[1438],1,[[["self"]],["bool"]]],[11,"div_rem",E,E,2,[[["self"],["biguint"]]]],[11,R[744],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[745],E,E,2,[[["self"],["biguint"]],["biguint"]]],[11,R[746],E,E,2,[[["self"],["biguint"]]]],[11,"gcd",E,R[1432],2,[[["self"]],["self"]]],[11,"lcm",E,R[1433],2,[[["self"],["biguint"]],["biguint"]]],[11,"divides",E,R[1434],2,[[["self"],["biguint"]],["bool"]]],[11,R[1435],E,R[1436],2,[[["self"],["biguint"]],["bool"]]],[11,"is_even",E,R[1437],2,[[["self"]],["bool"]]],[11,"is_odd",E,R[1438],2,[[["self"]],["bool"]]],[11,"to_i64",E,E,1,[[["self"]],[[R[32],["i64"]],["i64"]]]],[11,"to_i128",E,E,1,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_u64",E,E,1,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,E,1,[[["self"]],[[R[32],["u128"]],["u128"]]]],[11,"to_f32",E,E,1,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,1,[[["self"]],[[R[32],["f64"]],["f64"]]]],[11,"to_i64",E,E,2,[[["self"]],[[R[32],["i64"]],["i64"]]]],[11,"to_i128",E,E,2,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_u64",E,E,2,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,E,2,[[["self"]],[[R[32],["u128"]],["u128"]]]],[11,"to_f32",E,E,2,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,2,[[["self"]],[[R[32],["f64"]],["f64"]]]],[11,R[1450],E,E,1,[[["i64"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[790],E,E,1,[[["i128"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1451],E,E,1,[[["u64"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[791],E,E,1,[[["u128"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1452],E,E,1,[[["f64"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1450],E,E,2,[[["i64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[790],E,E,2,[[["i128"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1451],E,E,2,[[["u64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[791],E,E,2,[[["u128"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1452],E,E,2,[[["f64"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[793],E,R[1439],1,[[["u32"],["str"]],[["bigint"],[R[1428]],[R[2],["bigint",R[1428]]]]]],[11,R[793],E,R[1406],2,[[["u32"],["str"]],[[R[2],["biguint",R[1428]]],[R[1428]],["biguint"]]]],[11,"zero",E,E,1,[[],["bigint"]]],[11,R[1873],E,E,1,[[["self"]]]],[11,"is_zero",E,E,1,[[["self"]],["bool"]]],[11,"zero",E,E,2,[[],["biguint"]]],[11,R[1873],E,E,2,[[["self"]]]],[11,"is_zero",E,E,2,[[["self"]],["bool"]]],[11,"one",E,E,1,[[],["bigint"]]],[11,"set_one",E,E,1,[[["self"]]]],[11,"is_one",E,E,1,[[["self"]],["bool"]]],[11,"one",E,E,2,[[],["biguint"]]],[11,"set_one",E,E,2,[[["self"]]]],[11,"is_one",E,E,2,[[["self"]],["bool"]]],[11,R[1440],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1440],E,E,2,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1441],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1441],E,E,2,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1442],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1442],E,E,2,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,R[1443],E,E,1,[[["self"],["bigint"]],[["bigint"],[R[32],["bigint"]]]]],[11,R[1443],E,E,2,[[["self"],["biguint"]],[[R[32],["biguint"]],["biguint"]]]],[11,"abs",E,E,1,[[["self"]],["bigint"]]],[11,"abs_sub",E,E,1,[[["self"],["bigint"]],["bigint"]]],[11,"signum",E,E,1,[[["self"]],["bigint"]]],[11,R[1445],E,E,1,[[["self"]],["bool"]]],[11,R[1446],E,E,1,[[["self"]],["bool"]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,R[1874]],[8,"ToBigInt"],[3,R[1444]]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex",R[1750],N,N],[12,"re",E,R[1751],0,N],[12,"im",E,R[1752],0,N],[3,R[788],E,E,N,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[11,"new",E,R[1875],0,[[[T]],["self"]]],[11,"i",E,R[1876],0,[[],["self"]]],[11,"norm_sqr",E,R[1877],0,[[["self"]],[T]]],[11,"scale",E,R[1878],0,[[["self"],[T]],["self"]]],[11,"unscale",E,R[1879],0,[[["self"],[T]],["self"]]],[11,"powu",E,R[1880],0,[[["self"],["u32"]],["self"]]],[11,"conj",E,R[1881],0,[[["self"]],["self"]]],[11,"inv",E,R[1882],0,[[["self"]],["self"]]],[11,"powi",E,R[1883],0,[[["self"],["i32"]],["self"]]],[11,"l1_norm",E,R[1884],0,[[["self"]],[T]]],[11,"norm",E,R[1885],0,[[["self"]],[T]]],[11,"arg",E,R[1886],0,[[["self"]],[T]]],[11,"to_polar",E,R[1887],0,[[["self"]]]],[11,"from_polar",E,R[1888],0,[[[T]],["self"]]],[11,"exp",E,R[1889],0,[[["self"]],["self"]]],[11,"ln",E,R[1890],0,[[["self"]],["self"]]],[11,"sqrt",E,R[1891],0,[[["self"]],["self"]]],[11,"cbrt",E,R[1892],0,[[["self"]],["self"]]],[11,"powf",E,R[1893],0,[[["self"],[T]],["self"]]],[11,"log",E,R[1894],0,[[["self"],[T]],["self"]]],[11,"powc",E,R[1895],0,[[["self"]],["self"]]],[11,"expf",E,R[1896],0,[[["self"],[T]],["self"]]],[11,"sin",E,R[1897],0,[[["self"]],["self"]]],[11,"cos",E,R[1898],0,[[["self"]],["self"]]],[11,"tan",E,R[1899],0,[[["self"]],["self"]]],[11,"asin",E,R[1900],0,[[["self"]],["self"]]],[11,"acos",E,R[1901],0,[[["self"]],["self"]]],[11,"atan",E,R[1902],0,[[["self"]],["self"]]],[11,"sinh",E,R[1903],0,[[["self"]],["self"]]],[11,"cosh",E,R[1904],0,[[["self"]],["self"]]],[11,"tanh",E,R[1905],0,[[["self"]],["self"]]],[11,"asinh",E,R[1906],0,[[["self"]],["self"]]],[11,"acosh",E,R[1907],0,[[["self"]],["self"]]],[11,"atanh",E,R[1908],0,[[["self"]],["self"]]],[11,"finv",E,R[1909],0,[[["self"]],[R[779]]]],[11,"fdiv",E,R[1910],0,[[["self"],[R[779]]],[R[779]]]],[11,"is_nan",E,R[1911],0,[[],["bool"]]],[11,R[541],E,R[1912],0,[[],["bool"]]],[11,R[542],E,R[1913],0,[[],["bool"]]],[11,R[543],E,R[1914],0,[[],["bool"]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[95],E,E,1,[[["self"]],[R[63]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"div",E,E,0,[[[R[779]]]]],[11,"div",E,E,0,[[]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[T]]]],[11,"eq",E,E,0,[[["self"],[R[779]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[779]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[780]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[780]]],["bool"]]],[11,"add",E,E,0,[[[R[779]]]]],[11,"add",E,E,0,[[]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[779]]]]],[11,"sub",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[779]]]]],[11,"mul",E,E,0,[[]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[779]]]]],[11,"rem",E,E,0,[[]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[T]]]],[11,"neg",E,E,0,[[]]],[11,R[781],E,E,0,[[["self"]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[781],E,E,0,[[["self"],["self"]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[782],E,E,0,[[["self"]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,R[782],E,E,0,[[["self"],["self"]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,R[783],E,E,0,[[["self"]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,R[783],E,E,0,[[["self"],["self"]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"],["self"]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"],["self"]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,R[712],E,R[786],0,[[["str"]],[R[2]]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"clone",E,E,0,[[["self"]],[R[779]]]],[11,R[99],E,E,0,[[],[R[779]]]],[11,R[409],E,E,1,[[["self"]],["str"]]],[11,R[794],E,E,0,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_isize",E,E,0,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[[R[32],["u32"]],["u32"]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,E,0,[[["self"]],[[R[32],["i32"]],["i32"]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_u128",E,E,0,[[["self"]],[[R[32],["u128"]],["u128"]]]],[11,"to_i128",E,E,0,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[["f64"],[R[32],["f64"]]]]],[11,R[625],E,E,0,[[["usize"]],[R[32]]]],[11,R[789],E,E,0,[[["isize"]],[R[32]]]],[11,"from_u8",E,E,0,[[["u8"]],[R[32]]]],[11,"from_u16",E,E,0,[[["u16"]],[R[32]]]],[11,"from_u32",E,E,0,[[["u32"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,"from_i8",E,E,0,[[["i8"]],[R[32]]]],[11,"from_i16",E,E,0,[[["i16"]],[R[32]]]],[11,"from_i32",E,E,0,[[["i32"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,"from",E,E,0,[[[R[792]]],[R[32]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[793],E,R[786],0,[[["u32"],["str"]],[R[2]]]],[11,"zero",E,E,0,[[],["self"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1873],E,E,0,[[["self"]]]],[11,"one",E,E,0,[[],["self"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"inv",E,E,0,[[]]],[11,"mul_add",E,E,0,[[[R[779]]],[R[779]]]],[11,R[787],E,E,0,[[["self"],[R[779]]]]],[11,R[787],E,E,0,[[["self"],[R[779]]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[[R[779]]]]],[11,"pow",E,E,0,[[[R[779]]]]]],"p":[[3,"Complex"],[3,R[788]]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[748],"num_integer",R[1915],N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[749],E,R[1916],N,N],[5,"cbrt",E,R[743],N,[[["roots"]],["roots"]]],[5,R[1861],E,R[741],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[742],N,[[["roots"]],["roots"]]],[5,"div_rem",E,R[1917],N,[[[R[33]]]]],[5,R[744],E,R[1918],N,[[[R[33]]],[R[33]]]],[5,R[745],E,R[1919],N,[[[R[33]]],[R[33]]]],[5,R[746],E,R[1920],N,[[[R[33]]]]],[5,"div_ceil",E,R[1921],N,[[[R[33]]],[R[33]]]],[5,"gcd",E,R[1432],N,[[[R[33]]],[R[33]]]],[5,"lcm",E,R[1433],N,[[[R[33]]],[R[33]]]],[5,"gcd_lcm",E,R[1922],N,[[[R[33]]]]],[5,"binomial",E,R[1923],N,[[["clone"],[R[33]]],[["clone"],[R[33]]]]],[5,R[1924],E,R[1925],N,[[],[["clone"],[R[33]]]]],[8,"Roots",E,R[1926],N,N],[10,R[1861],E,R[741],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[742],1,[[["self"]],["self"]]],[11,"cbrt",E,R[743],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[744],E,R[1753],2,[[["self"]],["self"]]],[10,R[745],E,R[1754],2,[[["self"]],["self"]]],[11,"div_ceil",E,R[1755],2,[[["self"]],["self"]]],[10,"gcd",E,R[1756],2,[[["self"]],["self"]]],[10,"lcm",E,R[1757],2,[[["self"]],["self"]]],[11,"gcd_lcm",E,R[1758],2,[[["self"]]]],[11,R[1759],E,R[1760],2,[[["self"]],[R[747]]]],[11,R[1761],E,R[1762],2,[[["self"]]]],[10,"divides",E,R[1434],2,[[["self"]],["bool"]]],[10,R[1435],E,R[1763],2,[[["self"]],["bool"]]],[10,"is_even",E,R[1764],2,[[["self"]],["bool"]]],[10,"is_odd",E,R[1765],2,[[["self"]],["bool"]]],[10,"div_rem",E,R[1766],2,[[["self"]]]],[11,R[746],E,R[1767],2,[[["self"]]]],[11,R[1768],E,R[1769],2,[[["self"]],["self"]]],[11,R[1770],E,R[1771],2,[[["self"]],["self"]]],[11,"new",E,R[1927],3,[[[T]],[R[1928]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[30],E,E,3,[[],["i"]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"eq",E,E,0,[[["self"],[R[747]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[747]]],["bool"]]],[11,"next",E,E,3,[[["self"]],[R[32]]]],[11,"clone",E,E,0,[[["self"]],[R[747]]]],[11,"sqrt",E,R[742],1,[[["self"]],["self"]]],[11,"cbrt",E,R[743],1,[[["self"]],["self"]]]],"p":[[3,R[748]],[8,"Roots"],[8,"Integer"],[3,R[749]]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter",R[1929],N,N],[3,R[1190],E,R[1930],N,N],[3,R[1935],E,R[1931],N,N],[3,R[1191],E,R[1932],N,N],[5,"range",E,R[1772],N,[[["a"]],["range"]]],[5,R[1773],E,R[1774],N,[[["a"]],[R[1188]]]],[5,R[1933],E,R[1775],N,[[["a"]],[R[1934]]]],[5,R[1776],E,R[1777],N,[[["a"]],[R[1189]]]],[11,R[30],E,E,0,[[],["i"]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[30],E,E,1,[[],["i"]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[30],E,E,2,[[],["i"]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[30],E,E,3,[[],["i"]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,"next",E,E,0,[[["self"]],[R[32]]]],[11,R[118],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[R[32]]]],[11,R[118],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[R[32]]]],[11,"next",E,E,3,[[["self"]],[R[32]]]],[11,R[119],E,E,0,[[["self"]],[R[32]]]],[11,R[119],E,E,1,[[["self"]],[R[32]]]],[11,"clone",E,E,0,[[["self"]],["range"]]],[11,"clone",E,E,1,[[["self"]],[R[1188]]]],[11,"clone",E,E,2,[[["self"]],[R[1934]]]],[11,"clone",E,E,3,[[["self"]],[R[1189]]]]],"p":[[3,"Range"],[3,R[1190]],[3,R[1935]],[3,R[1191]]]};
searchIndex["num_rational"]={"doc":"Rational numbers","i":[[3,"Ratio","num_rational",R[1936],N,N],[3,R[1454],E,E,N,N],[6,"Rational",E,R[1844],N,N],[6,"Rational32",E,R[1937],N,N],[6,"Rational64",E,R[1938],N,N],[6,R[1845],E,R[1846],N,N],[11,"new",E,R[1939],0,[[[T]],["ratio"]]],[11,R[1940],E,R[1941],0,[[[T]],["ratio"]]],[11,"new_raw",E,R[1942],0,[[[T]],["ratio"]]],[11,"to_integer",E,R[1943],0,[[["self"]],[T]]],[11,"numer",E,R[1944],0,[[["self"]],[T]]],[11,"denom",E,R[1945],0,[[["self"]],[T]]],[11,"is_integer",E,R[1946],0,[[["self"]],["bool"]]],[11,"reduced",E,R[1947],0,[[["self"]],["ratio"]]],[11,"recip",E,R[1948],0,[[["self"]],["ratio"]]],[11,"floor",E,R[1949],0,[[["self"]],["ratio"]]],[11,"ceil",E,R[1950],0,[[["self"]],["ratio"]]],[11,"round",E,R[1951],0,[[["self"]],["ratio"]]],[11,"trunc",E,R[1952],0,[[["self"]],["ratio"]]],[11,"fract",E,R[1953],0,[[["self"]],["ratio"]]],[11,"pow",E,R[1954],0,[[["self"],["i32"]],["ratio"]]],[11,"from_float",E,R[1955],0,[[["floatcore"]],[[R[1448]],[R[32],[R[1448]]]]]],[11,R[1956],E,E,0,[[["numcast"],["floatcore"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[95],E,E,1,[[["self"]],[R[63]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,R[1957],0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"div",E,E,0,[[["ratio"]],["ratio"]]],[11,"div",E,E,0,[[[T]],["ratio"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[1449]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1449]]],["bool"]]],[11,"cmp",E,E,0,[[["self"]],[R[31]]]],[11,R[117],E,E,0,[[["self"]],[[R[31]],[R[32],[R[31]]]]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"add",E,E,0,[[["ratio"]],["ratio"]]],[11,"add",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"sub",E,E,0,[[["ratio"]],["ratio"]]],[11,"sub",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"mul",E,E,0,[[["ratio"]],["ratio"]]],[11,"mul",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"rem",E,E,0,[[["ratio"]],["ratio"]]],[11,"rem",E,E,0,[[[T]],["ratio"]]],[11,"neg",E,E,0,[[],["ratio"]]],[11,R[781],E,E,0,[[["self"],["ratio"]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[781],E,E,0,[[["self"],["ratio"]]]],[11,R[781],E,E,0,[[["self"],[T]]]],[11,R[782],E,E,0,[[["self"],["ratio"]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,R[782],E,E,0,[[["self"],["ratio"]]]],[11,R[782],E,E,0,[[["self"],[T]]]],[11,R[783],E,E,0,[[["self"],["ratio"]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,R[783],E,E,0,[[["self"],["ratio"]]]],[11,R[783],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"],["ratio"]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[784],E,E,0,[[["self"],["ratio"]]]],[11,R[784],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"],["ratio"]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,R[785],E,E,0,[[["self"],["ratio"]]]],[11,R[785],E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["h"]]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"product",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,R[712],E,R[1958],0,[[["str"]],[[R[1449]],["ratio"],[R[2],["ratio",R[1449]]]]]],[11,"into",E,E,0,[[]]],[11,"from",E,E,0,[[[T]],["ratio"]]],[11,"from",E,E,0,[[],["ratio"]]],[11,"clone",E,E,0,[[["self"]],["ratio"]]],[11,"clone",E,E,1,[[["self"]],[R[1449]]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i8"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i16"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i32"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["i64"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["isize"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u8"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u16"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u32"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["u64"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"pow",E,E,0,[[["usize"]],["ratio"]]],[11,"zero",E,E,0,[[],["ratio"]]],[11,"is_zero",E,E,0,[[["self"]],["bool"]]],[11,R[1873],E,E,0,[[["self"]]]],[11,R[793],E,R[1959],0,[[["u32"],["str"]],[[R[1449]],["ratio"],[R[2],["ratio",R[1449]]]]]],[11,R[1442],E,E,0,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[1441],E,E,0,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[1443],E,E,0,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,R[1440],E,E,0,[[["self"],["ratio"]],[[R[32],["ratio"]],["ratio"]]]],[11,"one",E,E,0,[[],["ratio"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,R[1450],E,E,0,[[["i64"]],[R[32]]]],[11,R[790],E,E,0,[[["i128"]],[R[32]]]],[11,R[1451],E,E,0,[[["u64"]],[R[32]]]],[11,R[791],E,E,0,[[["u128"]],[R[32]]]],[11,R[1453],E,E,0,[[["f32"]],[R[32]]]],[11,R[1452],E,E,0,[[["f64"]],[R[32]]]],[11,"abs",E,E,0,[[["self"]],["ratio"]]],[11,"abs_sub",E,E,0,[[["self"],["ratio"]],["ratio"]]],[11,"signum",E,E,0,[[["self"]],["ratio"]]],[11,R[1445],E,E,0,[[["self"]],["bool"]]],[11,R[1446],E,E,0,[[["self"]],["bool"]]],[11,"inv",E,E,0,[[],["ratio"]]],[11,R[409],E,E,1,[[["self"]],["str"]]]],"p":[[3,"Ratio"],[3,R[1454]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[603],R[531],E,N,N],[12,"kind",E,E,0,N],[4,R[604],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,R[1843],N,[[[R[530]]],[R[530]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds",R[1778],N,N],[10,R[532],E,R[1779],2,[[],["self"]]],[10,R[533],E,R[1780],2,[[],["self"]]],[0,"cast",R[531],E,N,N],[5,"cast","num_traits::cast",R[1744],N,[[["numcast"]],[[R[32]],["numcast"]]]],[8,R[605],E,R[1712],N,N],[11,"to_isize",E,R[1713],3,[[["self"]],[["isize"],[R[32],["isize"]]]]],[11,"to_i8",E,R[1714],3,[[["self"]],[[R[32],["i8"]],["i8"]]]],[11,"to_i16",E,R[1715],3,[[["self"]],[[R[32],["i16"]],["i16"]]]],[11,"to_i32",E,R[1716],3,[[["self"]],[[R[32],["i32"]],["i32"]]]],[10,"to_i64",E,R[1717],3,[[["self"]],[["i64"],[R[32],["i64"]]]]],[11,"to_i128",E,R[1718],3,[[["self"]],[[R[32],["i128"]],["i128"]]]],[11,R[794],E,R[1719],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"to_u8",E,R[1720],3,[[["self"]],[[R[32],["u8"]],["u8"]]]],[11,"to_u16",E,R[1721],3,[[["self"]],[["u16"],[R[32],["u16"]]]]],[11,"to_u32",E,R[1722],3,[[["self"]],[[R[32],["u32"]],["u32"]]]],[10,"to_u64",E,R[1723],3,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"to_u128",E,R[1724],3,[[["self"]],[[R[32],["u128"]],["u128"]]]],[11,"to_f32",E,R[1725],3,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"to_f64",E,R[1726],3,[[["self"]],[["f64"],[R[32],["f64"]]]]],[8,R[606],E,R[1727],N,N],[11,R[789],E,R[1728],4,[[["isize"]],[R[32]]]],[11,"from_i8",E,R[1729],4,[[["i8"]],[R[32]]]],[11,"from_i16",E,R[1730],4,[[["i16"]],[R[32]]]],[11,"from_i32",E,R[1731],4,[[["i32"]],[R[32]]]],[10,R[1450],E,R[1732],4,[[["i64"]],[R[32]]]],[11,R[790],E,R[1733],4,[[["i128"]],[R[32]]]],[11,R[625],E,R[1734],4,[[["usize"]],[R[32]]]],[11,"from_u8",E,R[1735],4,[[["u8"]],[R[32]]]],[11,"from_u16",E,R[1736],4,[[["u16"]],[R[32]]]],[11,"from_u32",E,R[1737],4,[[["u32"]],[R[32]]]],[10,R[1451],E,R[1738],4,[[["u64"]],[R[32]]]],[11,R[791],E,R[1739],4,[[["u128"]],[R[32]]]],[11,R[1453],E,R[1740],4,[[["f32"]],[R[32]]]],[11,R[1452],E,R[1741],4,[[["f64"]],[R[32]]]],[8,"NumCast",E,R[1742],N,N],[10,"from",E,R[1743],5,[[[R[792]]],[R[32]]]],[8,R[607],E,R[1782],N,N],[10,"as_",E,R[1783],6,[[],[T]]],[0,"float",R[531],E,N,N],[8,R[608],"num_traits::float",R[1960],N,N],[10,"infinity",E,R[1961],7,[[],["self"]]],[10,R[534],E,R[1962],7,[[],["self"]]],[10,"nan",E,R[1963],7,[[],["self"]]],[10,"neg_zero",E,R[535],7,[[],["self"]]],[10,R[532],E,R[536],7,[[],["self"]]],[10,R[537],E,R[538],7,[[],["self"]]],[10,"epsilon",E,R[539],7,[[],["self"]]],[10,R[533],E,R[540],7,[[],["self"]]],[11,"is_nan",E,R[1964],7,[[],["bool"]]],[11,R[541],E,R[1965],7,[[],["bool"]]],[11,R[542],E,R[1966],7,[[],["bool"]]],[11,R[543],E,R[544],7,[[],["bool"]]],[10,"classify",E,R[545],7,[[],[R[546]]]],[11,"floor",E,R[547],7,[[],["self"]]],[11,"ceil",E,R[548],7,[[],["self"]]],[11,"round",E,R[549],7,[[],["self"]]],[11,"trunc",E,R[550],7,[[],["self"]]],[11,"fract",E,R[551],7,[[],["self"]]],[11,"abs",E,R[552],7,[[],["self"]]],[11,"signum",E,R[553],7,[[],["self"]]],[11,R[554],E,R[1967],7,[[],["bool"]]],[11,R[555],E,R[1968],7,[[],["bool"]]],[11,"min",E,R[560],7,[[],["self"]]],[11,"max",E,R[559],7,[[],["self"]]],[11,"recip",E,R[1969],7,[[],["self"]]],[11,"powi",E,R[556],7,[[["i32"]],["self"]]],[10,R[557],E,R[1970],7,[[],["self"]]],[10,R[558],E,R[1971],7,[[],["self"]]],[10,R[561],E,R[562],7,[[]]],[8,"Float",E,R[1784],N,N],[10,"nan",E,R[1785],8,[[],["self"]]],[10,"infinity",E,R[1786],8,[[],["self"]]],[10,R[534],E,R[1787],8,[[],["self"]]],[10,"neg_zero",E,R[535],8,[[],["self"]]],[10,R[532],E,R[536],8,[[],["self"]]],[10,R[537],E,R[538],8,[[],["self"]]],[11,"epsilon",E,R[539],8,[[],["self"]]],[10,R[533],E,R[540],8,[[],["self"]]],[10,"is_nan",E,R[1788],8,[[],["bool"]]],[10,R[541],E,R[1789],8,[[],["bool"]]],[10,R[542],E,R[1790],8,[[],["bool"]]],[10,R[543],E,R[544],8,[[],["bool"]]],[10,"classify",E,R[545],8,[[],[R[546]]]],[10,"floor",E,R[547],8,[[],["self"]]],[10,"ceil",E,R[548],8,[[],["self"]]],[10,"round",E,R[549],8,[[],["self"]]],[10,"trunc",E,R[550],8,[[],["self"]]],[10,"fract",E,R[551],8,[[],["self"]]],[10,"abs",E,R[552],8,[[],["self"]]],[10,"signum",E,R[553],8,[[],["self"]]],[10,R[554],E,R[570],8,[[],["bool"]]],[10,R[555],E,R[571],8,[[],["bool"]]],[10,"mul_add",E,R[566],8,[[],["self"]]],[10,"recip",E,R[572],8,[[],["self"]]],[10,"powi",E,R[556],8,[[["i32"]],["self"]]],[10,"powf",E,R[1791],8,[[],["self"]]],[10,"sqrt",E,R[573],8,[[],["self"]]],[10,"exp",E,R[574],8,[[],["self"]]],[10,"exp2",E,R[575],8,[[],["self"]]],[10,"ln",E,R[576],8,[[],["self"]]],[10,"log",E,R[577],8,[[],["self"]]],[10,"log2",E,R[578],8,[[],["self"]]],[10,"log10",E,R[579],8,[[],["self"]]],[11,R[557],E,R[580],8,[[],["self"]]],[11,R[558],E,R[581],8,[[],["self"]]],[10,"max",E,R[559],8,[[],["self"]]],[10,"min",E,R[560],8,[[],["self"]]],[10,"abs_sub",E,R[582],8,[[],["self"]]],[10,"cbrt",E,R[583],8,[[],["self"]]],[10,"hypot",E,R[584],8,[[],["self"]]],[10,"sin",E,R[585],8,[[],["self"]]],[10,"cos",E,R[586],8,[[],["self"]]],[10,"tan",E,R[587],8,[[],["self"]]],[10,"asin",E,R[588],8,[[],["self"]]],[10,"acos",E,R[589],8,[[],["self"]]],[10,"atan",E,R[590],8,[[],["self"]]],[10,"atan2",E,R[591],8,[[],["self"]]],[10,"sin_cos",E,R[592],8,[[]]],[10,"exp_m1",E,R[593],8,[[],["self"]]],[10,"ln_1p",E,R[594],8,[[],["self"]]],[10,"sinh",E,R[595],8,[[],["self"]]],[10,"cosh",E,R[596],8,[[],["self"]]],[10,"tanh",E,R[597],8,[[],["self"]]],[10,"asinh",E,R[598],8,[[],["self"]]],[10,"acosh",E,R[599],8,[[],["self"]]],[10,"atanh",E,R[600],8,[[],["self"]]],[10,R[561],E,R[562],8,[[]]],[8,R[609],E,E,N,N],[10,"E",E,R[1972],9,[[],["self"]]],[10,"FRAC_1_PI",E,R[1973],9,[[],["self"]]],[10,R[1974],E,R[1975],9,[[],["self"]]],[10,"FRAC_2_PI",E,R[1976],9,[[],["self"]]],[10,R[1977],E,R[1978],9,[[],["self"]]],[10,"FRAC_PI_2",E,R[1979],9,[[],["self"]]],[10,"FRAC_PI_3",E,R[1980],9,[[],["self"]]],[10,"FRAC_PI_4",E,R[1981],9,[[],["self"]]],[10,"FRAC_PI_6",E,R[1982],9,[[],["self"]]],[10,"FRAC_PI_8",E,R[1983],9,[[],["self"]]],[10,"LN_10",E,R[1984],9,[[],["self"]]],[10,"LN_2",E,R[1985],9,[[],["self"]]],[10,"LOG10_E",E,R[1986],9,[[],["self"]]],[10,"LOG2_E",E,R[1987],9,[[],["self"]]],[10,"PI",E,R[1988],9,[[],["self"]]],[10,"SQRT_2",E,R[1989],9,[[],["self"]]],[0,"identities",R[531],E,N,N],[5,"zero","num_traits::identities",R[1800],N,[[],["zero"]]],[5,"one",E,R[1801],N,[[],["one"]]],[8,"Zero",E,R[1792],N,N],[10,"zero",E,R[1793],10,[[],["self"]]],[11,R[1873],E,R[1794],10,[[["self"]]]],[10,"is_zero",E,R[1795],10,[[["self"]],["bool"]]],[8,"One",E,R[1796],N,N],[10,"one",E,R[1797],11,[[],["self"]]],[11,"set_one",E,R[1798],11,[[["self"]]]],[11,"is_one",E,R[1799],11,[[["self"]],["bool"]]],[0,"int",R[531],E,N,N],[8,"PrimInt","num_traits::int",R[1802],N,N],[10,R[1990],E,R[1803],12,[[],["u32"]]],[10,R[1804],E,R[1805],12,[[],["u32"]]],[10,R[1806],E,R[1807],12,[[],["u32"]]],[10,R[1808],E,R[1809],12,[[],["u32"]]],[10,R[1810],E,R[563],12,[[["u32"]],["self"]]],[10,R[1811],E,R[564],12,[[["u32"]],["self"]]],[10,R[1991],E,R[563],12,[[["u32"]],["self"]]],[10,R[1992],E,R[564],12,[[["u32"]],["self"]]],[10,R[1812],E,R[563],12,[[["u32"]],["self"]]],[10,R[1813],E,R[564],12,[[["u32"]],["self"]]],[10,R[1993],E,R[1814],12,[[],["self"]]],[10,"from_be",E,R[1815],12,[[],["self"]]],[10,"from_le",E,R[1816],12,[[],["self"]]],[10,"to_be",E,R[1817],12,[[],["self"]]],[10,"to_le",E,R[1818],12,[[],["self"]]],[10,"pow",E,R[1819],12,[[["u32"]],["self"]]],[0,"ops",R[531],E,N,N],[0,"checked",R[565],E,N,N],[8,R[610],"num_traits::ops::checked",R[1820],N,N],[10,R[1442],E,R[1821],13,[[["self"]],[R[32]]]],[8,R[611],E,R[1822],N,N],[10,R[1441],E,R[1823],14,[[["self"]],[R[32]]]],[8,R[612],E,R[1824],N,N],[10,R[1443],E,R[1825],15,[[["self"]],[R[32]]]],[8,R[613],E,R[1826],N,N],[10,R[1440],E,R[1827],16,[[["self"]],[R[32]]]],[8,R[614],E,R[1994],N,N],[10,R[1995],E,R[1996],17,[[["self"]],[R[32]]]],[8,R[615],E,R[1997],N,N],[10,R[1998],E,R[1999],18,[[["self"]],[R[32]]]],[8,R[616],E,R[2000],N,N],[10,R[2001],E,R[2002],19,[[["self"],["u32"]],[R[32]]]],[8,R[617],E,R[2003],N,N],[10,R[2004],E,R[2005],20,[[["self"],["u32"]],[R[32]]]],[0,"inv",R[565],E,N,N],[8,"Inv","num_traits::ops::inv",R[2006],N,N],[16,"Output",E,R[569],21,N],[10,"inv",E,R[2007],21,[[]]],[0,"mul_add",R[565],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[566],N,N],[16,"Output",E,R[2008],22,N],[10,"mul_add",E,R[567],22,[[["a"],["b"]]]],[8,R[618],E,R[2009],N,N],[10,R[787],E,R[567],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[565],E,N,N],[8,R[619],"num_traits::ops::saturating",R[1829],N,N],[10,R[1830],E,R[1831],24,[[],["self"]]],[10,R[1832],E,R[1833],24,[[],["self"]]],[0,"wrapping",R[565],E,N,N],[8,R[620],"num_traits::ops::wrapping",R[2010],N,N],[10,R[2011],E,R[2012],25,[[["self"]],["self"]]],[8,R[621],E,R[2013],N,N],[10,R[2014],E,R[2015],26,[[["self"]],["self"]]],[8,R[622],E,R[2016],N,N],[10,R[2017],E,R[2018],27,[[["self"]],["self"]]],[8,R[623],E,R[2019],N,N],[10,R[2020],E,R[2021],28,[[["self"],["u32"]],["self"]]],[8,R[624],E,R[2022],N,N],[10,R[2023],E,R[2024],29,[[["self"],["u32"]],["self"]]],[0,"pow",R[531],E,N,N],[5,"pow","num_traits::pow",R[1745],N,[[["clone"],["usize"],["mul"],["one"]],[["clone"],["one"],["mul"]]]],[5,R[1746],E,R[1747],N,[[["clone"],[R[568]],["one"],["usize"]],[["clone"],[R[568]],["one"],[R[32]]]]],[8,"Pow",E,R[1834],N,N],[16,"Output",E,R[569],30,N],[10,"pow",E,R[1835],30,[[["rhs"]]]],[0,"real",R[531],E,N,N],[8,"Real","num_traits::real",R[2025],N,N],[10,R[532],E,R[536],31,[[],["self"]]],[10,R[537],E,R[538],31,[[],["self"]]],[10,"epsilon",E,R[539],31,[[],["self"]]],[10,R[533],E,R[540],31,[[],["self"]]],[10,"floor",E,R[547],31,[[],["self"]]],[10,"ceil",E,R[548],31,[[],["self"]]],[10,"round",E,R[549],31,[[],["self"]]],[10,"trunc",E,R[550],31,[[],["self"]]],[10,"fract",E,R[551],31,[[],["self"]]],[10,"abs",E,R[552],31,[[],["self"]]],[10,"signum",E,R[553],31,[[],["self"]]],[10,R[554],E,R[570],31,[[],["bool"]]],[10,R[555],E,R[571],31,[[],["bool"]]],[10,"mul_add",E,R[566],31,[[],["self"]]],[10,"recip",E,R[572],31,[[],["self"]]],[10,"powi",E,R[556],31,[[["i32"]],["self"]]],[10,"powf",E,R[2026],31,[[],["self"]]],[10,"sqrt",E,R[573],31,[[],["self"]]],[10,"exp",E,R[574],31,[[],["self"]]],[10,"exp2",E,R[575],31,[[],["self"]]],[10,"ln",E,R[576],31,[[],["self"]]],[10,"log",E,R[577],31,[[],["self"]]],[10,"log2",E,R[578],31,[[],["self"]]],[10,"log10",E,R[579],31,[[],["self"]]],[10,R[557],E,R[580],31,[[],["self"]]],[10,R[558],E,R[581],31,[[],["self"]]],[10,"max",E,R[559],31,[[],["self"]]],[10,"min",E,R[560],31,[[],["self"]]],[10,"abs_sub",E,R[582],31,[[],["self"]]],[10,"cbrt",E,R[583],31,[[],["self"]]],[10,"hypot",E,R[584],31,[[],["self"]]],[10,"sin",E,R[585],31,[[],["self"]]],[10,"cos",E,R[586],31,[[],["self"]]],[10,"tan",E,R[587],31,[[],["self"]]],[10,"asin",E,R[588],31,[[],["self"]]],[10,"acos",E,R[589],31,[[],["self"]]],[10,"atan",E,R[590],31,[[],["self"]]],[10,"atan2",E,R[591],31,[[],["self"]]],[10,"sin_cos",E,R[592],31,[[]]],[10,"exp_m1",E,R[593],31,[[],["self"]]],[10,"ln_1p",E,R[594],31,[[],["self"]]],[10,"sinh",E,R[595],31,[[],["self"]]],[10,"cosh",E,R[596],31,[[],["self"]]],[10,"tanh",E,R[597],31,[[],["self"]]],[10,"asinh",E,R[598],31,[[],["self"]]],[10,"acosh",E,R[599],31,[[],["self"]]],[10,"atanh",E,R[600],31,[[],["self"]]],[0,"sign",R[531],E,N,N],[5,"abs","num_traits::sign",R[601],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[582],N,[[["signed"]],["signed"]]],[5,"signum",E,R[602],N,[[["signed"]],["signed"]]],[8,"Signed",E,R[1836],N,N],[10,"abs",E,R[601],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[582],32,[[["self"]],["self"]]],[10,"signum",E,R[602],32,[[["self"]],["self"]]],[10,R[1445],E,R[1837],32,[[["self"]],["bool"]]],[10,R[1446],E,R[1838],32,[[["self"]],["bool"]]],[8,"Unsigned",E,R[1839],N,N],[8,"Num",R[531],R[1840],N,N],[16,R[1841],E,E,33,N],[10,R[793],E,R[1842],33,[[["u32"],["str"]],[R[2]]]],[8,"NumOps",E,R[2027],N,N],[8,"NumRef",E,R[2028],N,N],[8,"RefNum",E,R[2029],N,N],[8,R[2030],E,R[2031],N,N],[8,"NumAssign",E,R[2032],N,N],[8,R[2033],E,R[2034],N,N],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]]],"p":[[3,R[603]],[4,R[604]],[8,"Bounded"],[8,R[605]],[8,R[606]],[8,"NumCast"],[8,R[607]],[8,R[608]],[8,"Float"],[8,R[609]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[610]],[8,R[611]],[8,R[612]],[8,R[613]],[8,R[614]],[8,R[615]],[8,R[616]],[8,R[617]],[8,"Inv"],[8,"MulAdd"],[8,R[618]],[8,R[619]],[8,R[620]],[8,R[621]],[8,R[622]],[8,R[623]],[8,R[624]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["proc_macro2"]={"doc":"A wrapper around the procedural macro API of the…","i":[[3,R[179],R[166],"An abstract stream of tokens, or more concretely a…",N,N],[3,"LexError",E,"Error returned from `TokenStream::from_str`.",N,N],[3,"Span",E,"A region of source code, along with macro expansion…",N,N],[3,"Group",E,"A delimited token stream.",N,N],[3,"Punct",E,"An `Punct` is an single punctuation character like `+`,…",N,N],[3,"Ident",E,R[829],N,N],[3,"Literal",E,"A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",N,N],[4,R[177],E,"A single token or a delimited sequence of token trees…",N,N],[13,"Group",E,"A token stream surrounded by bracket delimiters.",0,N],[13,"Ident",E,"An identifier.",0,N],[13,"Punct",E,"A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal",E,"A literal character (`'a'`), string (`\"hello\"`), number…",0,N],[4,R[178],E,"Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis",E,"`( ... )`",1,N],[13,"Brace",E,"`{ ... }`",1,N],[13,"Bracket",E,"`[ ... ]`",1,N],[13,"None",E,"`Ø ... Ø`",1,N],[4,"Spacing",E,"Whether an `Punct` is followed immediately by another…",N,N],[13,"Alone",E,"E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint",E,"E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[0,R[938],E,"Public implementation details for the `TokenStream` type,…",N,N],[3,R[165],R[173],"An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"new",R[166],"Returns an empty `TokenStream` containing no token trees.",3,[[],[R[167]]]],[11,"empty",E,E,3,[[],[R[167]]]],[11,R[45],E,"Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site",E,"The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap",E,"Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span",E,"Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,R[169],E,"Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Group` with the given delimiter and token…",5,[[[R[168]],[R[167]]],["group"]]],[11,R[168],E,"Returns the delimiter of this `Group`",5,[[["self"]],[R[168]]]],[11,"stream",E,"Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],[R[167]]]],[11,"span",E,"Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,R[169],E,"Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new",E,"Creates a new `Punct` from the given character and spacing.",6,[[["char"],["spacing"]],["punct"]]],[11,"as_char",E,"Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing",E,"Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span",E,"Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,R[169],E,"Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new",E,R[1109],7,[[["str"],["span"]],["ident"]]],[11,"span",E,R[1110],7,[[["self"]],["span"]]],[11,R[169],E,R[1111],7,[[["self"],["span"]]]],[11,"u8_suffixed",E,R[170],8,[[["u8"]],[R[171]]]],[11,"u16_suffixed",E,R[170],8,[[["u16"]],[R[171]]]],[11,"u32_suffixed",E,R[170],8,[[["u32"]],[R[171]]]],[11,"u64_suffixed",E,R[170],8,[[["u64"]],[R[171]]]],[11,"usize_suffixed",E,R[170],8,[[["usize"]],[R[171]]]],[11,"i8_suffixed",E,R[170],8,[[["i8"]],[R[171]]]],[11,"i16_suffixed",E,R[170],8,[[["i16"]],[R[171]]]],[11,"i32_suffixed",E,R[170],8,[[["i32"]],[R[171]]]],[11,"i64_suffixed",E,R[170],8,[[["i64"]],[R[171]]]],[11,"isize_suffixed",E,R[170],8,[[["isize"]],[R[171]]]],[11,"u128_suffixed",E,R[170],8,[[["u128"]],[R[171]]]],[11,"i128_suffixed",E,R[170],8,[[["i128"]],[R[171]]]],[11,"u8_unsuffixed",E,R[172],8,[[["u8"]],[R[171]]]],[11,"u16_unsuffixed",E,R[172],8,[[["u16"]],[R[171]]]],[11,"u32_unsuffixed",E,R[172],8,[[["u32"]],[R[171]]]],[11,"u64_unsuffixed",E,R[172],8,[[["u64"]],[R[171]]]],[11,"usize_unsuffixed",E,R[172],8,[[["usize"]],[R[171]]]],[11,"i8_unsuffixed",E,R[172],8,[[["i8"]],[R[171]]]],[11,"i16_unsuffixed",E,R[172],8,[[["i16"]],[R[171]]]],[11,"i32_unsuffixed",E,R[172],8,[[["i32"]],[R[171]]]],[11,"i64_unsuffixed",E,R[172],8,[[["i64"]],[R[171]]]],[11,"isize_unsuffixed",E,R[172],8,[[["isize"]],[R[171]]]],[11,"u128_unsuffixed",E,R[172],8,[[["u128"]],[R[171]]]],[11,"i128_unsuffixed",E,R[172],8,[[["i128"]],[R[171]]]],[11,"f64_unsuffixed",E,E,8,[[["f64"]],[R[171]]]],[11,"f64_suffixed",E,E,8,[[["f64"]],[R[171]]]],[11,"f32_unsuffixed",E,"Creates a new unsuffixed floating-point literal.",8,[[["f32"]],[R[171]]]],[11,"f32_suffixed",E,E,8,[[["f32"]],[R[171]]]],[11,R[63],E,E,8,[[["str"]],[R[171]]]],[11,"character",E,E,8,[[["char"]],[R[171]]]],[11,"byte_string",E,E,8,[[],[R[171]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,R[169],E,E,8,[[["self"],["span"]]]],[11,"into",E,E,3,[[],[U]]],[11,R[30],E,E,3,[[],["i"]]],[11,R[95],E,E,3,[[["self"]],[R[63]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,R[95],E,E,5,[[["self"]],[R[63]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,R[95],E,E,6,[[["self"]],[R[63]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[95],E,E,7,[[["self"]],[R[63]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,R[95],E,E,8,[[["self"]],[R[63]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",R[173],E,10,[[],[U]]],[11,R[30],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"extend",R[166],E,3,[[["self"],[R[120]]]]],[11,"extend",E,E,3,[[["self"],[R[120]]]]],[11,"clone",E,E,3,[[["self"]],[R[167]]]],[11,"clone",E,E,4,[[["self"]],["span"]]],[11,"clone",E,E,0,[[["self"]],[R[175]]]],[11,"clone",E,E,5,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],[R[168]]]],[11,"clone",E,E,6,[[["self"]],["punct"]]],[11,"clone",E,E,2,[[["self"]],["spacing"]]],[11,"clone",E,E,7,[[["self"]],["ident"]]],[11,"clone",E,E,8,[[["self"]],[R[171]]]],[11,"clone",R[173],E,10,[[["self"]],[R[174]]]],[11,"cmp",R[166],E,7,[[["self"],["ident"]],[R[31]]]],[11,R[30],E,E,3,[[],[R[174]]]],[11,R[99],E,E,3,[[],["self"]]],[11,"from",E,E,4,[[["span"]],["span"]]],[11,"from",E,E,3,[[[R[167]]],[R[167]]]],[11,"from",E,E,0,[[["group"]],[R[175]]]],[11,"from",E,E,0,[[["ident"]],[R[175]]]],[11,"from",E,E,0,[[["punct"]],[R[175]]]],[11,"from",E,E,0,[[[R[171]]],[R[175]]]],[11,R[117],E,E,7,[[["self"],["ident"]],[[R[31]],[R[32],[R[31]]]]]],[11,"eq",E,E,1,[[["self"],[R[168]]],["bool"]]],[11,"eq",E,E,2,[[["self"],["spacing"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,7,[[["self"],[T]],["bool"]]],[11,"next",R[173],E,10,[[["self"]],[[R[32],[R[175]]],[R[175]]]]],[11,"fmt",R[166],E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[173],E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[166],E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"hash",E,E,7,[[["self"],["h"]]]],[11,R[176],E,E,3,[[[R[120]]],["self"]]],[11,R[176],E,E,3,[[[R[120]]],["self"]]],[11,R[712],E,E,3,[[["str"]],[[R[2],[R[167],"lexerror"]],[R[167]],["lexerror"]]]]],"p":[[4,R[177]],[4,R[178]],[4,"Spacing"],[3,R[179]],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,R[165]]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,R[480],"quote","TokenStream extension trait with methods for appending…",N,N],[10,"append",E,R[477],0,[[["self"],[U]]]],[10,"append_all",E,R[477],0,[[["self"],["i"]]]],[10,"append_separated",E,R[477],0,[[["self"],["i"],[U]]]],[10,"append_terminated",E,R[477],0,[[["self"],["i"],[U]]]],[8,"ToTokens",E,"Types that can be interpolated inside a [`quote!`]…",N,N],[10,R[1108],E,"Write `self` to the given `TokenStream`.",1,[[["self"],[R[167]]]]],[11,R[478],E,R[479],1,[[],[R[167]]]],[14,"quote",E,"The whole point.",N,N],[14,"quote_spanned",E,"Same as `quote!`, but applies a given span to all tokens…",N,N],[11,R[478],E,R[479],1,[[],[R[167]]]]],"p":[[8,R[480]],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","i":[[3,"OsRng","rand",R[795],N,N],[3,R[674],E,R[635],N,N],[3,R[636],E,R[637],N,N],[3,R[633],E,R[634],N,N],[0,"isaac",E,"The ISAAC random number generator.",N,N],[3,R[636],R[804],R[637],N,N],[3,R[674],E,R[635],N,N],[0,"chacha","rand","The ChaCha random number generator.",N,N],[3,R[633],R[805],R[634],N,N],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it…",N,N],[3,R[673],R[647],"A wrapper around any RNG which reseeds the underlying RNG…",N,N],[12,"reseeder",E,"Controls the behaviour when reseeding the RNG.",0,N],[8,"Reseeder",E,"Something that can be used to reseed an RNG via…",N,N],[10,"reseed",E,"Reseed the given RNG.",1,[[["self"],["r"]]]],[3,R[680],E,"Reseed an RNG using a `Default` instance. This reseeds by…",N,N],[0,"os","rand","Interfaces to the operating system provided random number…",N,N],[3,"OsRng",R[653],R[795],N,N],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",N,N],[3,"ReadRng",R[646],"An RNG that reads random bytes straight from a `Read`.…",N,N],[8,"Rng","rand","A random number generator.",N,N],[10,R[652],E,"Return the next random u32.",2,[[["self"]],["u32"]]],[11,R[654],E,"Return the next random u64.",2,[[["self"]],["u64"]]],[11,"next_f32",E,"Return the next random f32 selected from the half-open…",2,[[["self"]],["f32"]]],[11,"next_f64",E,"Return the next random f64 selected from the half-open…",2,[[["self"]],["f64"]]],[11,R[651],E,R[733],2,[[["self"]]]],[11,"gen",E,"Return a random value of a `Rand` type.",2,[[["self"]],[T]]],[11,"gen_iter",E,"Return an iterator that will yield an infinite number of…",2,[[["self"]],["generator"]]],[11,"gen_range",E,"Generate a random value in the range [`low`, `high`).",2,[[["self"],[T]],[T]]],[11,"gen_weighted_bool",E,"Return a bool with a 1 in n chance of true",2,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars",E,"Return an iterator of random characters from the set…",2,[[["self"]],["asciigenerator"]]],[11,"choose",E,"Return a random element from `values`.",2,[[["self"]],[[T],[R[32]]]]],[11,"choose_mut",E,"Return a mutable pointer to a random element from `values`.",2,[[["self"]],[[R[32]],[T]]]],[11,"shuffle",E,"Shuffle a mutable slice in place.",2,[[["self"]]]],[8,"Rand",E,"A type that can be randomly generated using an `Rng`.",N,N],[10,"rand",E,"Generates a random instance of this type using the…",3,[[["r"]],["self"]]],[8,R[676],E,"A random number generator that can be explicitly seeded to…",N,N],[10,"reseed",E,"Reseed an RNG with the given seed.",4,[[["self"],["seed"]]]],[10,R[655],E,"Create a new RNG with the given seed.",4,[[["seed"]],["self"]]],[3,R[677],E,"Iterator which will generate a stream of random items.",N,N],[3,R[678],E,"Iterator which will continuously generate random ascii…",N,N],[3,R[675],E,"An Xorshift[1] random number generator.",N,N],[3,"Open01",E,R[629],N,N],[12,"0",E,E,5,N],[3,"Closed01",E,R[629],N,N],[12,"0",E,E,6,N],[3,"StdRng",E,"The standard RNG. This is designed to be efficient on the…",N,N],[5,"weak_rng",E,"Create a weak random number generator with a default…",N,[[],[R[639]]]],[3,R[679],E,"The thread-local RNG.",N,N],[5,"thread_rng",E,"Retrieve the lazily-initialized thread-local random number…",N,[[],[R[662]]]],[5,"random",E,"Generates a random value using the thread-local random…",N,[[],[T]]],[5,"sample",E,"DEPRECATED: use `seq::sample_iter` instead.",N,[[["i"],["r"],["usize"]],["vec"]]],[0,"distributions",E,"Sampling from random distributions.",N,N],[3,"Range",R[630],R[796],N,N],[3,"Gamma",E,R[797],N,N],[3,R[665],E,R[798],N,N],[3,"FisherF",E,R[799],N,N],[3,R[807],E,R[800],N,N],[3,"Normal",E,R[801],N,N],[3,R[667],E,R[802],N,N],[3,"Exp",E,R[803],N,N],[0,"range",E,"Generating numbers between two others.",N,N],[3,"Range",R[641],R[796],N,N],[8,R[664],E,"The helper trait for types that have a sensible way to…",N,N],[10,"construct_range",E,"Construct the `Range` object that `sample_range` requires.…",7,[[],["range"]]],[10,"sample_range",E,"Sample a value from the given `Range` with the given `Rng`…",7,[[["range"],["r"]],["self"]]],[0,"gamma",R[630],"The Gamma and derived distributions.",N,N],[3,"Gamma",R[642],R[797],N,N],[3,R[665],E,R[798],N,N],[3,"FisherF",E,R[799],N,N],[3,R[807],E,R[800],N,N],[0,"normal",R[630],"The normal and derived distributions.",N,N],[3,R[666],R[643],"A wrapper around an `f64` to generate N(0, 1) random…",N,N],[12,"0",E,E,8,N],[3,"Normal",E,R[801],N,N],[3,R[667],E,R[802],N,N],[0,"exponential",R[630],"The exponential distribution.",N,N],[3,"Exp1",R[644],"A wrapper around an `f64` to generate Exp(1) random numbers.",N,N],[12,"0",E,E,9,N],[3,"Exp",E,R[803],N,N],[8,"Sample",R[630],"Types that can be used to create a random instance of…",N,N],[10,"sample",E,"Generate a random value of `Support`, using `rng` as the…",10,[[["self"],["r"]],["support"]]],[8,R[668],E,"`Sample`s that do not require keeping track of state.",N,N],[10,R[648],E,"Generate a random value.",11,[[["self"],["r"]],["support"]]],[3,R[669],E,"A wrapper for generating types that implement `Rand` via…",N,N],[3,"Weighted",E,"A value with a particular weight for use with…",N,N],[12,"weight",E,"The numerical weight of this item",12,N],[12,"item",E,"The actual item which is being weighted",12,N],[3,R[670],E,"A distribution that selects from a finite collection of…",N,N],[11,"into",R[653],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",R[804],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[37],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"],[T]]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"],[T]]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",R[805],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"],[T]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",R[647],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[37],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"],[T]]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",R[646],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into","rand",E,19,[[],[U]]],[11,R[30],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,R[30],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[37],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"],[T]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[37],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"],[T]]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[37],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"],[T]]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",R[641],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",R[642],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[37],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"],[T]]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[37],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"],[T]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",R[643],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",R[644],E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[37],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"],[T]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"into",R[643],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",R[644],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",R[630],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,"sample",R[642],E,25,[[["self"],["r"]],["f64"]]],[11,"sample",R[641],E,24,[[["self"],["r"]],["sup"]]],[11,"sample",R[642],E,26,[[["self"],["r"]],["f64"]]],[11,"sample",E,E,27,[[["self"],["r"]],["f64"]]],[11,"sample",R[643],E,30,[[["self"],["r"]],["f64"]]],[11,"sample",R[642],E,28,[[["self"],["r"]],["f64"]]],[11,"sample",R[644],E,31,[[["self"],["r"]],["f64"]]],[11,"sample",R[643],E,29,[[["self"],["r"]],["f64"]]],[11,"sample",R[630],E,32,[[["self"],["r"]],["sup"]]],[11,"sample",E,E,33,[[["self"],["r"]],[T]]],[11,"reseed",R[647],E,17,[[["self"],["r"]]]],[11,"clone",R[642],E,25,[[["self"]],["gamma"]]],[11,"clone",R[630],E,12,[[["self"]],["weighted"]]],[11,"clone",R[804],E,15,[[["self"]],[R[650]]]],[11,"clone","rand",E,22,[[["self"]],["stdrng"]]],[11,"clone",R[642],E,27,[[["self"]],["fisherf"]]],[11,"clone",R[641],E,24,[[["self"]],["range"]]],[11,"clone",R[630],E,32,[[["self"]],[R[806]]]],[11,"clone",R[644],E,9,[[["self"]],["exp1"]]],[11,"clone",E,E,31,[[["self"]],["exp"]]],[11,"clone",R[804],E,14,[[["self"]],[R[657]]]],[11,"clone",R[642],E,28,[[["self"]],["studentt"]]],[11,"clone",E,E,26,[[["self"]],[R[659]]]],[11,"clone",R[643],E,29,[[["self"]],["normal"]]],[11,"clone",R[647],E,17,[[["self"]],[R[663]]]],[11,"clone",R[643],E,8,[[["self"]],[R[660]]]],[11,"clone",E,E,30,[[["self"]],[R[661]]]],[11,"clone","rand",E,21,[[["self"]],[R[639]]]],[11,"clone",E,E,23,[[["self"]],[R[662]]]],[11,"clone",R[805],E,16,[[["self"]],[R[649]]]],[11,R[652],R[646],E,18,[[["self"]],["u32"]]],[11,R[654],E,E,18,[[["self"]],["u64"]]],[11,R[651],E,E,18,[[["self"]]]],[11,R[652],R[804],E,14,[[["self"]],["u32"]]],[11,R[652],"rand",E,21,[[["self"]],["u32"]]],[11,R[652],R[647],E,0,[[["self"]],["u32"]]],[11,R[654],E,E,0,[[["self"]],["u64"]]],[11,R[651],E,E,0,[[["self"]]]],[11,R[652],"rand",E,22,[[["self"]],["u32"]]],[11,R[654],E,E,22,[[["self"]],["u64"]]],[11,R[652],R[805],E,16,[[["self"]],["u32"]]],[11,R[652],R[653],E,13,[[["self"]],["u32"]]],[11,R[654],E,E,13,[[["self"]],["u64"]]],[11,R[651],E,E,13,[[["self"]]]],[11,R[652],"rand",E,23,[[["self"]],["u32"]]],[11,R[654],E,E,23,[[["self"]],["u64"]]],[11,R[651],E,E,23,[[["self"]]]],[11,R[652],R[804],E,15,[[["self"]],["u32"]]],[11,R[654],E,E,15,[[["self"]],["u64"]]],[11,"rand",E,E,14,[[["r"]],[R[657]]]],[11,"rand","rand",E,21,[[["r"]],[R[639]]]],[11,"rand",R[805],E,16,[[["r"]],[R[649]]]],[11,"rand","rand",E,6,[[["r"]],[["f64"],["closed01",["f64"]]]]],[11,"rand",R[804],E,15,[[["r"]],[R[650]]]],[11,"rand","rand",E,5,[[["r"]],[["open01",["f64"]],["f64"]]]],[11,"rand",R[644],E,9,[[["r"]],["exp1"]]],[11,"rand",R[643],E,8,[[["r"]],[R[660]]]],[11,"rand","rand",E,5,[[["r"]],[["open01",["f32"]],["f32"]]]],[11,"rand",E,E,6,[[["r"]],[["f32"],["closed01",["f32"]]]]],[11,"reseed",E,"Reseed an XorShiftRng. This will panic if `seed` is…",21,[[["self"]]]],[11,R[655],E,"Create a new XorShiftRng. This will panic if `seed` is…",21,[[],[R[639]]]],[11,"reseed",R[647],E,0,[[["self"]]]],[11,R[655],E,"Create a new `ReseedingRng` from the given reseeder and…",0,[[],[R[656]]]],[11,"reseed",R[804],E,15,[[["self"]]]],[11,R[655],E,R[658],15,[[],[R[650]]]],[11,"reseed","rand",E,22,[[["self"]]]],[11,R[655],E,E,22,[[],["stdrng"]]],[11,"reseed",R[805],E,16,[[["self"]]]],[11,R[655],E,"Create a ChaCha generator from a seed, obtained from a…",16,[[],[R[649]]]],[11,"reseed",R[804],E,14,[[["self"]]]],[11,R[655],E,R[658],14,[[],[R[657]]]],[11,R[648],R[630],E,32,[[["self"],["r"]],["sup"]]],[11,R[648],R[642],E,25,[[["self"],["r"]],["f64"]]],[11,R[648],R[630],E,33,[[["self"],["r"]],[T]]],[11,R[648],R[644],E,31,[[["self"],["r"]],["f64"]]],[11,R[648],R[641],E,24,[[["self"],["r"]],["sup"]]],[11,R[648],R[643],E,30,[[["self"],["r"]],["f64"]]],[11,R[648],R[642],E,28,[[["self"],["r"]],["f64"]]],[11,R[648],E,E,27,[[["self"],["r"]],["f64"]]],[11,R[648],E,E,26,[[["self"],["r"]],["f64"]]],[11,R[648],R[643],E,29,[[["self"],["r"]],["f64"]]],[11,"next","rand",E,20,[[["self"]],[[R[32],["char"]],["char"]]]],[11,"next",E,E,19,[[["self"]],[R[32]]]],[11,"fmt",R[643],E,8,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[642],E,26,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[630],E,33,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[641],E,24,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[642],E,25,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[804],E,15,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[646],E,18,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,5,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[642],E,27,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[805],E,16,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[642],E,28,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,23,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[647],E,17,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[804],E,14,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[644],E,31,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[653],E,13,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,20,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,19,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[647],E,0,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[643],E,29,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[630],E,32,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,22,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[644],E,9,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[630],E,12,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt","rand",E,6,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",R[643],E,30,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[99],R[647],E,17,[[],[R[663]]]],[11,"new",R[653],R[810],13,[[],[["osrng"],["error"],[R[2],["osrng","error"]]]]],[11,R[638],R[804],"Create an ISAAC random number generator using the default…",14,[[],[R[657]]]],[11,R[638],E,"Create a 64-bit ISAAC random number generator using the…",15,[[],[R[650]]]],[11,R[638],R[805],"Create an ChaCha random number generator using the default…",16,[[],[R[649]]]],[11,"set_counter",E,"Sets the internal 128-bit ChaCha counter to a…",16,[[["self"],["u64"]]]],[11,"new",R[647],"Create a new `ReseedingRng` with the given parameters.",0,[[["rsdr"],["u64"],["r"]],[R[656]]]],[11,"reseed_if_necessary",E,"Reseed the internal RNG if the number of bytes that have…",0,[[["self"]]]],[11,"new",R[646],"Create a new `ReadRng` from a `Read`.",18,[[["r"]],["readrng"]]],[11,R[638],"rand","Creates a new XorShiftRng instance which is not seeded.",21,[[],[R[639]]]],[11,"new",E,"Create a randomly seeded instance of `StdRng`.",22,[[],[["stdrng"],[R[2],["stdrng","error"]],["error"]]]],[11,"new",R[641],"Create a new `Range` instance that samples uniformly from…",24,[[["x"]],["range"]]],[11,"new",R[642],"Construct an object representing the `Gamma(shape, scale)`…",25,[[["f64"]],["gamma"]]],[11,"new",E,"Create a new chi-squared distribution with…",26,[[["f64"]],[R[659]]]],[11,"new",E,"Create a new `FisherF` distribution, with the given…",27,[[["f64"]],["fisherf"]]],[11,"new",E,"Create a new Student t distribution with `n` degrees of…",28,[[["f64"]],["studentt"]]],[11,"new",R[643],"Construct a new `Normal` distribution with the given mean…",29,[[["f64"]],["normal"]]],[11,"new",E,"Construct a new `LogNormal` distribution with the given…",30,[[["f64"]],[R[661]]]],[11,"new",R[644],"Construct a new `Exp` with the given shape parameter…",31,[[["f64"]],["exp"]]],[11,"new",R[630],E,32,[[],[R[806]]]],[11,"new",E,"Create a new `WeightedChoice`.",33,[[],["weightedchoice"]]]],"p":[[3,R[673]],[8,"Reseeder"],[8,"Rng"],[8,"Rand"],[8,R[676]],[3,"Open01"],[3,"Closed01"],[8,R[664]],[3,R[666]],[3,"Exp1"],[8,"Sample"],[8,R[668]],[3,"Weighted"],[3,"OsRng"],[3,R[674]],[3,R[636]],[3,R[633]],[3,R[680]],[3,"ReadRng"],[3,R[677]],[3,R[678]],[3,R[675]],[3,"StdRng"],[3,R[679]],[3,"Range"],[3,"Gamma"],[3,R[665]],[3,"FisherF"],[3,R[807]],[3,"Normal"],[3,R[667]],[3,"Exp"],[3,R[669]],[3,R[670]]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","i":[[3,"Error",R[731],"Error type of random number generators",N,N],[3,"OsRng",E,R[809],N,N],[18,R[718],E,R[719],0,N],[18,R[720],E,R[721],0,N],[11,R[722],E,R[723],0,[[["self"]],[[R[32],["i32"]],["i32"]]]],[11,"code",E,"Retrieve the error code, if any.",0,[[["self"]],[[R[482]],[R[32],[R[482]]]]]],[0,"block",E,"The `BlockRngCore` trait and implementation helpers",N,N],[3,"BlockRng",R[734],R[724],N,N],[12,"core",E,R[725],1,N],[3,R[739],E,R[724],N,N],[12,"core",E,R[725],2,N],[8,R[740],E,"A trait for RNGs which do not generate random numbers…",N,N],[16,"Item",E,"Results element type, e.g. `u32`.",3,N],[16,"Results",E,"Results type. This is the 'block' an RNG implementing…",3,N],[10,"generate",E,"Generate a new block of results.",3,[[["self"]]]],[11,"new",E,R[726],1,[[["r"]],["blockrng"]]],[11,"index",E,R[727],1,[[["self"]],["usize"]]],[11,"reset",E,R[728],1,[[["self"]]]],[11,R[729],E,R[730],1,[[["self"],["usize"]]]],[11,"new",E,R[726],2,[[["r"]],[R[738]]]],[11,"index",E,R[727],2,[[["self"]],["usize"]]],[11,"reset",E,R[728],2,[[["self"]]]],[11,R[729],E,R[730],2,[[["self"],["usize"]]]],[0,"impls",R[731],"Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next",E,"Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,[[["r"]]]],[5,"fill_via_u32_chunks",E,R[732],N,[[]]],[5,"fill_via_u64_chunks",E,R[732],N,[[]]],[5,"next_u32_via_fill",E,"Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill",E,"Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le",R[731],"Little-Endian utilities",N,N],[5,R[144],"rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,[[]]],[5,R[145],E,"Reads unsigned 64 bit integers from `src` into `dst`.…",N,[[]]],[8,"RngCore",R[731],"The core of a random number generator.",N,N],[10,R[652],E,"Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,R[654],E,"Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,R[651],E,R[733],4,[[["self"]]]],[10,R[735],E,"Fill `dest` entirely with random data.",4,[[["self"]],[[R[2],["error"]],["error"]]]],[8,"CryptoRng",E,"A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,R[676],E,"A random number generator that can be explicitly seeded.",N,N],[16,"Seed",E,"Seed type, which is restricted to types…",5,N],[10,R[655],E,"Create a new PRNG using the given seed.",5,[[],["self"]]],[11,R[736],E,"Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,R[737],E,"Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[[R[2],["error"]],["error"]]]],[11,"from_entropy",E,"Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],R[734],E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[652],E,E,1,[[["self"]],["u32"]]],[11,R[654],E,E,1,[[["self"]],["u64"]]],[11,R[651],E,E,1,[[["self"]]]],[11,R[735],E,E,1,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[652],E,E,2,[[["self"]],["u32"]]],[11,R[654],E,E,2,[[["self"]],["u64"]]],[11,R[651],E,E,2,[[["self"]]]],[11,R[735],E,E,2,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[652],R[731],E,6,[[["self"]],["u32"]]],[11,R[654],E,E,6,[[["self"]],["u64"]]],[11,R[651],E,E,6,[[["self"]]]],[11,R[735],E,E,6,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[655],R[734],E,1,[[],["self"]]],[11,R[736],E,E,1,[[["u64"]],["self"]]],[11,R[737],E,E,1,[[["rngcore"]],[[R[2],["error"]],["error"]]]],[11,R[655],E,E,2,[[],["self"]]],[11,R[736],E,E,2,[[["u64"]],["self"]]],[11,R[737],E,E,2,[[["rngcore"]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[731],E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[734],E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[731],E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"from",E,E,0,[[[R[482]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"clone",R[734],E,1,[[["self"]],["blockrng"]]],[11,"clone",E,E,2,[[["self"]],[R[738]]]],[11,"clone",R[731],E,6,[[["self"]],["osrng"]]],[11,R[99],E,E,6,[[],["osrng"]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,R[739]],[8,R[740]],[8,"RngCore"],[8,R[676]],[3,"OsRng"]]};
searchIndex["rand_os"]={"doc":R[808],"i":[[3,"OsRng","rand_os",R[809],N,N],[11,"new",E,R[810],0,[[],[[R[2],["osrng","error"]],["osrng"],["error"]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"clone",E,E,0,[[["self"]],["osrng"]]],[11,R[99],E,E,0,[[],["osrng"]]],[11,R[652],E,E,0,[[["self"]],["u32"]]],[11,R[654],E,E,0,[[["self"]],["u64"]]],[11,R[651],E,E,0,[[["self"]]]],[11,R[735],E,E,0,[[["self"]],[["error"],[R[2],["error"]]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_xoshiro"]={"doc":"This crate implements the [xoshiro] family of pseudorandom…","i":[[3,"SplitMix64","rand_xoshiro","A splitmix64 random number generator.",N,N],[3,R[1178],E,"A xoshiro128** random number generator.",N,N],[3,R[1179],E,"A xoshiro128+ random number generator.",N,N],[3,R[1180],E,"A xoshiro256** random number generator.",N,N],[3,R[1181],E,"A xoshiro256+ random number generator.",N,N],[3,"Seed512",E,"512-bit seed for a generator.",N,N],[12,"0",E,E,0,N],[3,R[1182],E,"A xoshiro512** random number generator.",N,N],[3,R[1183],E,"A xoshiro512+ random number generator.",N,N],[3,R[1184],E,"A xoroshiro128+ random number generator.",N,N],[3,R[1185],E,"A xoroshiro128** random number generator.",N,N],[3,R[1186],E,"A xoroshiro64** random number generator.",N,N],[3,R[1187],E,"A xoroshiro64* random number generator.",N,N],[11,"iter",E,"Return an iterator over the seed.",0,[[["self"]],[["iter",["u8"]],["u8"]]]],[11,"jump",E,R[1160],1,[[["self"]]]],[11,"jump",E,R[1160],2,[[["self"]]]],[11,"jump",E,R[1161],3,[[["self"]]]],[11,R[1165],E,R[1162],3,[[["self"]]]],[11,"jump",E,R[1161],4,[[["self"]]]],[11,R[1165],E,R[1162],4,[[["self"]]]],[11,"jump",E,R[1163],5,[[["self"]]]],[11,"jump",E,R[1163],6,[[["self"]]]],[11,"jump",E,R[1164],7,[[["self"]]]],[11,R[1165],E,R[1166],7,[[["self"]]]],[11,"jump",E,R[1164],8,[[["self"]]]],[11,R[1165],E,R[1166],8,[[["self"]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[13]]],[R[2]]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"clone",E,E,0,[[["self"]],["seed512"]]],[11,"clone",E,E,9,[[["self"]],[R[1167]]]],[11,"clone",E,E,1,[[["self"]],[R[1168]]]],[11,"clone",E,E,2,[[["self"]],[R[1169]]]],[11,"clone",E,E,3,[[["self"]],[R[1170]]]],[11,"clone",E,E,4,[[["self"]],[R[1171]]]],[11,"clone",E,E,5,[[["self"]],[R[1172]]]],[11,"clone",E,E,6,[[["self"]],[R[1173]]]],[11,"clone",E,E,7,[[["self"]],[R[1174]]]],[11,"clone",E,E,8,[[["self"]],[R[1175]]]],[11,"clone",E,E,10,[[["self"]],[R[1176]]]],[11,"clone",E,E,11,[[["self"]],[R[1177]]]],[11,R[99],E,E,0,[[],["seed512"]]],[11,R[655],E,"Create a new `SplitMix64`.",9,[[],[R[1167]]]],[11,R[736],E,"Seed a `SplitMix64` from a `u64`.",9,[[["u64"]],[R[1167]]]],[11,R[655],E,"Create a new `Xoshiro128StarStar`. If `seed` is entirely…",1,[[],[R[1168]]]],[11,R[736],E,"Seed a `Xoshiro128StarStar` from a `u64` using `SplitMix64`.",1,[[["u64"]],[R[1168]]]],[11,R[655],E,"Create a new `Xoshiro128Plus`. If `seed` is entirely 0, it…",2,[[],[R[1169]]]],[11,R[736],E,"Seed a `Xoshiro128Plus` from a `u64` using `SplitMix64`.",2,[[["u64"]],[R[1169]]]],[11,R[655],E,"Create a new `Xoshiro256StarStar`. If `seed` is entirely…",3,[[],[R[1170]]]],[11,R[736],E,"Seed a `Xoshiro256StarStar` from a `u64` using `SplitMix64`.",3,[[["u64"]],[R[1170]]]],[11,R[655],E,"Create a new `Xoshiro256Plus`. If `seed` is entirely 0, it…",4,[[],[R[1171]]]],[11,R[736],E,"Seed a `Xoshiro256Plus` from a `u64` using `SplitMix64`.",4,[[["u64"]],[R[1171]]]],[11,R[655],E,"Create a new `Xoshiro512StarStar`. If `seed` is entirely…",5,[[["seed512"]],[R[1172]]]],[11,R[736],E,"Seed a `Xoshiro512StarStar` from a `u64` using `SplitMix64`.",5,[[["u64"]],[R[1172]]]],[11,R[655],E,"Create a new `Xoshiro512Plus`. If `seed` is entirely 0, it…",6,[[["seed512"]],[R[1173]]]],[11,R[736],E,"Seed a `Xoshiro512Plus` from a `u64` using `SplitMix64`.",6,[[["u64"]],[R[1173]]]],[11,R[655],E,"Create a new `Xoroshiro128Plus`. If `seed` is entirely 0,…",7,[[],[R[1174]]]],[11,R[736],E,"Seed a `Xoroshiro128Plus` from a `u64` using `SplitMix64`.",7,[[["u64"]],[R[1174]]]],[11,R[655],E,"Create a new `Xoroshiro128StarStar`. If `seed` is entirely…",8,[[],[R[1175]]]],[11,R[736],E,"Seed a `Xoroshiro128StarStar` from a `u64` using…",8,[[["u64"]],[R[1175]]]],[11,R[655],E,"Create a new `Xoroshiro64StarStar`. If `seed` is entirely…",10,[[],[R[1176]]]],[11,R[736],E,"Seed a `Xoroshiro64StarStar` from a `u64` using…",10,[[["u64"]],[R[1176]]]],[11,R[655],E,"Create a new `Xoroshiro64Star`. If `seed` is entirely 0,…",11,[[],[R[1177]]]],[11,R[736],E,"Seed a `Xoroshiro64Star` from a `u64` using `SplitMix64`.",11,[[["u64"]],[R[1177]]]],[11,R[652],E,E,9,[[["self"]],["u32"]]],[11,R[654],E,E,9,[[["self"]],["u64"]]],[11,R[651],E,E,9,[[["self"]]]],[11,R[735],E,E,9,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,1,[[["self"]],["u32"]]],[11,R[654],E,E,1,[[["self"]],["u64"]]],[11,R[651],E,E,1,[[["self"]]]],[11,R[735],E,E,1,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,2,[[["self"]],["u32"]]],[11,R[654],E,E,2,[[["self"]],["u64"]]],[11,R[651],E,E,2,[[["self"]]]],[11,R[735],E,E,2,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,3,[[["self"]],["u32"]]],[11,R[654],E,E,3,[[["self"]],["u64"]]],[11,R[651],E,E,3,[[["self"]]]],[11,R[735],E,E,3,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,4,[[["self"]],["u32"]]],[11,R[654],E,E,4,[[["self"]],["u64"]]],[11,R[651],E,E,4,[[["self"]]]],[11,R[735],E,E,4,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,5,[[["self"]],["u32"]]],[11,R[654],E,E,5,[[["self"]],["u64"]]],[11,R[651],E,E,5,[[["self"]]]],[11,R[735],E,E,5,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,6,[[["self"]],["u32"]]],[11,R[654],E,E,6,[[["self"]],["u64"]]],[11,R[651],E,E,6,[[["self"]]]],[11,R[735],E,E,6,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[652],E,E,7,[[["self"]],["u32"]]],[11,R[654],E,E,7,[[["self"]],["u64"]]],[11,R[651],E,E,7,[[["self"]]]],[11,R[735],E,E,7,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[652],E,E,8,[[["self"]],["u32"]]],[11,R[654],E,E,8,[[["self"]],["u64"]]],[11,R[651],E,E,8,[[["self"]]]],[11,R[735],E,E,8,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[652],E,E,10,[[["self"]],["u32"]]],[11,R[654],E,E,10,[[["self"]],["u64"]]],[11,R[651],E,E,10,[[["self"]]]],[11,R[735],E,E,10,[[["self"]],[[R[2],["error"]],["error"]]]],[11,R[652],E,E,11,[[["self"]],["u32"]]],[11,R[654],E,E,11,[[["self"]],["u64"]]],[11,R[651],E,E,11,[[["self"]]]],[11,R[735],E,E,11,[[["self"]],[[R[2],["error"]],["error"]]]]],"p":[[3,"Seed512"],[3,R[1178]],[3,R[1179]],[3,R[1180]],[3,R[1181]],[3,R[1182]],[3,R[1183]],[3,R[1184]],[3,R[1185]],[3,"SplitMix64"],[3,R[1186]],[3,R[1187]]]};
searchIndex["rawpointer"]={"doc":E,"i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",N,[[],["usize"]]],[8,R[35],E,"Extension methods for raw pointers",N,N],[10,"offset",E,E,0,[[["isize"]],["self"]]],[11,"pre_inc",E,"Increment the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_inc",E,"Increment the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"pre_dec",E,"Decrement the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_dec",E,"Decrement the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"inc",E,"Increment by 1",0,[[["self"]]]],[11,"dec",E,"Decrement by 1",0,[[["self"]]]],[11,R[2100],E,"Offset the pointer by `s` multiplied by `index`.",0,[[["isize"],["usize"]],["self"]]]],"p":[[8,R[35]]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[2420],"rayon",R[2385],N,N],[3,R[1477],E,R[2380],N,N],[3,R[2381],E,R[2382],N,N],[3,R[1480],E,R[2383],N,N],[3,R[1478],E,R[2384],N,N],[5,R[1460],E,R[2393],N,[[],["usize"]]],[5,R[1461],E,R[2392],N,[[],[[R[32],["usize"]],["usize"]]]],[5,"join",E,R[2386],N,[[["a"],["b"]]]],[5,R[2387],E,R[2388],N,[[["a"],["b"]]]],[5,"scope",E,R[2389],N,[[["op"]],["r"]]],[3,"Scope",E,R[1456],N,N],[5,R[2390],E,R[2391],N,[[["op"]],["r"]]],[3,R[2419],E,R[1456],N,N],[5,"spawn",E,R[1457],N,[[["f"]]]],[5,R[1464],E,R[1457],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[2312],"This module contains the parallel iterator types for heaps…",N,N],[3,R[165],R[2337],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[2312],R[2313],N,N],[3,R[165],R[2338],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[2314],N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[2312],R[2313],N,N],[3,R[165],R[2339],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[2314],N,N],[0,"hash_map",R[2312],R[2315],N,N],[3,R[165],R[2340],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[2312],R[2315],N,N],[3,R[165],R[2341],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[2312],R[2313],N,N],[3,R[165],R[2342],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[2312],R[2313],N,N],[3,R[165],R[2343],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[2317],R[182],N,N],[13,"Left",E,R[183],0,N],[13,"Right",E,R[184],0,N],[3,"IterBridge",E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,"Enumerate",E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,"FilterMap",E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[2375],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,R[244],E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[245],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[253],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,"PanicFuse",E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,R[248],E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["clone"],["send"]],[["send"],["clone"],["repeat"]]]],[5,"repeatn",E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["usize"],["clone"],["send"]],[["send"],["repeatn"],["clone"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["empty"],["send"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["once"],["send"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[2362],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[165],E,"The type of iterator we will become.",2,N],[10,R[30],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at",E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with",E,R[2316],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,"split_at",E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[2]]],[R[2]]]],[8,R[2363],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[2364],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with",E,R[2316],7,[[["f"]],["f"]]],[11,"take",R[2317],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,R[2331],E,R[2332],N,N],[10,"par_bridge",E,R[2333],9,[[],[R[2355]]]],[8,R[2365],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[2336],E,R[2318],10,[[]]],[8,R[2366],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[2318],11,[[["self"]]]],[8,R[2367],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,"par_iter_mut",E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[2368],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[[T],["f"]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[2319],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[2319],13,[[["op"]],[R[32]]]],[11,"try_reduce",E,R[2320],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[2320],13,[[["op"]],[R[32]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with",E,"Applies `fold_op` to the given `init` value with each item…",13,[[[T],["f"]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[[T],["f"]],[R[2356]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,"product",E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[32]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[32]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[32]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[32]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[32]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[32]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[2322],13,[[["p"]],[R[32]]]],[11,"find_first",E,R[2329],13,[[["p"]],[R[32]]]],[11,"find_last",E,R[2330],13,[[["p"]],[R[32]]]],[11,"find_map_any",E,R[2321],13,[[["p"]],[R[32]]]],[11,"find_map_first",E,R[2321],13,[[["p"]],[R[32]]]],[11,"find_map_last",E,R[2321],13,[[["p"]],[R[32]]]],[11,"any",E,R[2322],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some",E,"Creates an iterator over the `Some` items of this…",13,[[],[R[211]]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect",E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition",E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,R[2323],E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[195],E,"Intersperses clones of an element between items of this…",13,[[],[R[195]]]],[10,R[2350],E,R[2324],13,[[["c"]]]],[11,"opt_len",E,R[2324],13,[[["self"]],[[R[32],["usize"]],["usize"]]]],[8,R[2369],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[185],E,R[2326],14,[[["i"]],[R[185]]]],[11,R[2325],E,R[2326],14,[[["i"]],[R[209]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[2327],14,[[["i"]],[R[31]]]],[11,R[117],E,R[2327],14,[[["i"]],[[R[31]],[R[32],[R[31]]]]]],[11,"eq",E,R[2328],14,[[["i"]],["bool"]]],[11,"ne",E,R[2328],14,[[["i"]],["bool"]]],[11,"lt",E,R[2328],14,[[["i"]],["bool"]]],[11,"le",E,R[2328],14,[[["i"]],["bool"]]],[11,"gt",E,R[2328],14,[[["i"]],["bool"]]],[11,"ge",E,R[2328],14,[[["i"]],["bool"]]],[11,R[186],E,"Yields an index along with each item.",14,[[],[R[186]]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[2322],14,[[["p"]],[[R[32],["usize"]],["usize"]]]],[11,"position_first",E,R[2329],14,[[["p"]],[[R[32],["usize"]],["usize"]]]],[11,"position_last",E,R[2330],14,[[["p"]],[[R[32],["usize"]],["usize"]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[2324],14,[[[R[2354]]]]],[10,R[2353],E,R[2324],14,[[["producercallback"]]]],[8,R[2370],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[2371],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,"par_extend",E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[32],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[165],R[2344],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,"IterMut",E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[2331],"rayon::prelude",R[2332],N,N],[10,"par_bridge",E,R[2333],9,[[],[R[2355]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[2345],"Parallel iterator over a range, implemented for all…",N,N],[0,R[1773],"rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[2346],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[2],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[165],R[2347],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut",E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[2348],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,"IterMut",E,"Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut",E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[2372],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split",E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[2334],17,[[["self"],["usize"]],["chunks"]]],[8,R[2373],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[2334],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[2351],"Parallel iterator over the characters of a string",N,N],[3,R[1649],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[2376],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[2377],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[2378],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[2379],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[2374],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[1510]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[2357]]]],[11,"par_split",E,"Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["pattern"],[R[2358]]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[2359]]]],[11,"par_matches",E,R[2335],19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices",E,R[2335],19,[[["self"],["pattern"]],[[R[2360]],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[165],R[2352],"Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon",E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,R[95],E,E,23,[[["self"]],[R[63]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,R[2336],R[2337],E,27,[[],[T]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[37],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"],[T]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,R[2336],E,E,28,[[],[T]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,R[2336],R[2338],E,29,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,R[2336],E,E,30,[[],[T]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,R[2336],E,E,31,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,R[2336],R[2339],E,32,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,R[2336],E,E,33,[[],[T]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[37],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"],[T]]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,R[2336],R[2340],E,34,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,R[2336],E,E,35,[[],[T]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[37],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"],[T]]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,R[2336],E,E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,R[2336],R[2341],E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,R[2336],E,E,38,[[],[T]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[37],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"],[T]]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,R[2336],R[2342],E,39,[[],[T]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[37],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"],[T]]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,R[2336],E,E,40,[[],[T]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[37],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"],[T]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,R[2336],E,E,41,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,R[2336],R[2343],E,42,[[],[T]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,R[2336],E,E,43,[[],[T]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[37],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"],[T]]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,R[2336],E,E,44,[[],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,R[2336],R[2317],E,0,[[],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[30],E,E,0,[[],["i"]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[2336],E,E,45,[[],[T]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[37],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"],[T]]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,R[2336],E,E,46,[[],[T]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[37],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"],[T]]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,R[2336],E,E,47,[[],[T]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[37],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"],[T]]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,R[2336],E,E,48,[[],[T]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[37],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"],[T]]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,R[2336],E,E,49,[[],[T]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[37],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"],[T]]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,R[2336],E,E,50,[[],[T]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[37],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"],[T]]]],[11,R[7],E,E,50,[[[U]],[R[2]]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,R[2336],E,E,51,[[],[T]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[37],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"],[T]]]],[11,R[7],E,E,51,[[[U]],[R[2]]]],[11,R[8],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[34]]]],[11,R[2336],E,E,52,[[],[T]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[37],E,E,52,[[["self"]],[T]]],[11,R[38],E,E,52,[[["self"],[T]]]],[11,R[7],E,E,52,[[[U]],[R[2]]]],[11,R[8],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[34]]]],[11,R[2336],E,E,53,[[],[T]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[37],E,E,53,[[["self"]],[T]]],[11,R[38],E,E,53,[[["self"],[T]]]],[11,R[7],E,E,53,[[[U]],[R[2]]]],[11,R[8],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[34]]]],[11,R[2336],E,E,54,[[],[T]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[37],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"],[T]]]],[11,R[7],E,E,54,[[[U]],[R[2]]]],[11,R[8],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[34]]]],[11,R[2336],E,E,55,[[],[T]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[37],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"],[T]]]],[11,R[7],E,E,55,[[[U]],[R[2]]]],[11,R[8],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[34]]]],[11,R[2336],E,E,56,[[],[T]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[37],E,E,56,[[["self"]],[T]]],[11,R[38],E,E,56,[[["self"],[T]]]],[11,R[7],E,E,56,[[[U]],[R[2]]]],[11,R[8],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[34]]]],[11,R[2336],E,E,57,[[],[T]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[37],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"],[T]]]],[11,R[7],E,E,57,[[[U]],[R[2]]]],[11,R[8],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[34]]]],[11,R[2336],E,E,58,[[],[T]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[37],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"],[T]]]],[11,R[7],E,E,58,[[[U]],[R[2]]]],[11,R[8],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[34]]]],[11,R[2336],E,E,59,[[],[T]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[37],E,E,59,[[["self"]],[T]]],[11,R[38],E,E,59,[[["self"],[T]]]],[11,R[7],E,E,59,[[[U]],[R[2]]]],[11,R[8],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[34]]]],[11,R[2336],E,E,60,[[],[T]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[37],E,E,60,[[["self"]],[T]]],[11,R[38],E,E,60,[[["self"],[T]]]],[11,R[7],E,E,60,[[[U]],[R[2]]]],[11,R[8],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[34]]]],[11,R[2336],E,E,61,[[],[T]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[37],E,E,61,[[["self"]],[T]]],[11,R[38],E,E,61,[[["self"],[T]]]],[11,R[7],E,E,61,[[[U]],[R[2]]]],[11,R[8],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[34]]]],[11,R[2336],E,E,62,[[],[T]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[37],E,E,62,[[["self"]],[T]]],[11,R[38],E,E,62,[[["self"],[T]]]],[11,R[7],E,E,62,[[[U]],[R[2]]]],[11,R[8],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[34]]]],[11,R[2336],E,E,63,[[],[T]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[37],E,E,63,[[["self"]],[T]]],[11,R[38],E,E,63,[[["self"],[T]]]],[11,R[7],E,E,63,[[[U]],[R[2]]]],[11,R[8],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[34]]]],[11,R[2336],E,E,64,[[],[T]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[37],E,E,64,[[["self"]],[T]]],[11,R[38],E,E,64,[[["self"],[T]]]],[11,R[7],E,E,64,[[[U]],[R[2]]]],[11,R[8],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[34]]]],[11,R[2336],E,E,65,[[],[T]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[37],E,E,65,[[["self"]],[T]]],[11,R[38],E,E,65,[[["self"],[T]]]],[11,R[7],E,E,65,[[[U]],[R[2]]]],[11,R[8],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[34]]]],[11,R[2336],E,E,66,[[],[T]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[37],E,E,66,[[["self"]],[T]]],[11,R[38],E,E,66,[[["self"],[T]]]],[11,R[7],E,E,66,[[[U]],[R[2]]]],[11,R[8],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[34]]]],[11,R[2336],E,E,67,[[],[T]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[37],E,E,67,[[["self"]],[T]]],[11,R[38],E,E,67,[[["self"],[T]]]],[11,R[7],E,E,67,[[[U]],[R[2]]]],[11,R[8],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[34]]]],[11,R[2336],E,E,68,[[],[T]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[37],E,E,68,[[["self"]],[T]]],[11,R[38],E,E,68,[[["self"],[T]]]],[11,R[7],E,E,68,[[[U]],[R[2]]]],[11,R[8],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[34]]]],[11,R[2336],E,E,69,[[],[T]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[37],E,E,69,[[["self"]],[T]]],[11,R[38],E,E,69,[[["self"],[T]]]],[11,R[7],E,E,69,[[[U]],[R[2]]]],[11,R[8],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[34]]]],[11,R[2336],E,E,70,[[],[T]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[37],E,E,70,[[["self"]],[T]]],[11,R[38],E,E,70,[[["self"],[T]]]],[11,R[7],E,E,70,[[[U]],[R[2]]]],[11,R[8],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[34]]]],[11,R[2336],E,E,71,[[],[T]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[37],E,E,71,[[["self"]],[T]]],[11,R[38],E,E,71,[[["self"],[T]]]],[11,R[7],E,E,71,[[[U]],[R[2]]]],[11,R[8],E,E,71,[[],[R[2]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[34]]]],[11,R[2336],E,E,72,[[],[T]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[37],E,E,72,[[["self"]],[T]]],[11,R[38],E,E,72,[[["self"],[T]]]],[11,R[7],E,E,72,[[[U]],[R[2]]]],[11,R[8],E,E,72,[[],[R[2]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[34]]]],[11,R[2336],E,E,73,[[],[T]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[37],E,E,73,[[["self"]],[T]]],[11,R[38],E,E,73,[[["self"],[T]]]],[11,R[7],E,E,73,[[[U]],[R[2]]]],[11,R[8],E,E,73,[[],[R[2]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[34]]]],[11,R[2336],E,E,74,[[],[T]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[37],E,E,74,[[["self"]],[T]]],[11,R[38],E,E,74,[[["self"],[T]]]],[11,R[7],E,E,74,[[[U]],[R[2]]]],[11,R[8],E,E,74,[[],[R[2]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[34]]]],[11,R[2336],E,E,75,[[],[T]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[37],E,E,75,[[["self"]],[T]]],[11,R[38],E,E,75,[[["self"],[T]]]],[11,R[7],E,E,75,[[[U]],[R[2]]]],[11,R[8],E,E,75,[[],[R[2]]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[34]]]],[11,R[2336],E,E,8,[[],[T]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,R[2336],E,E,76,[[],[T]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[37],E,E,76,[[["self"]],[T]]],[11,R[38],E,E,76,[[["self"],[T]]]],[11,R[7],E,E,76,[[[U]],[R[2]]]],[11,R[8],E,E,76,[[],[R[2]]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[34]]]],[11,R[2336],E,E,77,[[],[T]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[37],E,E,77,[[["self"]],[T]]],[11,R[38],E,E,77,[[["self"],[T]]]],[11,R[7],E,E,77,[[[U]],[R[2]]]],[11,R[8],E,E,77,[[],[R[2]]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[34]]]],[11,R[2336],E,E,78,[[],[T]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[37],E,E,78,[[["self"]],[T]]],[11,R[38],E,E,78,[[["self"],[T]]]],[11,R[7],E,E,78,[[[U]],[R[2]]]],[11,R[8],E,E,78,[[],[R[2]]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[34]]]],[11,R[2336],R[2344],E,79,[[],[T]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[37],E,E,79,[[["self"]],[T]]],[11,R[38],E,E,79,[[["self"],[T]]]],[11,R[7],E,E,79,[[[U]],[R[2]]]],[11,R[8],E,E,79,[[],[R[2]]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[34]]]],[11,R[2336],E,E,80,[[],[T]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[37],E,E,80,[[["self"]],[T]]],[11,R[38],E,E,80,[[["self"],[T]]]],[11,R[7],E,E,80,[[[U]],[R[2]]]],[11,R[8],E,E,80,[[],[R[2]]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[34]]]],[11,R[2336],E,E,81,[[],[T]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[7],E,E,81,[[[U]],[R[2]]]],[11,R[8],E,E,81,[[],[R[2]]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[34]]]],[11,R[2336],R[2345],E,82,[[],[T]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[37],E,E,82,[[["self"]],[T]]],[11,R[38],E,E,82,[[["self"],[T]]]],[11,R[7],E,E,82,[[[U]],[R[2]]]],[11,R[8],E,E,82,[[],[R[2]]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[34]]]],[11,R[2336],R[2346],E,83,[[],[T]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[37],E,E,83,[[["self"]],[T]]],[11,R[38],E,E,83,[[["self"],[T]]]],[11,R[7],E,E,83,[[[U]],[R[2]]]],[11,R[8],E,E,83,[[],[R[2]]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[34]]]],[11,R[2336],R[2347],E,84,[[],[T]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[37],E,E,84,[[["self"]],[T]]],[11,R[38],E,E,84,[[["self"],[T]]]],[11,R[7],E,E,84,[[[U]],[R[2]]]],[11,R[8],E,E,84,[[],[R[2]]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[34]]]],[11,R[2336],E,E,85,[[],[T]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[37],E,E,85,[[["self"]],[T]]],[11,R[38],E,E,85,[[["self"],[T]]]],[11,R[7],E,E,85,[[[U]],[R[2]]]],[11,R[8],E,E,85,[[],[R[2]]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[34]]]],[11,R[2336],E,E,86,[[],[T]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[7],E,E,86,[[[U]],[R[2]]]],[11,R[8],E,E,86,[[],[R[2]]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[34]]]],[11,R[2336],R[2348],E,87,[[],[T]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[37],E,E,87,[[["self"]],[T]]],[11,R[38],E,E,87,[[["self"],[T]]]],[11,R[7],E,E,87,[[[U]],[R[2]]]],[11,R[8],E,E,87,[[],[R[2]]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[34]]]],[11,R[2336],E,E,88,[[],[T]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[37],E,E,88,[[["self"]],[T]]],[11,R[38],E,E,88,[[["self"],[T]]]],[11,R[7],E,E,88,[[[U]],[R[2]]]],[11,R[8],E,E,88,[[],[R[2]]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[34]]]],[11,R[2336],E,E,89,[[],[T]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[37],E,E,89,[[["self"]],[T]]],[11,R[38],E,E,89,[[["self"],[T]]]],[11,R[7],E,E,89,[[[U]],[R[2]]]],[11,R[8],E,E,89,[[],[R[2]]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[34]]]],[11,R[2336],E,E,90,[[],[T]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[7],E,E,90,[[[U]],[R[2]]]],[11,R[8],E,E,90,[[],[R[2]]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[34]]]],[11,R[2336],E,E,91,[[],[T]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[7],E,E,91,[[[U]],[R[2]]]],[11,R[8],E,E,91,[[],[R[2]]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[34]]]],[11,R[2336],E,E,92,[[],[T]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[37],E,E,92,[[["self"]],[T]]],[11,R[38],E,E,92,[[["self"],[T]]]],[11,R[7],E,E,92,[[[U]],[R[2]]]],[11,R[8],E,E,92,[[],[R[2]]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[34]]]],[11,R[2336],E,E,93,[[],[T]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[7],E,E,93,[[[U]],[R[2]]]],[11,R[8],E,E,93,[[],[R[2]]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[34]]]],[11,R[2336],R[2351],E,94,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[37],E,E,94,[[["self"]],[T]]],[11,R[38],E,E,94,[[["self"],[T]]]],[11,R[7],E,E,94,[[[U]],[R[2]]]],[11,R[8],E,E,94,[[],[R[2]]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[34]]]],[11,R[2336],E,E,95,[[],[T]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[37],E,E,95,[[["self"]],[T]]],[11,R[38],E,E,95,[[["self"],[T]]]],[11,R[7],E,E,95,[[[U]],[R[2]]]],[11,R[8],E,E,95,[[],[R[2]]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[34]]]],[11,R[2336],E,E,96,[[],[T]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[37],E,E,96,[[["self"]],[T]]],[11,R[38],E,E,96,[[["self"],[T]]]],[11,R[7],E,E,96,[[[U]],[R[2]]]],[11,R[8],E,E,96,[[],[R[2]]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[34]]]],[11,R[2336],E,E,97,[[],[T]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[37],E,E,97,[[["self"]],[T]]],[11,R[38],E,E,97,[[["self"],[T]]]],[11,R[7],E,E,97,[[[U]],[R[2]]]],[11,R[8],E,E,97,[[],[R[2]]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[34]]]],[11,R[2336],E,E,98,[[],[T]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[37],E,E,98,[[["self"]],[T]]],[11,R[38],E,E,98,[[["self"],[T]]]],[11,R[7],E,E,98,[[[U]],[R[2]]]],[11,R[8],E,E,98,[[],[R[2]]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[34]]]],[11,R[2336],E,E,99,[[],[T]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[37],E,E,99,[[["self"]],[T]]],[11,R[38],E,E,99,[[["self"],[T]]]],[11,R[7],E,E,99,[[[U]],[R[2]]]],[11,R[8],E,E,99,[[],[R[2]]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[34]]]],[11,R[2336],E,E,100,[[],[T]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[37],E,E,100,[[["self"]],[T]]],[11,R[38],E,E,100,[[["self"],[T]]]],[11,R[7],E,E,100,[[[U]],[R[2]]]],[11,R[8],E,E,100,[[],[R[2]]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[34]]]],[11,R[2336],E,E,101,[[],[T]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[37],E,E,101,[[["self"]],[T]]],[11,R[38],E,E,101,[[["self"],[T]]]],[11,R[7],E,E,101,[[[U]],[R[2]]]],[11,R[8],E,E,101,[[],[R[2]]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[34]]]],[11,R[2336],E,E,102,[[],[T]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[37],E,E,102,[[["self"]],[T]]],[11,R[38],E,E,102,[[["self"],[T]]]],[11,R[7],E,E,102,[[[U]],[R[2]]]],[11,R[8],E,E,102,[[],[R[2]]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[34]]]],[11,R[2336],E,E,103,[[],[T]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[37],E,E,103,[[["self"]],[T]]],[11,R[38],E,E,103,[[["self"],[T]]]],[11,R[7],E,E,103,[[[U]],[R[2]]]],[11,R[8],E,E,103,[[],[R[2]]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[9],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[34]]]],[11,R[2336],R[2352],E,104,[[],[T]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[37],E,E,104,[[["self"]],[T]]],[11,R[38],E,E,104,[[["self"],[T]]]],[11,R[7],E,E,104,[[[U]],[R[2]]]],[11,R[8],E,E,104,[[],[R[2]]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[9],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[34]]]],[11,R[117],R[2317],E,0,[[["self"],[R[25]]],[[R[32],[R[31]]],[R[31]]]]],[11,"lt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[119],E,E,0,[[["self"]],[R[32]]]],[11,"as_mut",E,E,0,[[["self"]],["target"]]],[11,"as_mut",E,E,0,[[["self"]]]],[11,"as_mut",E,E,0,[[["self"]],["str"]]],[11,"from",E,E,0,[[[R[2]]],[R[25]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"next",E,E,0,[[["self"]],[R[32]]]],[11,R[118],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[32]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[32]]]],[11,"collect",E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[25]]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[25]]]],[11,"cmp",E,E,0,[[["self"],[R[25]]],[R[31]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"hash",E,E,0,[[["self"],["__hlr"]]]],[11,"as_ref",E,E,0,[[["self"]]]],[11,"as_ref",E,E,0,[[["self"]],["target"]]],[11,"as_ref",E,E,0,[[["self"]],["str"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[2]]]],[11,R[14],E,E,0,[[["self"]]]],[11,"drop","rayon",E,22,[[["self"]]]],[11,"fmt",E,E,26,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,20,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,21,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,25,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,24,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"fmt",E,E,22,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[99],E,E,24,[[],[[R[2361],[R[2349]]],[R[2349]]]]],[11,R[409],E,E,23,[[["self"]],["str"]]],[11,"fmt",E,E,23,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[2350],R[2337],E,27,[[["c"]]]],[11,"opt_len",E,E,27,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,28,[[["c"]]]],[11,"opt_len",E,E,28,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2338],E,29,[[["c"]]]],[11,"opt_len",E,E,29,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,30,[[["c"]]]],[11,"opt_len",E,E,30,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,31,[[["c"]]]],[11,"opt_len",E,E,31,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2339],E,32,[[["c"]]]],[11,"opt_len",E,E,32,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,33,[[["c"]]]],[11,"opt_len",E,E,33,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2340],E,34,[[["c"]]]],[11,"opt_len",E,E,34,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,35,[[["c"]]]],[11,"opt_len",E,E,35,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,36,[[["c"]]]],[11,"opt_len",E,E,36,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2341],E,37,[[["c"]]]],[11,"opt_len",E,E,37,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,38,[[["c"]]]],[11,"opt_len",E,E,38,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2342],E,39,[[["c"]]]],[11,"opt_len",E,E,39,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,40,[[["c"]]]],[11,"opt_len",E,E,40,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,41,[[["c"]]]],[11,"opt_len",E,E,41,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2343],E,42,[[["c"]]]],[11,"opt_len",E,E,42,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,43,[[["c"]]]],[11,"opt_len",E,E,43,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,44,[[["c"]]]],[11,"opt_len",E,E,44,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2317],E,45,[[["c"]]]],[11,R[2350],E,E,46,[[["c"]]]],[11,"opt_len",E,E,46,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,47,[[["c"]]]],[11,"opt_len",E,E,47,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,48,[[["c"]]]],[11,"opt_len",E,E,48,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,49,[[["c"]]]],[11,R[2350],E,E,50,[[["c"]]]],[11,R[2350],E,E,51,[[["c"]]]],[11,R[2350],E,E,52,[[["c"]]]],[11,R[2350],E,E,53,[[["c"]]]],[11,R[2350],E,E,54,[[["c"]]]],[11,R[2350],E,E,55,[[["c"]]]],[11,R[2350],E,E,56,[[["c"]]]],[11,R[2350],E,E,57,[[["c"]]]],[11,"opt_len",E,E,57,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,58,[[["c"]]]],[11,R[2350],E,E,59,[[["c"]]]],[11,"opt_len",E,E,59,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,60,[[["c"]]]],[11,"opt_len",E,E,60,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,62,[[["c"]]]],[11,"opt_len",E,E,62,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,61,[[["c"]]]],[11,"opt_len",E,E,61,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,63,[[["c"]]]],[11,"opt_len",E,E,63,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,64,[[["c"]]]],[11,"opt_len",E,E,64,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,65,[[["c"]]]],[11,"opt_len",E,E,65,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,66,[[["c"]]]],[11,"opt_len",E,E,66,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,67,[[["c"]]]],[11,"opt_len",E,E,67,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,68,[[["c"]]]],[11,"opt_len",E,E,68,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,69,[[["c"]]]],[11,"opt_len",E,E,69,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,71,[[["c"]]]],[11,"opt_len",E,E,71,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,70,[[["c"]]]],[11,"opt_len",E,E,70,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,72,[[["c"]]]],[11,"opt_len",E,E,72,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,73,[[["c"]]]],[11,"opt_len",E,E,73,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,74,[[["c"]]]],[11,"opt_len",E,E,74,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,75,[[["c"]]]],[11,R[2350],E,E,8,[[["c"]]]],[11,R[2350],E,E,76,[[["c"]]]],[11,"opt_len",E,E,76,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,77,[[["c"]]]],[11,"opt_len",E,E,77,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,78,[[["c"]]]],[11,"opt_len",E,E,78,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2344],E,79,[[["c"]]]],[11,"opt_len",E,E,79,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,80,[[["c"]]]],[11,"opt_len",E,E,80,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,81,[[["c"]]]],[11,"opt_len",E,E,81,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2345],E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,82,[[["c"]]]],[11,"opt_len",E,E,82,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2346],E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,83,[[["c"]]]],[11,"opt_len",E,E,83,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2347],E,84,[[["c"]]]],[11,"opt_len",E,E,84,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,85,[[["c"]]]],[11,"opt_len",E,E,85,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,86,[[["c"]]]],[11,"opt_len",E,E,86,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2348],E,87,[[["c"]]]],[11,"opt_len",E,E,87,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,88,[[["c"]]]],[11,"opt_len",E,E,88,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,89,[[["c"]]]],[11,"opt_len",E,E,89,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,90,[[["c"]]]],[11,"opt_len",E,E,90,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,91,[[["c"]]]],[11,"opt_len",E,E,91,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],E,E,92,[[["c"]]]],[11,R[2350],E,E,93,[[["c"]]]],[11,R[2350],R[2351],E,94,[[["c"]]]],[11,R[2350],E,E,95,[[["c"]]]],[11,R[2350],E,E,96,[[["c"]]]],[11,R[2350],E,E,97,[[["c"]]]],[11,R[2350],E,E,98,[[["c"]]]],[11,R[2350],E,E,99,[[["c"]]]],[11,R[2350],E,E,100,[[["c"]]]],[11,R[2350],E,E,101,[[["c"]]]],[11,R[2350],E,E,102,[[["c"]]]],[11,R[2350],E,E,103,[[["c"]]]],[11,R[2350],R[2352],E,104,[[["c"]]]],[11,"opt_len",E,E,104,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[2350],R[2317],E,0,[[["c"]]]],[11,"opt_len",E,E,0,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"drive",R[2337],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[2353],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[2353],E,E,28,[[["cb"]]]],[11,"drive",R[2343],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[2353],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[2353],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[2353],E,E,44,[[["cb"]]]],[11,"drive",R[2317],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[2353],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[2353],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[2354]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[2353],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[2354]]]]],[11,R[2353],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[2354]]]]],[11,R[2353],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[2353],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[2353],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[2353],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[2353],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[2353],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[2353],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[2353],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[2353],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[2353],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[2354]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[2353],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[2354]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[2353],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[2354]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[2353],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[2353],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[2353],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[2353],E,E,74,[[["cb"]]]],[11,"drive",E,E,76,[[["c"]]]],[11,R[2353],E,E,76,[[["cb"]]]],[11,"len",E,E,76,[[["self"]],["usize"]]],[11,"drive",E,E,77,[[["c"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,R[2353],E,E,77,[[["cb"]]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[2353],E,E,78,[[["cb"]]]],[11,"drive",R[2344],E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[2353],E,E,79,[[["cb"]]]],[11,"drive",E,E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[2353],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[2353],E,E,81,[[["cb"]]]],[11,"drive",R[2345],E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[2353],E,E,82,[[["cb"]]]],[11,"drive",R[2346],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[2353],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[2353],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[2353],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[2353],E,E,83,[[["cb"]]]],[11,"drive",R[2347],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[2353],E,E,84,[[["cb"]]]],[11,"drive",E,E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[2353],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[2353],E,E,86,[[["cb"]]]],[11,"drive",R[2348],E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[2353],E,E,87,[[["cb"]]]],[11,"drive",E,E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[2353],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[2353],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[2353],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[2353],E,E,91,[[["cb"]]]],[11,"drive",R[2352],E,104,[[["c"]]]],[11,"len",E,E,104,[[["self"]],["usize"]]],[11,R[2353],E,E,104,[[["cb"]]]],[11,"drive",R[2317],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[2353],E,E,0,[[["cb"]]]],[11,"par_extend",E,E,0,[[["self"],["i"]]]],[11,"clone",R[2337],E,27,[[["self"]],[R[174]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[2338],E,30,[[["self"]],["self"]]],[11,"clone",R[2339],E,33,[[["self"]],["self"]]],[11,"clone",R[2340],E,35,[[["self"]],["self"]]],[11,"clone",R[2341],E,38,[[["self"]],["self"]]],[11,"clone",R[2342],E,39,[[["self"]],[R[174]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[2343],E,42,[[["self"]],[R[174]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[2317],E,45,[[["self"]],[R[2355]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],[R[186]]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],["filtermap"]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[2356]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[185]]]],[11,"clone",E,E,66,[[["self"]],[R[209]]]],[11,"clone",E,E,67,[[["self"]],[R[195]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["inspect"]]],[11,"clone",E,E,74,[[["self"]],["panicfuse"]]],[11,"clone",E,E,75,[[["self"]],[R[211]]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,76,[[["self"]],["repeatn"]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",E,E,78,[[["self"]],["once"]]],[11,"clone",R[2344],E,79,[[["self"]],[R[174]]]],[11,"clone",E,E,80,[[["self"]],["self"]]],[11,"clone",R[2345],E,82,[[["self"]],["iter"]]],[11,"clone",R[2346],E,83,[[["self"]],["iter"]]],[11,"clone",R[2347],E,84,[[["self"]],[R[174]]]],[11,"clone",E,E,85,[[["self"]],["self"]]],[11,"clone",R[2348],E,87,[[["self"]],["self"]]],[11,"clone",E,E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,92,[[["self"]],["self"]]],[11,"clone",R[2351],E,94,[[["self"]],["chars"]]],[11,"clone",E,E,95,[[["self"]],[R[1510]]]],[11,"clone",E,E,96,[[["self"]],["bytes"]]],[11,"clone",E,E,97,[[["self"]],[R[2357]]]],[11,"clone",E,E,98,[[["self"]],["split"]]],[11,"clone",E,E,99,[[["self"]],[R[2358]]]],[11,"clone",E,E,100,[[["self"]],["lines"]]],[11,"clone",E,E,101,[[["self"]],[R[2359]]]],[11,"clone",E,E,102,[[["self"]],["matches"]]],[11,"clone",E,E,103,[[["self"]],[R[2360]]]],[11,"clone",R[2352],E,104,[[["self"]],[R[174]]]],[11,"fmt",R[2337],E,27,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2338],E,29,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2339],E,32,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2340],E,34,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2341],E,37,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2342],E,39,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2343],E,42,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2317],E,45,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,51,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,53,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,55,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,56,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,57,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,60,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,62,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,61,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,63,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,64,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,65,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,66,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,67,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,68,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,69,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,71,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,70,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,72,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,73,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,74,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,75,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,76,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,77,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,78,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2344],E,79,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,80,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,81,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2345],E,82,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2346],E,83,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2347],E,84,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,85,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,86,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2348],E,87,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,88,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,89,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,90,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,91,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,92,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,93,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2351],E,94,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,95,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,96,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,97,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,98,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,99,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,100,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,101,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,102,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,103,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2352],E,104,[[["self"],[R[13]]],[R[2]]]],[11,"migrated","rayon",R[2418],20,[[["self"]],["bool"]]],[11,"index",E,R[2394],21,[[["self"]],["usize"]]],[11,"name",E,R[2395],21,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[1469],E,R[2396],21,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"run",E,R[2397],21,[[]]],[11,"new",E,R[1470],22,[[[R[1459]]],[[R[1466]],["box",["error"]],[R[2],[R[1466],"box"]]]]],[11,"install",E,R[2398],22,[[["self"],["op"]],["r"]]],[11,R[1460],E,R[2399],22,[[["self"]],["usize"]]],[11,R[1461],E,R[2400],22,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1462],E,R[2401],22,[[["self"]],[[R[32],["bool"]],["bool"]]]],[11,"join",E,R[2402],22,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1463],22,[[["self"],["op"]],["r"]]],[11,R[2390],E,R[1463],22,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1465],22,[[["self"],["op"]]]],[11,R[1464],E,R[1465],22,[[["self"],["op"]]]],[11,"new",E,R[2403],24,[[],[[R[2361],[R[2349]]],[R[2349]]]]],[11,"build",E,R[2404],24,[[],[[R[1466]],[R[2],[R[1466],R[1467]]],[R[1467]]]]],[11,R[2405],E,R[2406],24,[[],[[R[2],[R[1467]]],[R[1467]]]]],[11,R[2407],E,R[2408],24,[[["w"],["f"]],[[R[2],[R[1467]]],[R[1467]]]]],[11,R[2409],E,R[2410],24,[[["f"]],[[R[1468]],[R[2361],[R[1468]]]]]],[11,R[1471],E,R[2411],24,[[["f"]],[R[2361]]]],[11,R[1472],E,R[2412],24,[[["usize"]],[R[2361]]]],[11,R[1473],E,R[2413],24,[[["h"]],[R[2361]]]],[11,R[1469],E,R[2414],24,[[["usize"]],[R[2361]]]],[11,R[1474],E,R[2415],24,[[],[R[2361]]]],[11,R[1475],E,R[2416],24,[[["h"]],[R[2361]]]],[11,R[1476],E,R[2417],24,[[["h"]],[R[2361]]]],[11,"spawn",E,R[1458],25,[[["self"],["body"]]]],[11,R[1464],E,R[1458],26,[[["self"],["body"]]]],[11,"is_left",R[2317],R[214],0,[[["self"]],["bool"]]],[11,"is_right",E,R[215],0,[[["self"]],["bool"]]],[11,"left",E,R[216],0,[[],[R[32]]]],[11,"right",E,R[217],0,[[],[R[32]]]],[11,"as_ref",E,R[218],0,[[["self"]],[["r"],[R[25]],["l"]]]],[11,"as_mut",E,R[219],0,[[["self"]],[["r"],[R[25]],["l"]]]],[11,"flip",E,R[220],0,[[],[R[25]]]],[11,"map_left",E,R[26],0,[[["f"]],[R[25]]]],[11,R[221],E,R[27],0,[[["f"]],[R[25]]]],[11,R[25],E,R[222],0,[[["f"],["g"]],[T]]],[11,R[223],E,R[224],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[225],E,R[26],0,[[["f"]],[R[25]]]],[11,R[226],E,R[27],0,[[["f"]],[R[25]]]],[11,R[30],E,R[227],0,[[],[R[25]]]],[11,"left_or",E,R[228],0,[[["l"]],["l"]]],[11,R[229],E,R[230],0,[[],["l"]]],[11,R[231],E,R[28],0,[[["f"]],["l"]]],[11,"right_or",E,R[232],0,[[["r"]],["r"]]],[11,R[233],E,R[234],0,[[],["r"]]],[11,R[235],E,R[28],0,[[["f"]],["r"]]],[11,R[236],E,R[29],0,[[]]],[11,R[237],E,R[29],0,[[]]],[11,R[6],E,R[238],0,[[],[T]]]],"p":[[4,"Either"],[8,R[2362]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[2363]],[8,R[2364]],[3,"Repeat"],[8,R[2331]],[8,R[2365]],[8,R[2366]],[8,R[2367]],[8,R[2368]],[8,R[2369]],[8,R[2370]],[8,R[2371]],[8,R[2372]],[8,R[2373]],[8,R[2374]],[3,R[2420]],[3,R[1477]],[3,R[2381]],[3,R[1480]],[3,R[1478]],[3,"Scope"],[3,R[2419]],[3,R[165]],[3,"Iter"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,R[165]],[3,"Iter"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,R[165]],[3,"Iter"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[2375]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,R[244]],[3,R[245]],[3,R[253]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Inspect"],[3,"PanicFuse"],[3,R[248]],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[1649]],[3,"Bytes"],[3,R[2376]],[3,"Split"],[3,R[2377]],[3,"Lines"],[3,R[2378]],[3,"Matches"],[3,R[2379]],[3,R[165]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[1477],"rayon_core",R[2380],N,N],[3,"Scope",E,R[1456],N,N],[3,R[2419],E,R[1456],N,N],[3,R[2381],E,R[2382],N,N],[3,R[1480],E,R[2383],N,N],[3,R[1478],E,R[2384],N,N],[3,R[1479],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[2420],E,R[2385],N,N],[5,"join",E,R[2386],N,[[["a"],["b"]]]],[5,R[2387],E,R[2388],N,[[["a"],["b"]]]],[5,"scope",E,R[2389],N,[[["op"]],["r"]]],[5,R[2390],E,R[2391],N,[[["op"]],["r"]]],[5,"spawn",E,R[1457],N,[[["f"]]]],[5,R[1464],E,R[1457],N,[[["f"]]]],[5,R[1462],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[[R[32],["bool"]],["bool"]]]],[5,R[1461],E,R[2392],N,[[],[[R[32],["usize"]],["usize"]]]],[5,R[1460],E,R[2393],N,[[],["usize"]]],[5,"initialize",E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[1459]]],[[R[2],["box"]],["box",["error"]]]]],[11,"index",E,R[2394],0,[[["self"]],["usize"]]],[11,"name",E,R[2395],0,[[["self"]],[[R[32],["str"]],["str"]]]],[11,R[1469],E,R[2396],0,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"run",E,R[2397],0,[[]]],[11,"spawn",E,R[1458],1,[[["self"],["body"]]]],[11,R[1464],E,R[1458],2,[[["self"],["body"]]]],[11,"new",E,R[1470],3,[[[R[1459]]],[[R[1466]],["box",["error"]],[R[2],[R[1466],"box"]]]]],[11,"install",E,R[2398],3,[[["self"],["op"]],["r"]]],[11,R[1460],E,R[2399],3,[[["self"]],["usize"]]],[11,R[1461],E,R[2400],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1462],E,R[2401],3,[[["self"]],[[R[32],["bool"]],["bool"]]]],[11,"join",E,R[2402],3,[[["self"],["a"],["b"]]]],[11,"scope",E,R[1463],3,[[["self"],["op"]],["r"]]],[11,R[2390],E,R[1463],3,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[1465],3,[[["self"],["op"]]]],[11,R[1464],E,R[1465],3,[[["self"],["op"]]]],[11,"new",E,R[2403],4,[[],["self"]]],[11,"build",E,R[2404],4,[[],[[R[1466]],[R[2],[R[1466],R[1467]]],[R[1467]]]]],[11,R[2405],E,R[2406],4,[[],[[R[1467]],[R[2],[R[1467]]]]]],[11,R[2407],E,R[2408],4,[[["w"],["f"]],[[R[2],[R[1467]]],[R[1467]]]]],[11,R[2409],E,R[2410],4,[[["f"]],[[R[2361],[R[1468]]],[R[1468]]]]],[11,R[1471],E,R[2411],4,[[["f"]],["self"]]],[11,R[1472],E,R[2412],4,[[["usize"]],["self"]]],[11,R[1473],E,R[2413],4,[[["h"]],["self"]]],[11,R[1469],E,R[2414],4,[[["usize"]],["self"]]],[11,R[1474],E,R[2415],4,[[],["self"]]],[11,R[1475],E,R[2416],4,[[["h"]],["self"]]],[11,R[1476],E,R[2417],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[1459]]]],[11,"build",E,R[1470],5,[[],[[R[1466]],["box",["error"]],[R[2],[R[1466],"box"]]]]],[11,R[1471],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[1472],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[1459]]]],[11,R[1473],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[1459]]]],[11,R[1469],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[1474],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[1475],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[1459]]]],[11,R[1476],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[1459]]]],[11,"migrated",E,R[2418],6,[[["self"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,7,[[],[U]]],[11,R[95],E,E,7,[[["self"]],[R[63]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"drop",E,E,3,[[["self"]]]],[11,R[99],E,E,4,[[],["self"]]],[11,R[99],E,E,5,[[],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[1477]],[3,"Scope"],[3,R[2419]],[3,R[2381]],[3,R[1478]],[3,R[1479]],[3,R[2420]],[3,R[1480]]]};
searchIndex["regex_automata"]={"doc":"A low level regular expression library that uses…","i":[[3,"Regex",R[439],"A regular expression that uses deterministic finite…",N,N],[4,R[468],E,R[435],N,N],[13,R[432],E,R[436],0,N],[13,R[426],E,R[427],0,N],[13,R[433],E,R[437],0,N],[13,R[434],E,R[438],0,N],[4,R[440],E,R[441],N,N],[13,R[432],E,R[442],1,N],[13,R[426],E,R[427],1,N],[11,"as_ref",E,"Cheaply return a borrowed version of this dense DFA.…",0,[[["self"]],[R[461]]]],[11,R[428],E,R[429],0,[[["self"]],["usize"]]],[11,R[430],E,"Deserialize a DFA with a specific state identifier…",0,[[],[R[461]]]],[11,R[463],E,"Returns true if and only if the given bytes match.",2,[[["self"]],["bool"]]],[11,R[444],E,R[445],2,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"find",E,"Returns the start and end offset of the leftmost first…",2,[[["self"]],[R[32]]]],[11,R[446],E,R[447],2,[[["self"],["usize"]],["bool"]]],[11,R[448],E,R[449],2,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,"find_at",E,R[450],2,[[["self"],["usize"]],[R[32]]]],[11,"find_iter",E,"Returns an iterator over all non-overlapping leftmost…",2,[[["self"]],["matches"]]],[11,"from_dfas",E,"Build a new regex from its constituent forward and reverse…",2,[[["d"]],["regex"]]],[11,"forward",E,"Return the underlying DFA responsible for forward matching.",2,[[["self"]],["d"]]],[11,"reverse",E,"Return the underlying DFA responsible for reverse matching.",2,[[["self"]],["d"]]],[11,"as_ref",E,"Cheaply return a borrowed version of this sparse DFA.…",1,[[["self"]],[R[431]]]],[11,R[428],E,R[429],1,[[["self"]],["usize"]]],[11,R[430],E,"Deserialize a sparse DFA with a specific state identifier…",1,[[],[R[431]]]],[0,"dense",E,"Types and routines specific to dense DFAs.",N,N],[3,R[432],R[451],"A standard dense DFA that does not use premultiplication…",N,N],[3,R[426],E,"A dense DFA that shrinks its alphabet.",N,N],[3,R[433],E,"A dense DFA that premultiplies all of its state…",N,N],[3,R[434],E,"The default configuration of a dense DFA, which uses byte…",N,N],[4,R[468],E,R[435],N,N],[13,R[432],E,R[436],0,N],[13,R[426],E,R[427],0,N],[13,R[433],E,R[437],0,N],[13,R[434],E,R[438],0,N],[0,"sparse",R[439],"Types and routines specific to sparse DFAs.",N,N],[3,R[432],R[452],"A standard sparse DFA that does not use premultiplication…",N,N],[3,R[426],E,"A sparse DFA that shrinks its alphabet.",N,N],[4,R[440],E,R[441],N,N],[13,R[432],E,R[442],1,N],[13,R[426],E,R[427],1,N],[8,"DFA",R[439],"A trait describing the interface of a deterministic finite…",N,N],[16,"ID",E,"The representation used for state identifiers in this DFA.",3,N],[10,R[453],E,"Return the identifier of this DFA's start state.",3,[[["self"]]]],[10,R[454],E,R[443],3,[[["self"]],["bool"]]],[10,R[455],E,R[443],3,[[["self"]],["bool"]]],[10,R[456],E,R[443],3,[[["self"]],["bool"]]],[10,R[457],E,"Returns true if and only if this DFA is anchored.",3,[[["self"]],["bool"]]],[10,R[458],E,"Given the current state that this DFA is in and the next…",3,[[["self"],["u8"]]]],[10,R[459],E,"Like `next_state`, but its implementation may look up the…",3,[[["self"],["u8"]]]],[11,R[463],E,R[464],3,[[["self"]],["bool"]]],[11,R[444],E,R[445],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"find",E,R[465],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind",E,R[466],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[446],E,R[447],3,[[["self"],["usize"]],["bool"]]],[11,R[448],E,R[449],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,"find_at",E,R[450],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[460],E,R[467],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[8,"StateID",E,"A trait describing the representation of a DFA's state…",N,N],[10,R[625],E,"Convert from a `usize` to this implementation's…",4,[[["usize"]],["self"]]],[10,R[794],E,"Convert this implementation's representation to a `usize`.",4,[[],["usize"]]],[10,"max_id",E,"Return the maximum state identifier supported by this…",4,[[],["usize"]]],[10,"read_bytes",E,"Read a single state identifier from the given slice of…",4,[[],["self"]]],[10,"write_bytes",E,"Write this state identifier to the given slice of bytes in…",4,[[]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[7],R[451],E,5,[[[U]],[R[2]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,R[7],R[452],E,9,[[[U]],[R[2]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,R[453],R[439],E,0,[[["self"]],["s"]]],[11,R[454],E,E,0,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,0,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,0,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,0,[[["self"]],["bool"]]],[11,R[458],E,E,0,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,0,[[["self"],["s"],["u8"]],["s"]]],[11,R[446],E,E,0,[[["self"],["usize"]],["bool"]]],[11,R[448],E,E,0,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,"find_at",E,E,0,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[460],E,E,0,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[453],R[451],E,5,[[["self"]],["s"]]],[11,R[454],E,E,5,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,5,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,5,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,5,[[["self"]],["bool"]]],[11,R[458],E,E,5,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,5,[[["self"],["s"],["u8"]],["s"]]],[11,R[453],E,E,6,[[["self"]],["s"]]],[11,R[454],E,E,6,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,6,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,6,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,6,[[["self"]],["bool"]]],[11,R[458],E,E,6,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,6,[[["self"],["s"],["u8"]],["s"]]],[11,R[453],E,E,7,[[["self"]],["s"]]],[11,R[454],E,E,7,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,7,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,7,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,7,[[["self"]],["bool"]]],[11,R[458],E,E,7,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,7,[[["self"],["s"],["u8"]],["s"]]],[11,R[453],E,E,8,[[["self"]],["s"]]],[11,R[454],E,E,8,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,8,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,8,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,8,[[["self"]],["bool"]]],[11,R[458],E,E,8,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,8,[[["self"],["s"],["u8"]],["s"]]],[11,R[453],R[439],E,1,[[["self"]],["s"]]],[11,R[454],E,E,1,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,1,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,1,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,1,[[["self"]],["bool"]]],[11,R[458],E,E,1,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,1,[[["self"],["s"],["u8"]],["s"]]],[11,R[446],E,E,1,[[["self"],["usize"]],["bool"]]],[11,R[448],E,E,1,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,"find_at",E,E,1,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[460],E,E,1,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[453],R[452],E,9,[[["self"]],["s"]]],[11,R[454],E,E,9,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,9,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,9,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,9,[[["self"]],["bool"]]],[11,R[458],E,E,9,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,9,[[["self"],["s"],["u8"]],["s"]]],[11,R[453],E,E,10,[[["self"]],["s"]]],[11,R[454],E,E,10,[[["self"],["s"]],["bool"]]],[11,R[455],E,E,10,[[["self"],["s"]],["bool"]]],[11,R[456],E,E,10,[[["self"],["s"]],["bool"]]],[11,R[457],E,E,10,[[["self"]],["bool"]]],[11,R[458],E,E,10,[[["self"],["s"],["u8"]],["s"]]],[11,R[459],E,E,10,[[["self"],["s"],["u8"]],["s"]]],[11,"fmt",R[439],E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[451],E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[439],E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[452],E,9,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[13]]],[R[2]]]],[11,"clone",R[439],E,0,[[["self"]],[R[461]]]],[11,"clone",R[451],E,5,[[["self"]],["standard"]]],[11,"clone",E,E,6,[[["self"]],[R[462]]]],[11,"clone",E,E,7,[[["self"]],["premultiplied"]]],[11,"clone",E,E,8,[[["self"]],["premultipliedbyteclass"]]],[11,"clone",R[439],E,2,[[["self"]],["regex"]]],[11,"clone",E,E,1,[[["self"]],[R[431]]]],[11,"clone",R[452],E,9,[[["self"]],["standard"]]],[11,"clone",E,E,10,[[["self"]],[R[462]]]],[11,R[463],R[439],R[464],3,[[["self"]],["bool"]]],[11,R[444],E,R[445],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"find",E,R[465],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,"rfind",E,R[466],3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[446],E,R[447],3,[[["self"],["usize"]],["bool"]]],[11,R[448],E,R[449],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,"find_at",E,R[450],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]],[11,R[460],E,R[467],3,[[["self"],["usize"]],[[R[32],["usize"]],["usize"]]]]],"p":[[4,R[468]],[4,R[440]],[3,"Regex"],[8,"DFA"],[8,"StateID"],[3,R[432]],[3,R[426]],[3,R[433]],[3,R[434]],[3,R[432]],[3,R[426]]]};
searchIndex["rustlearn"]={"doc":"A machine learning crate for Rust.","i":[[0,"array",R[2155],"Basic matrix-like datastructures.",N,N],[0,"dense",R[2148],R[2145],N,N],[3,"Array",R[2174],R[2145],N,N],[3,R[2205],E,"A view into a row or column of an existing dense matrix.",N,N],[3,R[2226],E,"Iterator over row or column views of a dense matrix.",N,N],[3,R[2227],E,"Iterator over entries of a dense matrix view.",N,N],[3,R[2228],E,"Iterator over nonzero entries of a dense matrix view.",N,N],[5,"allclose",E,"Determines whether two arrays are sufficiently close to…",N,[[["array"]],["bool"]]],[5,"close",E,"Determines whether two floats are sufficiently close to…",N,[[["f32"]],["bool"]]],[11,"iter",E,"Iterate over elements of the `ArrayView`.",0,[[["self"]],["arrayviewiterator"]]],[11,"zeros",E,"Create a `rows` by `cols` array of zeros.",1,[[["usize"]],["array"]]],[11,"ones",E,"Create a `rows` by `cols` array of ones.",1,[[["usize"]],["array"]]],[11,"reshape",E,"Change the shape of the array to `rows` by `cols`.",1,[[["self"],["usize"]]]],[11,"order",E,"Return the order (row-major or column-major) of the array.",1,[[["self"]],[R[2201]]]],[11,"data",E,R[2146],1,[[["self"]],["vec"]]],[11,"as_slice",E,R[2146],1,[[["self"]]]],[11,R[2147],E,"Return an mutable reference to the underlying data buffer…",1,[[["self"]]]],[11,"T",E,"Transpose the matrix.",1,[[],["array"]]],[11,"sum",E,"Compute the sum of the entries of the array.",1,[[["self"]],["f32"]]],[11,"mean",E,"Compute the mean of the array.",1,[[["self"]],["f32"]]],[0,"sparse",R[2148],"Sparse matrices.",N,N],[3,R[2206],R[2176],"A sparse matrix with entries arranged row-wise.",N,N],[3,R[2207],E,"A sparse matrix with entries arranged column-wise.",N,N],[3,R[2208],E,"A view into a row or a column of an existing sparse matrix.",N,N],[3,R[2229],E,"Iterator over nonzero entries of a `SparseArrayView`.",N,N],[3,R[2230],E,"Iterator over row or column views of a sparse matrix.",N,N],[11,"zeros",E,R[2149],2,[[["usize"]],[R[2163]]]],[11,"nnz",E,R[2150],2,[[["self"]],["usize"]]],[11,"todense",E,E,2,[[["self"]],["array"]]],[11,"zeros",E,R[2149],3,[[["usize"]],[R[2197]]]],[11,"nnz",E,R[2150],3,[[["self"]],["usize"]]],[11,"todense",E,E,3,[[["self"]],["array"]]],[11,"indices",E,"Returns a reference to indices of nonzero entries of the…",4,[[["self"]]]],[11,"data",E,"Returns a reference to values of nonzero entries of the…",4,[[["self"]]]],[11,"nnz",E,"Returns the count of  nonzero entries of the view.",4,[[["self"]],["usize"]]],[0,"traits",R[2148],"Basic traits applying to all types of matrices.",N,N],[4,R[2209],R[2177],E,N,N],[13,"RowMajor",E,E,5,N],[13,"ColumnMajor",E,E,5,N],[8,R[2210],E,"Trait representing a shaped matrix whose entries can be…",N,N],[10,"rows",E,"Return the number of rows of the matrix.",6,[[["self"]],["usize"]]],[10,"cols",E,"Return the number of columns of the matrix.",6,[[["self"]],["usize"]]],[10,R[2188],E,"Get the value of the entry at (`row`, `column`) without…",6,[[["self"],["usize"]],["f32"]]],[10,R[2189],E,"Get a mutable reference to the value of the entry at…",6,[[["self"],["usize"]],["f32"]]],[11,"get",E,"Get the value of the entry at (`row`, `column`).",6,[[["self"],["usize"]],["f32"]]],[11,"get_mut",E,"Get a mutable reference to value of the entry at (`row`,…",6,[[["self"],["usize"]],["f32"]]],[11,"set",E,"Set the value of the entry at (`row`, `column`) to `value`.",6,[[["self"],["f32"],["usize"]]]],[11,R[2190],E,"Set the value of the entry at (`row`, `column`) to `value`…",6,[[["self"],["f32"],["usize"]]]],[8,R[2211],E,R[2151],N,N],[16,"Item",E,E,7,N],[16,"Output",E,E,7,N],[10,"iter_rows",E,"Iterate over rows of the matrix.",7,[[]]],[10,"iter_rows_range",E,"Iterate over a subset of rows of the matrix.",7,[[["range",["usize"]],["usize"]]]],[10,"view_row",E,"View a row of the matrix.",7,[[["usize"]]]],[8,R[2212],E,R[2151],N,N],[16,"Item",E,E,8,N],[16,"Output",E,E,8,N],[10,"iter_columns",E,"Iterate over columns of a the matrix.",8,[[]]],[10,"iter_columns_range",E,"Iterate over a subset of columns of the matrix.",8,[[["range",["usize"]],["usize"]]]],[10,"view_column",E,"View a column of the matrix.",8,[[["usize"]]]],[8,R[2213],E,"Trait representing an object whose non-zero entries can be…",N,N],[16,"Output",E,E,9,N],[10,R[2191],E,E,9,[[["self"]]]],[8,"RowIndex",E,"Trait representing a matrix whose rows can be selected to…",N,N],[16,"Output",E,E,10,N],[10,R[2175],E,E,10,[[["self"],["rhs"]]]],[8,R[2214],E,"Elementwise array operations trait.",N,N],[16,"Output",E,E,11,N],[10,"add",E,E,11,[[["self"],["rhs"]]]],[10,R[2192],E,E,11,[[["self"],["rhs"]]]],[10,"sub",E,E,11,[[["self"],["rhs"]]]],[10,R[2193],E,E,11,[[["self"],["rhs"]]]],[10,"times",E,E,11,[[["self"],["rhs"]]]],[10,R[2194],E,E,11,[[["self"],["rhs"]]]],[10,"div",E,E,11,[[["self"],["rhs"]]]],[10,R[2195],E,E,11,[[["self"],["rhs"]]]],[8,"Dot",E,"A matrix multiplication trait.",N,N],[16,"Output",E,E,12,N],[10,"dot",E,E,12,[[["self"],["rhs"]]]],[0,"prelude",R[2148],"Prelude containing basic matrix-like structures and traits.",N,N],[0,R[2152],R[2155],"Cross validation utilities.",N,N],[0,R[2152],R[2153],"K-fold cross validation.",N,N],[3,R[2215],R[2178],E,N,N],[11,"new",E,"Create a new instance of the cross validation utility.",13,[[["usize"]],["crossvalidation"]]],[11,"set_rng",E,"Fix the random number generator.",13,[[["self"],["stdrng"]]]],[0,"shuffle_split",R[2153],"Validation via repeated random shuffling of the data and…",N,N],[3,R[2216],R[2179],E,N,N],[11,"new",E,"Create a new instance of the shuffle split utility.",14,[[["f32"],["usize"]],["shufflesplit"]]],[11,"set_rng",E,R[2157],14,[[["self"],["stdrng"]]]],[0,"datasets",R[2155],"Datasets and dataset loading utilities.",N,N],[0,"iris",R[2154],"The iris dataset.",N,N],[5,"load_data","rustlearn::datasets::iris","Load the iris dataset, returning a tuple of (features,…",N,[[]]],[0,"boston",R[2154],"The Boston house prices dataset.",N,N],[5,"load_data","rustlearn::datasets::boston","Load the Boston house prices dataset, returning a tuple of…",N,[[]]],[0,"ensemble",R[2155],"Ensemble models.",N,N],[0,"random_forest","rustlearn::ensemble","Random forests.",N,N],[3,R[2159],R[2180],E,N,N],[3,R[2217],E,E,N,N],[11,"new",E,"Create a new instance of Hyperparameters, using the…",15,[[["usize"],[R[2156]]],[R[2156]]]],[11,"rng",E,R[2157],15,[[["self"],["stdrng"]],[R[2156]]]],[11,"build",E,"Build the random forest model.",15,[[["self"]],[R[2158]]]],[11,R[2160],E,"Build a one-vs-rest multiclass random forest.",15,[[["self"]],[[R[2161],[R[2158]]],[R[2158]]]]],[11,"trees",E,"Return a reference to the consituent trees vector.",16,[[["self"]],["vec"]]],[0,"factorization",R[2155],"Factorization models.",N,N],[0,"factorization_machines","rustlearn::factorization","A factorization machine model implemented using stochastic…",N,N],[3,R[2159],R[2181],"Hyperparameters for a FactorizationMachine",N,N],[3,R[2218],E,"A two-class factorization machine implemented using…",N,N],[11,"new",E,R[2164],17,[[["usize"]],[R[2156]]]],[11,R[2165],E,R[2166],17,[[["self"],["f32"]],[R[2156]]]],[11,"l2_penalty",E,R[2167],17,[[["self"],["f32"]],[R[2156]]]],[11,"l1_penalty",E,R[2168],17,[[["self"],["f32"]],[R[2156]]]],[11,"rng",E,E,17,[[["self"],["stdrng"]],[R[2156]]]],[11,"build",E,R[2169],17,[[["self"]],[R[2162]]]],[11,R[2160],E,R[2171],17,[[["self"]],[[R[2161],[R[2162]]],[R[2162]]]]],[11,R[2172],E,E,18,[[["self"]],["array"]]],[11,"get_latent_factors",E,E,18,[[["self"]],["array"]]],[0,"feature_extraction",R[2155],"Feature extraction utilities.",N,N],[0,"dict_vectorizer","rustlearn::feature_extraction","`DictVectorizer` vectorizers a set of named features into…",N,N],[3,R[2219],R[2182],E,N,N],[11,"new",E,"Create a new `DictVectorizer`.",19,[[],[R[2203]]]],[11,"partial_fit",E,"Set the feature value of a named feature in a given row.",19,[[["self"],["f32"],["usize"],["str"]]]],[11,"transform",E,"Transform the accumulated data into a sparse array.",19,[[["self"]],[R[2163]]]],[11,"dictionary",E,"Return a reference to the feature dictionary, mapping…",19,[[["self"]],["hashmap"]]],[0,"linear_models",R[2155],"Linear models.",N,N],[0,R[2170],"rustlearn::linear_models","A two-class logistic regression classifier implemented…",N,N],[3,R[2159],R[2183],"Hyperparameters for a `SGDClassifier` model.",N,N],[3,R[2220],E,"A two-class linear regression classifier implemented using…",N,N],[11,"new",E,R[2164],20,[[["usize"]],[R[2156]]]],[11,R[2165],E,R[2166],20,[[["self"],["f32"]],[R[2156]]]],[11,"l2_penalty",E,R[2167],20,[[["self"],["f32"]],[R[2156]]]],[11,"l1_penalty",E,R[2168],20,[[["self"],["f32"]],[R[2156]]]],[11,"build",E,R[2169],20,[[["self"]],[R[2170]]]],[11,R[2160],E,R[2171],20,[[["self"]],[[R[2161],[R[2170]]],[R[2170]]]]],[11,R[2172],E,"Returns a reference to the estimated coefficients vector.",21,[[["self"]],["array"]]],[0,"metrics",R[2155],"Accuracy metrics.",N,N],[5,"roc_auc_score","rustlearn::metrics","Compute the ROC AUC score for a binary classification…",N,[[["array"]],[["f32"],[R[2],["f32","str"]],["str"]]]],[5,"dcg_score",E,"Discounted Cumulative Gain",N,[[["array"],["i32"]],["f32"]]],[5,"ndcg_score",E,"Normalized Discounted Cumulative Gain",N,[[["array"],["i32"]],["f32"]]],[5,"accuracy_score",E,"Measure classifier accuracy",N,[[["array"]],["f32"]]],[5,"mean_absolute_error",E,"Measure Regressor Performance",N,[[["array"]],["f32"]]],[5,"mean_squared_error",E,"Measure Regressor Performance Mean Squared Error # Panics…",N,[[["array"]],["f32"]]],[0,"multiclass",R[2155],"Utilities for mutliclass classifiers.",N,N],[3,"OneVsRest",R[2184],E,N,N],[3,R[2221],E,"Wraps simple two-class classifiers to implement…",N,N],[11,"split",E,E,22,[[["array"]],["onevsrest"]]],[11,"merge",E,E,22,[[],["array"]]],[11,"new",E,E,23,[[[T]],[R[2161]]]],[11,"models",E,E,23,[[["self"]],["vec"]]],[11,"class_labels",E,E,23,[[["self"]],["vec"]]],[0,"svm",R[2155],"Support vector machines.",N,N],[0,"libsvm","rustlearn::svm","Models provided by the `libsvm` library.",N,N],[0,"svc","rustlearn::svm::libsvm","Support Vector Classifier using the `libsvm` library.",N,N],[3,R[2159],R[2185],"Hyperparameters for the SVC model.",N,N],[3,"SVC",E,"Support Vector Classifier provided by the `libsvm` library.",N,N],[4,"KernelType",E,"Type of the kernel used by the SVM.",N,N],[13,"Linear",E,E,24,N],[13,"Polynomial",E,E,24,N],[13,"RBF",E,E,24,N],[13,"Sigmoid",E,E,24,N],[13,"Precomputed",E,"Not implemented.",24,N],[11,"new",E,E,25,[[["usize"],["kerneltype"]],[R[2156]]]],[11,"C",E,"Set the regularization parameter `C`; smaller values mean…",25,[[["self"],["f64"]],[R[2156]]]],[11,"degree",E,"Set the degree of the polynomial kernel. No effect on…",25,[[["self"],["i32"]],[R[2156]]]],[11,"gamma",E,"Set the gamma parameter of the RBF kernel. Default is `1 /…",25,[[["self"],["f64"]],[R[2156]]]],[11,"coef0",E,"Set the coef0 parameter for the sigmoid kernel. Default is…",25,[[["self"],["f64"]],[R[2156]]]],[11,"cache_size",E,"Set the `libsvm` cache size, in megabytes. Default is…",25,[[["self"],["f64"]],[R[2156]]]],[11,"build",E,"Build the SVC model. `libsvm` natively supports multiclass…",25,[[["self"]],["svc"]]],[0,"traits",R[2155],"Common rustlearn traits.",N,N],[8,R[2222],"rustlearn::traits","Trait describing supervised models.",N,N],[10,"fit",E,E,26,[[["self"],["array"],[T]],[["str"],[R[2],["str"]]]]],[10,R[2196],E,E,26,[[["self"],[T]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,26,[[["self"],[T]],[[R[2],["array","str"]],["array"],["str"]]]],[8,R[2223],E,"Applies to models capable of making predictions in a…",N,N],[10,R[2198],E,E,27,[[["self"],[T],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2199],E,E,27,[[["self"],[T],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[8,R[2224],E,"Applies to models capable of being trained in a parallel…",N,N],[10,R[2200],E,E,28,[[["self"],["usize"],["array"],[T]],[["str"],[R[2],["str"]]]]],[0,"trees",R[2155],"Decision trees.",N,N],[0,"decision_tree","rustlearn::trees","A two-class decision tree classifer.",N,N],[3,R[2159],R[2186],"Hyperparameters for a `DecisionTree` model.",N,N],[3,R[2231],E,"A two-class decision tree.",N,N],[11,"new",E,"Creates new Hyperparameters",29,[[["usize"]],[R[2156]]]],[11,"max_features",E,"Set the maximum number of features to be considered when…",29,[[["self"],["usize"]],[R[2156]]]],[11,"min_samples_split",E,"Set the minimum number of samples that must be present in…",29,[[["self"],["usize"]],[R[2156]]]],[11,"max_depth",E,"Set the maximum depth of the tree.",29,[[["self"],["usize"]],[R[2156]]]],[11,"rng",E,"Set the random number generator used for sampling features…",29,[[["self"],["stdrng"]],[R[2156]]]],[11,"build",E,"Build a binary decision tree model.",29,[[["self"]],[R[2173]]]],[11,R[2160],E,"Build a one-vs-rest multi-class decision tree model.",29,[[["self"]],[[R[2173]],[R[2161],[R[2173]]]]]],[0,"utils",R[2155],"Internal utils.",N,N],[3,R[2225],R[2187],"Wrapper for making random number generators serializable.…",N,N],[12,"rng",E,E,30,N],[5,"check_valid_labels",E,"Check that the input array contains valid binary…",N,[[["array"]],[["str"],[R[2],["str"]]]]],[5,"check_data_dimensionality",E,"Check compatibility of the model dimensions and the number…",N,[[["usize"],[T]],[["str"],[R[2],["str"]]]]],[5,"check_matched_dimensions",E,E,N,[[["array"],[T]],[["str"],[R[2],["str"]]]]],[11,"new",E,E,30,[[],[R[2202]]]],[0,"prelude",R[2155],"Basic data structures and traits used throughout…",N,N],[11,R[2175],R[2174],E,1,[[["self"],["usize"]]]],[11,R[2175],E,E,1,[[["self"],["range"]]]],[11,R[2175],E,E,1,[[["self"],[R[2111]]]]],[11,R[2175],E,E,1,[[["self"],["rangeto"]]]],[11,R[2175],E,E,1,[[["self"],[R[2113]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,31,[[],[U]]],[11,R[30],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"into",E,E,32,[[],[U]]],[11,R[30],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,33,[[],[U]]],[11,R[30],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,R[2175],R[2176],E,2,[[["self"],["usize"]]]],[11,R[2175],E,E,2,[[["self"],["range"]]]],[11,R[2175],E,E,2,[[["self"],[R[2111]]]]],[11,R[2175],E,E,2,[[["self"],["rangeto"]]]],[11,R[2175],E,E,2,[[["self"],[R[2113]]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,34,[[],[U]]],[11,R[30],E,E,34,[[],["i"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,"into",E,E,35,[[],[U]]],[11,R[30],E,E,35,[[],["i"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,"into",R[2177],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",R[2178],E,13,[[],[U]]],[11,R[30],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",R[2179],E,14,[[],[U]]],[11,R[30],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",R[2180],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"],[T]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",R[2181],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[37],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"],[T]]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",R[2182],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",R[2183],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[37],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"],[T]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",R[2184],E,22,[[],[U]]],[11,R[30],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",R[2185],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[37],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"],[T]]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,"into",R[2186],E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[37],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"],[T]]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"into",R[2187],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"rows",R[2174],E,1,[[["self"]],["usize"]]],[11,"cols",E,E,1,[[["self"]],["usize"]]],[11,R[2188],E,E,1,[[["self"],["usize"]],["f32"]]],[11,R[2189],E,E,1,[[["self"],["usize"]],["f32"]]],[11,"rows",R[2176],E,2,[[["self"]],["usize"]]],[11,"cols",E,E,2,[[["self"]],["usize"]]],[11,R[2188],E,E,2,[[["self"],["usize"]],["f32"]]],[11,R[2189],E,E,2,[[["self"],["usize"]],["f32"]]],[11,R[2190],E,E,2,[[["self"],["f32"],["usize"]]]],[11,"rows",E,E,3,[[["self"]],["usize"]]],[11,"cols",E,E,3,[[["self"]],["usize"]]],[11,R[2188],E,E,3,[[["self"],["usize"]],["f32"]]],[11,R[2189],E,E,3,[[["self"],["usize"]],["f32"]]],[11,R[2190],E,E,3,[[["self"],["f32"],["usize"]]]],[11,R[2191],R[2174],E,0,[[["self"]],["arrayviewnonzeroiterator"]]],[11,R[2191],R[2176],E,4,[[["self"]],["sparsearrayviewiterator"]]],[11,R[2175],R[2174],E,1,[[["self"],["vec"]],["array"]]],[11,R[2175],R[2176],E,2,[[["self"],["vec"]],[R[2163]]]],[11,"add",R[2174],E,1,[[["self"],["f32"]],["array"]]],[11,R[2192],E,E,1,[[["self"],["f32"]]]],[11,"sub",E,E,1,[[["self"],["f32"]],["array"]]],[11,R[2193],E,E,1,[[["self"],["f32"]]]],[11,"times",E,E,1,[[["self"],["f32"]],["array"]]],[11,R[2194],E,E,1,[[["self"],["f32"]]]],[11,"div",E,E,1,[[["self"],["f32"]],["array"]]],[11,R[2195],E,E,1,[[["self"],["f32"]]]],[11,"add",E,E,1,[[["self"],["array"]],["array"]]],[11,R[2192],E,E,1,[[["self"],["array"]]]],[11,"sub",E,E,1,[[["self"],["array"]],["array"]]],[11,R[2193],E,E,1,[[["self"],["array"]]]],[11,"times",E,E,1,[[["self"],["array"]],["array"]]],[11,R[2194],E,E,1,[[["self"],["array"]]]],[11,"div",E,E,1,[[["self"],["array"]],["array"]]],[11,R[2195],E,E,1,[[["self"],["array"]]]],[11,"dot",E,E,1,[[["self"],["array"]],["array"]]],[11,"fit",R[2180],E,16,[[["self"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,16,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,16,[[["self"],[R[2163]],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,16,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",R[2181],E,18,[[["self"],[T],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,18,[[["self"],[T]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",R[2183],E,21,[[["self"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,21,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,21,[[["self"],[R[2163]],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,21,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",R[2184],E,23,[[["self"],["array"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,23,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,23,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,23,[[["self"],[R[2163]],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,23,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,23,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,23,[[["self"],["array"],[R[2197]]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,23,[[["self"],[R[2197]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,23,[[["self"],[R[2197]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",R[2185],E,36,[[["self"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,36,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,36,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,36,[[["self"],[R[2163]],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,36,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"predict",E,E,36,[[["self"],[R[2163]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",R[2186],E,37,[[["self"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,37,[[["self"],["array"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,"fit",E,E,37,[[["self"],[R[2197]],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2196],E,E,37,[[["self"],[R[2197]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2198],R[2183],E,21,[[["self"],["array"],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2198],R[2184],E,23,[[["self"],["array"],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2199],E,E,23,[[["self"],["array"],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2198],E,E,23,[[["self"],[R[2163]],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2199],E,E,23,[[["self"],[R[2163]],["usize"]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2198],E,E,23,[[["self"],["usize"],[R[2197]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2199],E,E,23,[[["self"],["usize"],[R[2197]]],[[R[2],["array","str"]],["array"],["str"]]]],[11,R[2200],R[2181],E,18,[[["self"],["usize"],[T],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2200],R[2184],E,23,[[["self"],["usize"],["array"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2200],E,E,23,[[["self"],[R[2163]],["usize"],["array"]],[["str"],[R[2],["str"]]]]],[11,R[2200],E,E,23,[[["self"],["usize"],["array"],[R[2197]]],[["str"],[R[2],["str"]]]]],[11,"clone",R[2174],E,1,[[["self"]],["array"]]],[11,"clone",E,E,0,[[["self"]],[R[2059]]]],[11,"clone",R[2176],E,4,[[["self"]],[R[2204]]]],[11,"clone",R[2177],E,5,[[["self"]],[R[2201]]]],[11,"clone",R[2180],E,16,[[["self"]],[R[2158]]]],[11,"clone",R[2181],E,18,[[["self"]],[R[2162]]]],[11,"clone",R[2183],E,21,[[["self"]],[R[2170]]]],[11,"clone",R[2185],E,24,[[["self"]],["kerneltype"]]],[11,"clone",E,E,25,[[["self"]],[R[2156]]]],[11,"clone",E,E,36,[[["self"]],["svc"]]],[11,"clone",R[2186],E,29,[[["self"]],[R[2156]]]],[11,"clone",E,E,37,[[["self"]],[R[2173]]]],[11,"clone",R[2187],E,30,[[["self"]],[R[2202]]]],[11,R[99],R[2182],E,19,[[],[R[2203]]]],[11,R[99],R[2187],E,30,[[],["self"]]],[11,"from",R[2174],"Construct an array from a vector.",1,[[["f32"],["vec",["f32"]]],["array"]]],[11,"from",E,"Construct an array from a vector of vectors.",1,[[["vec"]],["array"]]],[11,"from",R[2176],E,2,[[["array"]],[R[2163]]]],[11,"from",E,E,2,[[[R[2197]]],[R[2163]]]],[11,"from",E,E,3,[[["array"]],[R[2197]]]],[11,"from",E,E,3,[[[R[2163]]],[R[2197]]]],[11,"next",R[2174],E,31,[[["self"]],[[R[2059]],[R[32],[R[2059]]]]]],[11,"next",E,E,32,[[["self"]],[["f32"],[R[32],["f32"]]]]],[11,"next",E,E,33,[[["self"]],[R[32]]]],[11,"next",R[2176],E,34,[[["self"]],[R[32]]]],[11,"next",E,E,35,[[["self"]],[[R[2204]],[R[32],[R[2204]]]]]],[11,"next",R[2178],E,13,[[["self"]],[R[32]]]],[11,"next",R[2179],E,14,[[["self"]],[R[32]]]],[11,"next",R[2184],E,22,[[["self"]],[R[32]]]],[11,"fmt",R[2174],E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2176],E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2177],E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[2185],E,24,[[["self"],[R[13]]],[R[2]]]],[11,R[1655],R[2174],E,1,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2176],E,2,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,3,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2177],E,5,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2180],E,15,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,16,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2181],E,17,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,18,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2182],E,19,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2183],E,20,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,21,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2184],E,23,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2185],E,24,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,25,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,36,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2186],E,29,[[["self"],["__s"]],[R[2]]]],[11,R[1655],E,E,37,[[["self"],["__s"]],[R[2]]]],[11,R[1655],R[2187],E,30,[[["self"],["__s"]],[R[2]]]],[11,R[1193],R[2174],E,1,[[["__d"]],[R[2]]]],[11,R[1193],R[2176],E,2,[[["__d"]],[R[2]]]],[11,R[1193],E,E,3,[[["__d"]],[R[2]]]],[11,R[1193],R[2177],E,5,[[["__d"]],[R[2]]]],[11,R[1193],R[2180],E,15,[[["__d"]],[R[2]]]],[11,R[1193],E,E,16,[[["__d"]],[R[2]]]],[11,R[1193],R[2181],E,17,[[["__d"]],[R[2]]]],[11,R[1193],E,E,18,[[["__d"]],[R[2]]]],[11,R[1193],R[2182],E,19,[[["__d"]],[R[2]]]],[11,R[1193],R[2183],E,20,[[["__d"]],[R[2]]]],[11,R[1193],E,E,21,[[["__d"]],[R[2]]]],[11,R[1193],R[2184],E,23,[[["__d"]],[R[2]]]],[11,R[1193],R[2185],E,24,[[["__d"]],[R[2]]]],[11,R[1193],E,E,25,[[["__d"]],[R[2]]]],[11,R[1193],E,E,36,[[["__d"]],[R[2]]]],[11,R[1193],R[2186],E,29,[[["__d"]],[R[2]]]],[11,R[1193],E,E,37,[[["__d"]],[R[2]]]],[11,R[1193],R[2187],E,30,[[["__d"]],[R[2]]]]],"p":[[3,R[2205]],[3,"Array"],[3,R[2206]],[3,R[2207]],[3,R[2208]],[4,R[2209]],[8,R[2210]],[8,R[2211]],[8,R[2212]],[8,R[2213]],[8,"RowIndex"],[8,R[2214]],[8,"Dot"],[3,R[2215]],[3,R[2216]],[3,R[2159]],[3,R[2217]],[3,R[2159]],[3,R[2218]],[3,R[2219]],[3,R[2159]],[3,R[2220]],[3,"OneVsRest"],[3,R[2221]],[4,"KernelType"],[3,R[2159]],[8,R[2222]],[8,R[2223]],[8,R[2224]],[3,R[2159]],[3,R[2225]],[3,R[2226]],[3,R[2227]],[3,R[2228]],[3,R[2229]],[3,R[2230]],[3,"SVC"],[3,R[2231]]]};
searchIndex["ryu"]={"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",N,N],[11,"new",E,R[180],0,[[],["self"]]],[11,"format",E,R[181],0,[[["self"],["float"]],["str"]]],[11,"format_finite",E,R[181],0,[[["self"],["float"]],["str"]]],[0,"raw",E,"Unsafe functions that mirror the API of the C…",N,N],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",N,[[["f32"]],["usize"]]],[5,"format64",E,"Print f64 to the given buffer and return number of bytes…",N,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",N,N],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"clone",E,E,0,[[["self"]],["buffer"]]],[11,R[99],E,E,0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["same_file"]={"doc":"This crate provides a safe and simple cross platform way…","i":[[3,"Handle","same_file","A handle to a file that can be tested for equality with…",N,N],[5,"is_same_file",E,"Returns true if the two file paths may correspond to the…",N,[[["q"],["p"]],[[R[2],["bool"]],["bool"]]]],[11,R[2238],E,"Construct a handle from a path.",0,[[["path"],["asref",["path"]]],[[R[39]],[R[2],[R[39]]]]]],[11,"from_file",E,"Construct a handle from a file.",0,[[["file"]],[[R[39]],[R[2],[R[39]]]]]],[11,"stdin",E,"Construct a handle from stdin.",0,[[],[[R[39]],[R[2],[R[39]]]]]],[11,"stdout",E,"Construct a handle from stdout.",0,[[],[[R[39]],[R[2],[R[39]]]]]],[11,"stderr",E,"Construct a handle from stderr.",0,[[],[[R[39]],[R[2],[R[39]]]]]],[11,"as_file",E,"Return a reference to the underlying file.",0,[[["self"]],["file"]]],[11,"as_file_mut",E,"Return a mutable reference to the underlying file.",0,[[["self"]],["file"]]],[11,"dev",E,"Return the underlying device number of this handle.",0,[[["self"]],["u64"]]],[11,"ino",E,"Return the underlying inode number of this handle.",0,[[["self"]],["u64"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"eq",E,E,0,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[39]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"into_raw_fd",E,E,0,[[],["rawfd"]]],[11,"as_raw_fd",E,E,0,[[["self"]],["rawfd"]]]],"p":[[3,"Handle"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[16],R[4],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[4],[R[5]]],[R[5]]]]],[8,R[15],E,"Controls in which cases the associated code should be run",N,N],[10,R[12],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[4]]]],[11,R[6],E,"“Defuse” the guard and extract the value without calling…",1,[[],[T]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,R[12],E,E,2,[[],["bool"]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[8,R[15]],[3,R[16]],[4,"Always"]]};
searchIndex["serde"]={"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny",R[1358],"An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected",E,"`Unexpected` represents an unexpected invocation of any…",N,N],[13,"Bool",E,"The input contained a boolean value that was not expected.",0,N],[13,"Unsigned",E,"The input contained an unsigned integer `u8`, `u16`, `u32`…",0,N],[13,"Signed",E,"The input contained a signed integer `i8`, `i16`, `i32` or…",0,N],[13,"Float",E,"The input contained a floating point `f32` or `f64` that…",0,N],[13,"Char",E,"The input contained a `char` that was not expected.",0,N],[13,"Str",E,"The input contained a `&str` or `String` that was not…",0,N],[13,"Bytes",E,"The input contained a `&[u8]` or `Vec<u8>` that was not…",0,N],[13,"Unit",E,"The input contained a unit `()` that was not expected.",0,N],[13,"Option",E,"The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct",E,"The input contained a newtype struct that was not expected.",0,N],[13,"Seq",E,"The input contained a sequence that was not expected.",0,N],[13,"Map",E,"The input contained a map that was not expected.",0,N],[13,"Enum",E,"The input contained an enum that was not expected.",0,N],[13,"UnitVariant",E,"The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant",E,"The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant",E,"The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant",E,"The input contained a struct variant that was not expected.",0,N],[13,"Other",E,"A message stating what uncategorized thing the input…",0,N],[0,"value",E,"Building blocks for deserializing basic values using the…",N,N],[3,"Error",R[1357],"A minimal representation of all possible errors that can…",N,N],[3,R[1381],E,"A deserializer holding a `()`.",N,N],[3,R[1382],E,"A deserializer holding a `bool`.",N,N],[3,R[1383],E,"A deserializer holding an `i8`.",N,N],[3,R[1384],E,"A deserializer holding an `i16`.",N,N],[3,R[1385],E,"A deserializer holding an `i32`.",N,N],[3,R[1386],E,"A deserializer holding an `i64`.",N,N],[3,R[1387],E,"A deserializer holding an `isize`.",N,N],[3,R[1388],E,"A deserializer holding a `u8`.",N,N],[3,R[1389],E,"A deserializer holding a `u16`.",N,N],[3,R[1390],E,"A deserializer holding a `u64`.",N,N],[3,R[1391],E,"A deserializer holding a `usize`.",N,N],[3,R[1392],E,"A deserializer holding an `f32`.",N,N],[3,R[1393],E,"A deserializer holding an `f64`.",N,N],[3,R[1394],E,"A deserializer holding a `char`.",N,N],[3,R[1395],E,"A deserializer holding an `i128`.",N,N],[3,R[1396],E,"A deserializer holding a `u128`.",N,N],[3,R[1397],E,"A deserializer holding a `u32`.",N,N],[3,R[1398],E,"A deserializer holding a `&str`.",N,N],[3,R[1371],E,"A deserializer holding a `&str` with a lifetime tied to…",N,N],[3,R[1399],E,"A deserializer holding a `String`.",N,N],[3,R[1400],E,"A deserializer holding a `Cow<str>`.",N,N],[3,R[1372],E,"A deserializer holding a `&[u8]` with a lifetime tied to…",N,N],[3,R[1373],E,"A deserializer that iterates over a sequence.",N,N],[3,R[1374],E,"A deserializer holding a `SeqAccess`.",N,N],[3,R[1375],E,"A deserializer that iterates over a map.",N,N],[3,R[1376],E,"A deserializer holding a `MapAccess`.",N,N],[11,"new",E,"Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new",E,"Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new",E,"Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end",E,R[1192],3,[[],[R[2]]]],[11,"new",E,"Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new",E,"Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end",E,R[1192],5,[[],[R[2]]]],[11,"new",E,"Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error",R[1358],"The `Error` trait allows `Deserialize` implementations to…",N,N],[10,"custom",E,"Raised when there is general error when deserializing a…",7,[[[T]],["self"]]],[11,R[1706],E,"Raised when a `Deserialize` receives a type different from…",7,[[[R[1370]],["expected"]],["self"]]],[11,"invalid_value",E,"Raised when a `Deserialize` receives a value of the right…",7,[[[R[1370]],["expected"]],["self"]]],[11,"invalid_length",E,"Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant",E,"Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field",E,"Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field",E,"Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field",E,"Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected",E,"`Expected` represents an explanation of what data a…",N,N],[10,"fmt",E,"Format an explanation of what data was being expected.…",8,[[["self"],[R[13]]],[R[2]]]],[8,R[1217],E,R[1218],N,N],[10,R[1193],E,R[1219],9,[[["d"]],[R[2]]]],[8,"DeserializeOwned",E,"A data structure that can be deserialized without…",N,N],[8,R[1377],E,"`DeserializeSeed` is the stateful form of the…",N,N],[16,"Value",E,"The type produced by using this seed.",10,N],[10,R[1193],E,"Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],[R[2]]]],[8,R[1204],E,R[1220],N,N],[16,"Error",E,R[1197],11,N],[10,R[1221],E,R[1222],11,[[["v"]],[R[2]]]],[10,R[1223],E,R[1224],11,[[["v"]],[R[2]]]],[10,R[1225],E,R[1226],11,[[["v"]],[R[2]]]],[10,R[1227],E,R[1228],11,[[["v"]],[R[2]]]],[10,R[1229],E,R[1230],11,[[["v"]],[R[2]]]],[10,R[1231],E,R[1232],11,[[["v"]],[R[2]]]],[11,R[1233],E,R[1234],11,[[["v"]],[R[2]]]],[10,R[1235],E,R[1236],11,[[["v"]],[R[2]]]],[10,R[1237],E,R[1238],11,[[["v"]],[R[2]]]],[10,R[1239],E,R[1240],11,[[["v"]],[R[2]]]],[10,R[1241],E,R[1242],11,[[["v"]],[R[2]]]],[11,R[1243],E,R[1244],11,[[["v"]],[R[2]]]],[10,R[1245],E,R[1246],11,[[["v"]],[R[2]]]],[10,R[1247],E,R[1248],11,[[["v"]],[R[2]]]],[10,R[1249],E,R[1250],11,[[["v"]],[R[2]]]],[10,R[1251],E,R[1194],11,[[["v"]],[R[2]]]],[10,R[1252],E,R[1194],11,[[["v"]],[R[2]]]],[10,R[1253],E,R[1195],11,[[["v"]],[R[2]]]],[10,R[1254],E,R[1195],11,[[["v"]],[R[2]]]],[10,R[1255],E,R[1256],11,[[["v"]],[R[2]]]],[10,R[1257],E,R[1258],11,[[["v"]],[R[2]]]],[10,R[1259],E,R[1260],11,[[["v"],["str"]],[R[2]]]],[10,R[1261],E,R[1262],11,[[["v"],["str"]],[R[2]]]],[10,R[1263],E,R[1196],11,[[["v"]],[R[2]]]],[10,R[1264],E,R[1196],11,[[["usize"],["v"]],[R[2]]]],[10,R[1265],E,R[1266],11,[[["v"],["usize"],["str"]],[R[2]]]],[10,R[1267],E,R[1268],11,[[["v"]],[R[2]]]],[10,R[1269],E,R[1270],11,[[["v"],["str"]],[R[2]]]],[10,R[1271],E,R[1272],11,[[["v"],["str"]],[R[2]]]],[10,R[1273],E,R[1274],11,[[["v"]],[R[2]]]],[10,R[1275],E,R[1276],11,[[["v"]],[R[2]]]],[11,R[1205],E,R[1277],11,[[["self"]],["bool"]]],[8,"Visitor",E,"This trait represents a visitor that walks through a…",N,N],[16,"Value",E,"The value produced by this visitor.",12,N],[10,"expecting",E,"Format a message stating what data this Visitor expects to…",12,[[["self"],[R[13]]],[R[2]]]],[11,"visit_bool",E,"The input contains a boolean.",12,[[["bool"]],[R[2]]]],[11,"visit_i8",E,"The input contains an `i8`.",12,[[["i8"]],[R[2]]]],[11,"visit_i16",E,"The input contains an `i16`.",12,[[["i16"]],[R[2]]]],[11,"visit_i32",E,"The input contains an `i32`.",12,[[["i32"]],[R[2]]]],[11,"visit_i64",E,"The input contains an `i64`.",12,[[["i64"]],[R[2]]]],[11,"visit_i128",E,"The input contains a `i128`.",12,[[["i128"]],[R[2]]]],[11,"visit_u8",E,"The input contains a `u8`.",12,[[["u8"]],[R[2]]]],[11,"visit_u16",E,"The input contains a `u16`.",12,[[["u16"]],[R[2]]]],[11,"visit_u32",E,"The input contains a `u32`.",12,[[["u32"]],[R[2]]]],[11,"visit_u64",E,"The input contains a `u64`.",12,[[["u64"]],[R[2]]]],[11,"visit_u128",E,"The input contains a `u128`.",12,[[["u128"]],[R[2]]]],[11,"visit_f32",E,"The input contains an `f32`.",12,[[["f32"]],[R[2]]]],[11,"visit_f64",E,"The input contains an `f64`.",12,[[["f64"]],[R[2]]]],[11,"visit_char",E,"The input contains a `char`.",12,[[["char"]],[R[2]]]],[11,"visit_str",E,"The input contains a string. The lifetime of the string is…",12,[[["str"]],[R[2]]]],[11,"visit_borrowed_str",E,"The input contains a string that lives at least as long as…",12,[[["str"]],[R[2]]]],[11,"visit_string",E,"The input contains a string and ownership of the string is…",12,[[[R[63]]],[R[2]]]],[11,R[1360],E,"The input contains a byte array. The lifetime of the byte…",12,[[],[R[2]]]],[11,"visit_borrowed_bytes",E,"The input contains a byte array that lives at least as…",12,[[],[R[2]]]],[11,"visit_byte_buf",E,"The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],[R[2]]]],[11,"visit_none",E,"The input contains an optional that is absent.",12,[[],[R[2]]]],[11,"visit_some",E,"The input contains an optional that is present.",12,[[["d"]],[R[2]]]],[11,"visit_unit",E,"The input contains a unit `()`.",12,[[],[R[2]]]],[11,R[1359],E,"The input contains a newtype struct.",12,[[["d"]],[R[2]]]],[11,"visit_seq",E,"The input contains a sequence of elements.",12,[[["a"]],[R[2]]]],[11,"visit_map",E,"The input contains a key-value map.",12,[[["a"]],[R[2]]]],[11,"visit_enum",E,"The input contains an enum.",12,[[["a"]],[R[2]]]],[8,"SeqAccess",E,"Provides a `Visitor` access to each element of a sequence…",N,N],[16,"Error",E,R[1197],13,N],[10,R[1361],E,R[1198],13,[[["self"],[T]],[[R[32]],[R[2],[R[32]]]]]],[11,"next_element",E,R[1198],13,[[["self"]],[[R[32]],[R[2],[R[32]]]]]],[11,R[118],E,"Returns the number of elements remaining in the sequence,…",13,[[["self"]],[[R[32],["usize"]],["usize"]]]],[8,"MapAccess",E,"Provides a `Visitor` access to each entry of a map in the…",N,N],[16,"Error",E,R[1197],14,N],[10,R[1362],E,R[1199],14,[[["self"],["k"]],[[R[2],[R[32]]],[R[32]]]]],[10,R[1363],E,R[1200],14,[[["self"],["v"]],[R[2]]]],[11,R[1364],E,R[1201],14,[[["self"],["k"],["v"]],[[R[32]],[R[2],[R[32]]]]]],[11,"next_key",E,R[1199],14,[[["self"]],[[R[32]],[R[2],[R[32]]]]]],[11,"next_value",E,R[1200],14,[[["self"]],[R[2]]]],[11,"next_entry",E,R[1201],14,[[["self"]],[[R[2],[R[32]]],[R[32]]]]],[11,R[118],E,"Returns the number of entries remaining in the map, if…",14,[[["self"]],[[R[32],["usize"]],["usize"]]]],[8,"EnumAccess",E,"Provides a `Visitor` access to the data of an enum in the…",N,N],[16,"Error",E,R[1197],15,N],[16,"Variant",E,"The `Visitor` that will be used to deserialize the content…",15,N],[10,R[1365],E,R[1202],15,[[["v"]],[R[2]]]],[11,"variant",E,R[1202],15,[[],[R[2]]]],[8,R[1378],E,"`VariantAccess` is a visitor that is created by the…",N,N],[16,"Error",E,R[1197],16,N],[10,"unit_variant",E,"Called when deserializing a variant with no values.",16,[[],[R[2]]]],[10,"newtype_variant_seed",E,R[1203],16,[[[T]],[R[2]]]],[11,"newtype_variant",E,R[1203],16,[[],[R[2]]]],[10,"tuple_variant",E,"Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],[R[2]]]],[10,"struct_variant",E,"Called when deserializing a struct-like variant.",16,[[["v"]],[R[2]]]],[8,R[1379],E,"Converts an existing value into a `Deserializer` from…",N,N],[16,R[1204],E,"The type of the deserializer being converted into.",17,N],[10,"into_deserializer",E,"Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible",R[1366],"Helper type for implementing a `Serializer` that does not…",N,N],[8,"Error",E,"Trait used by `Serialize` implementations to generically…",N,N],[10,"custom",E,"Used when a [`Serialize`] implementation encounters any…",18,[[[T]],["self"]]],[8,R[1455],E,R[1278],N,N],[10,R[1655],E,R[1279],19,[[["self"],["s"]],[R[2]]]],[8,R[1380],E,R[1280],N,N],[16,"Ok",E,R[1281],20,N],[16,"Error",E,R[1282],20,N],[16,R[1206],E,R[1283],20,N],[16,R[1207],E,R[1284],20,N],[16,R[1211],E,R[1285],20,N],[16,R[1212],E,R[1286],20,N],[16,R[1214],E,R[1287],20,N],[16,R[1215],E,R[1288],20,N],[16,R[1216],E,R[1289],20,N],[10,R[1290],E,R[1291],20,[[["bool"]],[R[2]]]],[10,R[1292],E,R[1293],20,[[["i8"]],[R[2]]]],[10,R[1294],E,R[1295],20,[[["i16"]],[R[2]]]],[10,R[1296],E,R[1297],20,[[["i32"]],[R[2]]]],[10,R[1298],E,R[1299],20,[[["i64"]],[R[2]]]],[11,R[1300],E,R[1301],20,[[["i128"]],[R[2]]]],[10,R[1302],E,R[1303],20,[[["u8"]],[R[2]]]],[10,R[1304],E,R[1305],20,[[["u16"]],[R[2]]]],[10,R[1306],E,R[1307],20,[[["u32"]],[R[2]]]],[10,R[1308],E,R[1309],20,[[["u64"]],[R[2]]]],[11,R[1310],E,R[1311],20,[[["u128"]],[R[2]]]],[10,R[1312],E,R[1313],20,[[["f32"]],[R[2]]]],[10,R[1314],E,R[1315],20,[[["f64"]],[R[2]]]],[10,R[1316],E,R[1317],20,[[["char"]],[R[2]]]],[10,R[1318],E,R[1319],20,[[["str"]],[R[2]]]],[10,R[1320],E,R[1321],20,[[],[R[2]]]],[10,R[1322],E,R[1323],20,[[],[R[2]]]],[10,R[1324],E,R[1325],20,[[[T]],[R[2]]]],[10,R[1326],E,R[1327],20,[[],[R[2]]]],[10,R[1328],E,R[1329],20,[[["str"]],[R[2]]]],[10,R[1330],E,R[1331],20,[[["u32"],["str"]],[R[2]]]],[10,R[1332],E,R[1333],20,[[[T],["str"]],[R[2]]]],[10,R[1334],E,R[1335],20,[[[T],["u32"],["str"]],[R[2]]]],[10,R[1336],E,R[1337],20,[[[R[32],["usize"]],["usize"]],[R[2]]]],[10,R[1338],E,R[1339],20,[[["usize"]],[R[2]]]],[10,R[1340],E,R[1341],20,[[["usize"],["str"]],[R[2]]]],[10,R[1342],E,R[1343],20,[[["u32"],["usize"],["str"]],[R[2]]]],[10,R[1344],E,R[1345],20,[[[R[32],["usize"]],["usize"]],[R[2]]]],[10,R[1346],E,R[1347],20,[[["usize"],["str"]],[R[2]]]],[10,R[1348],E,R[1349],20,[[["u32"],["usize"],["str"]],[R[2]]]],[11,R[1350],E,R[1351],20,[[["i"]],[R[2]]]],[11,R[1352],E,R[1353],20,[[["i"]],[R[2]]]],[11,R[1354],E,R[1355],20,[[[T]],[R[2]]]],[11,R[1205],E,R[1356],20,[[["self"]],["bool"]]],[8,R[1206],E,"Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok",E,R[1208],21,N],[16,"Error",E,R[1209],21,N],[10,R[1210],E,"Serialize a sequence element.",21,[[["self"],[T]],[R[2]]]],[10,"end",E,"Finish serializing a sequence.",21,[[],[R[2]]]],[8,R[1207],E,"Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok",E,R[1208],22,N],[16,"Error",E,R[1209],22,N],[10,R[1210],E,"Serialize a tuple element.",22,[[["self"],[T]],[R[2]]]],[10,"end",E,"Finish serializing a tuple.",22,[[],[R[2]]]],[8,R[1211],E,"Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok",E,R[1208],23,N],[16,"Error",E,R[1209],23,N],[10,R[1213],E,"Serialize a tuple struct field.",23,[[["self"],[T]],[R[2]]]],[10,"end",E,"Finish serializing a tuple struct.",23,[[],[R[2]]]],[8,R[1212],E,"Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok",E,R[1208],24,N],[16,"Error",E,R[1209],24,N],[10,R[1213],E,"Serialize a tuple variant field.",24,[[["self"],[T]],[R[2]]]],[10,"end",E,"Finish serializing a tuple variant.",24,[[],[R[2]]]],[8,R[1214],E,"Returned from `Serializer::serialize_map`.",N,N],[16,"Ok",E,R[1208],25,N],[16,"Error",E,R[1209],25,N],[10,R[1367],E,"Serialize a map key.",25,[[["self"],[T]],[R[2]]]],[10,R[1368],E,"Serialize a map value.",25,[[["self"],[T]],[R[2]]]],[11,"serialize_entry",E,"Serialize a map entry consisting of a key and a value.",25,[[["self"],["k"],["v"]],[R[2]]]],[10,"end",E,"Finish serializing a map.",25,[[],[R[2]]]],[8,R[1215],E,"Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok",E,R[1208],26,N],[16,"Error",E,R[1209],26,N],[10,R[1213],E,"Serialize a struct field.",26,[[["self"],[T],["str"]],[R[2]]]],[11,"skip_field",E,"Indicate that a struct field has been skipped.",26,[[["self"],["str"]],[R[2]]]],[10,"end",E,"Finish serializing a struct.",26,[[],[R[2]]]],[8,R[1216],E,"Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok",E,R[1208],27,N],[16,"Error",E,R[1209],27,N],[10,R[1213],E,"Serialize a struct variant field.",27,[[["self"],[T],["str"]],[R[2]]]],[11,"skip_field",E,"Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],[R[2]]]],[10,"end",E,"Finish serializing a struct variant.",27,[[],[R[2]]]],[8,R[1217],"serde",R[1218],N,N],[10,R[1193],E,R[1219],9,[[["d"]],[R[2]]]],[8,R[1204],E,R[1220],N,N],[16,"Error",E,R[1197],11,N],[10,R[1221],E,R[1222],11,[[["v"]],[R[2]]]],[10,R[1223],E,R[1224],11,[[["v"]],[R[2]]]],[10,R[1225],E,R[1226],11,[[["v"]],[R[2]]]],[10,R[1227],E,R[1228],11,[[["v"]],[R[2]]]],[10,R[1229],E,R[1230],11,[[["v"]],[R[2]]]],[10,R[1231],E,R[1232],11,[[["v"]],[R[2]]]],[11,R[1233],E,R[1234],11,[[["v"]],[R[2]]]],[10,R[1235],E,R[1236],11,[[["v"]],[R[2]]]],[10,R[1237],E,R[1238],11,[[["v"]],[R[2]]]],[10,R[1239],E,R[1240],11,[[["v"]],[R[2]]]],[10,R[1241],E,R[1242],11,[[["v"]],[R[2]]]],[11,R[1243],E,R[1244],11,[[["v"]],[R[2]]]],[10,R[1245],E,R[1246],11,[[["v"]],[R[2]]]],[10,R[1247],E,R[1248],11,[[["v"]],[R[2]]]],[10,R[1249],E,R[1250],11,[[["v"]],[R[2]]]],[10,R[1251],E,R[1194],11,[[["v"]],[R[2]]]],[10,R[1252],E,R[1194],11,[[["v"]],[R[2]]]],[10,R[1253],E,R[1195],11,[[["v"]],[R[2]]]],[10,R[1254],E,R[1195],11,[[["v"]],[R[2]]]],[10,R[1255],E,R[1256],11,[[["v"]],[R[2]]]],[10,R[1257],E,R[1258],11,[[["v"]],[R[2]]]],[10,R[1259],E,R[1260],11,[[["v"],["str"]],[R[2]]]],[10,R[1261],E,R[1262],11,[[["v"],["str"]],[R[2]]]],[10,R[1263],E,R[1196],11,[[["v"]],[R[2]]]],[10,R[1264],E,R[1196],11,[[["usize"],["v"]],[R[2]]]],[10,R[1265],E,R[1266],11,[[["v"],["usize"],["str"]],[R[2]]]],[10,R[1267],E,R[1268],11,[[["v"]],[R[2]]]],[10,R[1269],E,R[1270],11,[[["v"],["str"]],[R[2]]]],[10,R[1271],E,R[1272],11,[[["v"],["str"]],[R[2]]]],[10,R[1273],E,R[1274],11,[[["v"]],[R[2]]]],[10,R[1275],E,R[1276],11,[[["v"]],[R[2]]]],[11,R[1205],E,R[1277],11,[[["self"]],["bool"]]],[8,R[1455],E,R[1278],N,N],[10,R[1655],E,R[1279],19,[[["self"],["s"]],[R[2]]]],[8,R[1380],E,R[1280],N,N],[16,"Ok",E,R[1281],20,N],[16,"Error",E,R[1282],20,N],[16,R[1206],E,R[1283],20,N],[16,R[1207],E,R[1284],20,N],[16,R[1211],E,R[1285],20,N],[16,R[1212],E,R[1286],20,N],[16,R[1214],E,R[1287],20,N],[16,R[1215],E,R[1288],20,N],[16,R[1216],E,R[1289],20,N],[10,R[1290],E,R[1291],20,[[["bool"]],[R[2]]]],[10,R[1292],E,R[1293],20,[[["i8"]],[R[2]]]],[10,R[1294],E,R[1295],20,[[["i16"]],[R[2]]]],[10,R[1296],E,R[1297],20,[[["i32"]],[R[2]]]],[10,R[1298],E,R[1299],20,[[["i64"]],[R[2]]]],[11,R[1300],E,R[1301],20,[[["i128"]],[R[2]]]],[10,R[1302],E,R[1303],20,[[["u8"]],[R[2]]]],[10,R[1304],E,R[1305],20,[[["u16"]],[R[2]]]],[10,R[1306],E,R[1307],20,[[["u32"]],[R[2]]]],[10,R[1308],E,R[1309],20,[[["u64"]],[R[2]]]],[11,R[1310],E,R[1311],20,[[["u128"]],[R[2]]]],[10,R[1312],E,R[1313],20,[[["f32"]],[R[2]]]],[10,R[1314],E,R[1315],20,[[["f64"]],[R[2]]]],[10,R[1316],E,R[1317],20,[[["char"]],[R[2]]]],[10,R[1318],E,R[1319],20,[[["str"]],[R[2]]]],[10,R[1320],E,R[1321],20,[[],[R[2]]]],[10,R[1322],E,R[1323],20,[[],[R[2]]]],[10,R[1324],E,R[1325],20,[[[T]],[R[2]]]],[10,R[1326],E,R[1327],20,[[],[R[2]]]],[10,R[1328],E,R[1329],20,[[["str"]],[R[2]]]],[10,R[1330],E,R[1331],20,[[["u32"],["str"]],[R[2]]]],[10,R[1332],E,R[1333],20,[[[T],["str"]],[R[2]]]],[10,R[1334],E,R[1335],20,[[[T],["u32"],["str"]],[R[2]]]],[10,R[1336],E,R[1337],20,[[[R[32],["usize"]],["usize"]],[R[2]]]],[10,R[1338],E,R[1339],20,[[["usize"]],[R[2]]]],[10,R[1340],E,R[1341],20,[[["usize"],["str"]],[R[2]]]],[10,R[1342],E,R[1343],20,[[["u32"],["usize"],["str"]],[R[2]]]],[10,R[1344],E,R[1345],20,[[[R[32],["usize"]],["usize"]],[R[2]]]],[10,R[1346],E,R[1347],20,[[["usize"],["str"]],[R[2]]]],[10,R[1348],E,R[1349],20,[[["u32"],["usize"],["str"]],[R[2]]]],[11,R[1350],E,R[1351],20,[[["i"]],[R[2]]]],[11,R[1352],E,R[1353],20,[[["i"]],[R[2]]]],[11,R[1354],E,R[1355],20,[[[T]],[R[2]]]],[11,R[1205],E,R[1356],20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any",E,"Helper macro when implementing the `Deserializer` part of…",N,N],[14,"serde_if_integer128",E,"Conditional compilation depending on whether Serde is…",N,N],[11,"fmt",R[1358],E,28,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",R[1357],E,29,[[],[U]]],[11,R[95],E,E,29,[[["self"]],[R[63]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[37],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"],[T]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[37],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"],[T]]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[37],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"],[T]]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[37],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"],[T]]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[37],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"],[T]]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[37],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"],[T]]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[37],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"],[T]]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[37],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"],[T]]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[37],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"],[T]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[37],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"],[T]]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[37],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"],[T]]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[37],E,E,44,[[["self"]],[T]]],[11,R[38],E,E,44,[[["self"],[T]]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[37],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"],[T]]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[37],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"],[T]]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[37],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"],[T]]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[37],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"],[T]]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[37],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"],[T]]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",R[1366],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[7],E,E,50,[[[U]],[R[2]]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,R[1193],R[1358],E,28,[[["d"]],[[R[2],[R[1369]]],[R[1369]]]]],[11,R[1223],R[1357],E,30,[[["v"]],[R[2]]]],[11,R[1225],E,E,30,[[["v"]],[R[2]]]],[11,R[1227],E,E,30,[[["v"]],[R[2]]]],[11,R[1229],E,E,30,[[["v"]],[R[2]]]],[11,R[1231],E,E,30,[[["v"]],[R[2]]]],[11,R[1233],E,E,30,[[["v"]],[R[2]]]],[11,R[1235],E,E,30,[[["v"]],[R[2]]]],[11,R[1237],E,E,30,[[["v"]],[R[2]]]],[11,R[1239],E,E,30,[[["v"]],[R[2]]]],[11,R[1241],E,E,30,[[["v"]],[R[2]]]],[11,R[1243],E,E,30,[[["v"]],[R[2]]]],[11,R[1245],E,E,30,[[["v"]],[R[2]]]],[11,R[1247],E,E,30,[[["v"]],[R[2]]]],[11,R[1249],E,E,30,[[["v"]],[R[2]]]],[11,R[1251],E,E,30,[[["v"]],[R[2]]]],[11,R[1252],E,E,30,[[["v"]],[R[2]]]],[11,R[1253],E,E,30,[[["v"]],[R[2]]]],[11,R[1254],E,E,30,[[["v"]],[R[2]]]],[11,R[1257],E,E,30,[[["v"]],[R[2]]]],[11,R[1259],E,E,30,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,30,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,30,[[["v"]],[R[2]]]],[11,R[1264],E,E,30,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,30,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,30,[[["v"]],[R[2]]]],[11,R[1269],E,E,30,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,30,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,30,[[["v"]],[R[2]]]],[11,R[1275],E,E,30,[[["v"]],[R[2]]]],[11,R[1221],E,E,30,[[["v"]],[R[2]]]],[11,R[1255],E,E,30,[[["v"]],[R[2]]]],[11,R[1223],E,E,31,[[["v"]],[R[2]]]],[11,R[1225],E,E,31,[[["v"]],[R[2]]]],[11,R[1227],E,E,31,[[["v"]],[R[2]]]],[11,R[1229],E,E,31,[[["v"]],[R[2]]]],[11,R[1231],E,E,31,[[["v"]],[R[2]]]],[11,R[1233],E,E,31,[[["v"]],[R[2]]]],[11,R[1235],E,E,31,[[["v"]],[R[2]]]],[11,R[1237],E,E,31,[[["v"]],[R[2]]]],[11,R[1239],E,E,31,[[["v"]],[R[2]]]],[11,R[1241],E,E,31,[[["v"]],[R[2]]]],[11,R[1243],E,E,31,[[["v"]],[R[2]]]],[11,R[1245],E,E,31,[[["v"]],[R[2]]]],[11,R[1247],E,E,31,[[["v"]],[R[2]]]],[11,R[1249],E,E,31,[[["v"]],[R[2]]]],[11,R[1251],E,E,31,[[["v"]],[R[2]]]],[11,R[1252],E,E,31,[[["v"]],[R[2]]]],[11,R[1253],E,E,31,[[["v"]],[R[2]]]],[11,R[1254],E,E,31,[[["v"]],[R[2]]]],[11,R[1255],E,E,31,[[["v"]],[R[2]]]],[11,R[1257],E,E,31,[[["v"]],[R[2]]]],[11,R[1259],E,E,31,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,31,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,31,[[["v"]],[R[2]]]],[11,R[1264],E,E,31,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,31,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,31,[[["v"]],[R[2]]]],[11,R[1269],E,E,31,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,31,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,31,[[["v"]],[R[2]]]],[11,R[1275],E,E,31,[[["v"]],[R[2]]]],[11,R[1221],E,E,31,[[["v"]],[R[2]]]],[11,R[1223],E,E,32,[[["v"]],[R[2]]]],[11,R[1225],E,E,32,[[["v"]],[R[2]]]],[11,R[1227],E,E,32,[[["v"]],[R[2]]]],[11,R[1229],E,E,32,[[["v"]],[R[2]]]],[11,R[1231],E,E,32,[[["v"]],[R[2]]]],[11,R[1233],E,E,32,[[["v"]],[R[2]]]],[11,R[1235],E,E,32,[[["v"]],[R[2]]]],[11,R[1237],E,E,32,[[["v"]],[R[2]]]],[11,R[1239],E,E,32,[[["v"]],[R[2]]]],[11,R[1241],E,E,32,[[["v"]],[R[2]]]],[11,R[1243],E,E,32,[[["v"]],[R[2]]]],[11,R[1245],E,E,32,[[["v"]],[R[2]]]],[11,R[1247],E,E,32,[[["v"]],[R[2]]]],[11,R[1249],E,E,32,[[["v"]],[R[2]]]],[11,R[1251],E,E,32,[[["v"]],[R[2]]]],[11,R[1252],E,E,32,[[["v"]],[R[2]]]],[11,R[1253],E,E,32,[[["v"]],[R[2]]]],[11,R[1254],E,E,32,[[["v"]],[R[2]]]],[11,R[1255],E,E,32,[[["v"]],[R[2]]]],[11,R[1257],E,E,32,[[["v"]],[R[2]]]],[11,R[1259],E,E,32,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,32,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,32,[[["v"]],[R[2]]]],[11,R[1264],E,E,32,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,32,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,32,[[["v"]],[R[2]]]],[11,R[1269],E,E,32,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,32,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,32,[[["v"]],[R[2]]]],[11,R[1275],E,E,32,[[["v"]],[R[2]]]],[11,R[1221],E,E,32,[[["v"]],[R[2]]]],[11,R[1223],E,E,33,[[["v"]],[R[2]]]],[11,R[1225],E,E,33,[[["v"]],[R[2]]]],[11,R[1227],E,E,33,[[["v"]],[R[2]]]],[11,R[1229],E,E,33,[[["v"]],[R[2]]]],[11,R[1231],E,E,33,[[["v"]],[R[2]]]],[11,R[1233],E,E,33,[[["v"]],[R[2]]]],[11,R[1235],E,E,33,[[["v"]],[R[2]]]],[11,R[1237],E,E,33,[[["v"]],[R[2]]]],[11,R[1239],E,E,33,[[["v"]],[R[2]]]],[11,R[1241],E,E,33,[[["v"]],[R[2]]]],[11,R[1243],E,E,33,[[["v"]],[R[2]]]],[11,R[1245],E,E,33,[[["v"]],[R[2]]]],[11,R[1247],E,E,33,[[["v"]],[R[2]]]],[11,R[1249],E,E,33,[[["v"]],[R[2]]]],[11,R[1251],E,E,33,[[["v"]],[R[2]]]],[11,R[1252],E,E,33,[[["v"]],[R[2]]]],[11,R[1253],E,E,33,[[["v"]],[R[2]]]],[11,R[1254],E,E,33,[[["v"]],[R[2]]]],[11,R[1255],E,E,33,[[["v"]],[R[2]]]],[11,R[1257],E,E,33,[[["v"]],[R[2]]]],[11,R[1259],E,E,33,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,33,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,33,[[["v"]],[R[2]]]],[11,R[1264],E,E,33,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,33,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,33,[[["v"]],[R[2]]]],[11,R[1269],E,E,33,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,33,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,33,[[["v"]],[R[2]]]],[11,R[1275],E,E,33,[[["v"]],[R[2]]]],[11,R[1221],E,E,33,[[["v"]],[R[2]]]],[11,R[1223],E,E,34,[[["v"]],[R[2]]]],[11,R[1225],E,E,34,[[["v"]],[R[2]]]],[11,R[1227],E,E,34,[[["v"]],[R[2]]]],[11,R[1229],E,E,34,[[["v"]],[R[2]]]],[11,R[1231],E,E,34,[[["v"]],[R[2]]]],[11,R[1233],E,E,34,[[["v"]],[R[2]]]],[11,R[1235],E,E,34,[[["v"]],[R[2]]]],[11,R[1237],E,E,34,[[["v"]],[R[2]]]],[11,R[1239],E,E,34,[[["v"]],[R[2]]]],[11,R[1241],E,E,34,[[["v"]],[R[2]]]],[11,R[1243],E,E,34,[[["v"]],[R[2]]]],[11,R[1245],E,E,34,[[["v"]],[R[2]]]],[11,R[1247],E,E,34,[[["v"]],[R[2]]]],[11,R[1249],E,E,34,[[["v"]],[R[2]]]],[11,R[1251],E,E,34,[[["v"]],[R[2]]]],[11,R[1252],E,E,34,[[["v"]],[R[2]]]],[11,R[1253],E,E,34,[[["v"]],[R[2]]]],[11,R[1254],E,E,34,[[["v"]],[R[2]]]],[11,R[1255],E,E,34,[[["v"]],[R[2]]]],[11,R[1257],E,E,34,[[["v"]],[R[2]]]],[11,R[1259],E,E,34,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,34,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,34,[[["v"]],[R[2]]]],[11,R[1264],E,E,34,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,34,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,34,[[["v"]],[R[2]]]],[11,R[1269],E,E,34,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,34,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,34,[[["v"]],[R[2]]]],[11,R[1275],E,E,34,[[["v"]],[R[2]]]],[11,R[1221],E,E,34,[[["v"]],[R[2]]]],[11,R[1223],E,E,35,[[["v"]],[R[2]]]],[11,R[1225],E,E,35,[[["v"]],[R[2]]]],[11,R[1227],E,E,35,[[["v"]],[R[2]]]],[11,R[1229],E,E,35,[[["v"]],[R[2]]]],[11,R[1231],E,E,35,[[["v"]],[R[2]]]],[11,R[1233],E,E,35,[[["v"]],[R[2]]]],[11,R[1235],E,E,35,[[["v"]],[R[2]]]],[11,R[1237],E,E,35,[[["v"]],[R[2]]]],[11,R[1239],E,E,35,[[["v"]],[R[2]]]],[11,R[1241],E,E,35,[[["v"]],[R[2]]]],[11,R[1243],E,E,35,[[["v"]],[R[2]]]],[11,R[1245],E,E,35,[[["v"]],[R[2]]]],[11,R[1247],E,E,35,[[["v"]],[R[2]]]],[11,R[1249],E,E,35,[[["v"]],[R[2]]]],[11,R[1251],E,E,35,[[["v"]],[R[2]]]],[11,R[1252],E,E,35,[[["v"]],[R[2]]]],[11,R[1253],E,E,35,[[["v"]],[R[2]]]],[11,R[1254],E,E,35,[[["v"]],[R[2]]]],[11,R[1255],E,E,35,[[["v"]],[R[2]]]],[11,R[1257],E,E,35,[[["v"]],[R[2]]]],[11,R[1259],E,E,35,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,35,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,35,[[["v"]],[R[2]]]],[11,R[1264],E,E,35,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,35,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,35,[[["v"]],[R[2]]]],[11,R[1269],E,E,35,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,35,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,35,[[["v"]],[R[2]]]],[11,R[1275],E,E,35,[[["v"]],[R[2]]]],[11,R[1221],E,E,35,[[["v"]],[R[2]]]],[11,R[1223],E,E,36,[[["v"]],[R[2]]]],[11,R[1225],E,E,36,[[["v"]],[R[2]]]],[11,R[1227],E,E,36,[[["v"]],[R[2]]]],[11,R[1229],E,E,36,[[["v"]],[R[2]]]],[11,R[1231],E,E,36,[[["v"]],[R[2]]]],[11,R[1233],E,E,36,[[["v"]],[R[2]]]],[11,R[1235],E,E,36,[[["v"]],[R[2]]]],[11,R[1237],E,E,36,[[["v"]],[R[2]]]],[11,R[1239],E,E,36,[[["v"]],[R[2]]]],[11,R[1241],E,E,36,[[["v"]],[R[2]]]],[11,R[1243],E,E,36,[[["v"]],[R[2]]]],[11,R[1245],E,E,36,[[["v"]],[R[2]]]],[11,R[1247],E,E,36,[[["v"]],[R[2]]]],[11,R[1249],E,E,36,[[["v"]],[R[2]]]],[11,R[1251],E,E,36,[[["v"]],[R[2]]]],[11,R[1252],E,E,36,[[["v"]],[R[2]]]],[11,R[1253],E,E,36,[[["v"]],[R[2]]]],[11,R[1254],E,E,36,[[["v"]],[R[2]]]],[11,R[1255],E,E,36,[[["v"]],[R[2]]]],[11,R[1257],E,E,36,[[["v"]],[R[2]]]],[11,R[1259],E,E,36,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,36,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,36,[[["v"]],[R[2]]]],[11,R[1264],E,E,36,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,36,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,36,[[["v"]],[R[2]]]],[11,R[1269],E,E,36,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,36,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,36,[[["v"]],[R[2]]]],[11,R[1275],E,E,36,[[["v"]],[R[2]]]],[11,R[1221],E,E,36,[[["v"]],[R[2]]]],[11,R[1223],E,E,37,[[["v"]],[R[2]]]],[11,R[1225],E,E,37,[[["v"]],[R[2]]]],[11,R[1227],E,E,37,[[["v"]],[R[2]]]],[11,R[1229],E,E,37,[[["v"]],[R[2]]]],[11,R[1231],E,E,37,[[["v"]],[R[2]]]],[11,R[1233],E,E,37,[[["v"]],[R[2]]]],[11,R[1235],E,E,37,[[["v"]],[R[2]]]],[11,R[1237],E,E,37,[[["v"]],[R[2]]]],[11,R[1239],E,E,37,[[["v"]],[R[2]]]],[11,R[1241],E,E,37,[[["v"]],[R[2]]]],[11,R[1243],E,E,37,[[["v"]],[R[2]]]],[11,R[1245],E,E,37,[[["v"]],[R[2]]]],[11,R[1247],E,E,37,[[["v"]],[R[2]]]],[11,R[1249],E,E,37,[[["v"]],[R[2]]]],[11,R[1251],E,E,37,[[["v"]],[R[2]]]],[11,R[1252],E,E,37,[[["v"]],[R[2]]]],[11,R[1253],E,E,37,[[["v"]],[R[2]]]],[11,R[1254],E,E,37,[[["v"]],[R[2]]]],[11,R[1255],E,E,37,[[["v"]],[R[2]]]],[11,R[1257],E,E,37,[[["v"]],[R[2]]]],[11,R[1259],E,E,37,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,37,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,37,[[["v"]],[R[2]]]],[11,R[1264],E,E,37,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,37,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,37,[[["v"]],[R[2]]]],[11,R[1269],E,E,37,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,37,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,37,[[["v"]],[R[2]]]],[11,R[1275],E,E,37,[[["v"]],[R[2]]]],[11,R[1221],E,E,37,[[["v"]],[R[2]]]],[11,R[1223],E,E,38,[[["v"]],[R[2]]]],[11,R[1225],E,E,38,[[["v"]],[R[2]]]],[11,R[1227],E,E,38,[[["v"]],[R[2]]]],[11,R[1229],E,E,38,[[["v"]],[R[2]]]],[11,R[1231],E,E,38,[[["v"]],[R[2]]]],[11,R[1233],E,E,38,[[["v"]],[R[2]]]],[11,R[1235],E,E,38,[[["v"]],[R[2]]]],[11,R[1237],E,E,38,[[["v"]],[R[2]]]],[11,R[1239],E,E,38,[[["v"]],[R[2]]]],[11,R[1241],E,E,38,[[["v"]],[R[2]]]],[11,R[1243],E,E,38,[[["v"]],[R[2]]]],[11,R[1245],E,E,38,[[["v"]],[R[2]]]],[11,R[1247],E,E,38,[[["v"]],[R[2]]]],[11,R[1249],E,E,38,[[["v"]],[R[2]]]],[11,R[1251],E,E,38,[[["v"]],[R[2]]]],[11,R[1252],E,E,38,[[["v"]],[R[2]]]],[11,R[1253],E,E,38,[[["v"]],[R[2]]]],[11,R[1254],E,E,38,[[["v"]],[R[2]]]],[11,R[1255],E,E,38,[[["v"]],[R[2]]]],[11,R[1257],E,E,38,[[["v"]],[R[2]]]],[11,R[1259],E,E,38,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,38,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,38,[[["v"]],[R[2]]]],[11,R[1264],E,E,38,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,38,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,38,[[["v"]],[R[2]]]],[11,R[1269],E,E,38,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,38,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,38,[[["v"]],[R[2]]]],[11,R[1275],E,E,38,[[["v"]],[R[2]]]],[11,R[1221],E,E,38,[[["v"]],[R[2]]]],[11,R[1223],E,E,39,[[["v"]],[R[2]]]],[11,R[1225],E,E,39,[[["v"]],[R[2]]]],[11,R[1227],E,E,39,[[["v"]],[R[2]]]],[11,R[1229],E,E,39,[[["v"]],[R[2]]]],[11,R[1231],E,E,39,[[["v"]],[R[2]]]],[11,R[1233],E,E,39,[[["v"]],[R[2]]]],[11,R[1235],E,E,39,[[["v"]],[R[2]]]],[11,R[1237],E,E,39,[[["v"]],[R[2]]]],[11,R[1239],E,E,39,[[["v"]],[R[2]]]],[11,R[1241],E,E,39,[[["v"]],[R[2]]]],[11,R[1243],E,E,39,[[["v"]],[R[2]]]],[11,R[1245],E,E,39,[[["v"]],[R[2]]]],[11,R[1247],E,E,39,[[["v"]],[R[2]]]],[11,R[1249],E,E,39,[[["v"]],[R[2]]]],[11,R[1251],E,E,39,[[["v"]],[R[2]]]],[11,R[1252],E,E,39,[[["v"]],[R[2]]]],[11,R[1253],E,E,39,[[["v"]],[R[2]]]],[11,R[1254],E,E,39,[[["v"]],[R[2]]]],[11,R[1255],E,E,39,[[["v"]],[R[2]]]],[11,R[1257],E,E,39,[[["v"]],[R[2]]]],[11,R[1259],E,E,39,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,39,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,39,[[["v"]],[R[2]]]],[11,R[1264],E,E,39,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,39,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,39,[[["v"]],[R[2]]]],[11,R[1269],E,E,39,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,39,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,39,[[["v"]],[R[2]]]],[11,R[1275],E,E,39,[[["v"]],[R[2]]]],[11,R[1221],E,E,39,[[["v"]],[R[2]]]],[11,R[1223],E,E,40,[[["v"]],[R[2]]]],[11,R[1225],E,E,40,[[["v"]],[R[2]]]],[11,R[1227],E,E,40,[[["v"]],[R[2]]]],[11,R[1229],E,E,40,[[["v"]],[R[2]]]],[11,R[1231],E,E,40,[[["v"]],[R[2]]]],[11,R[1233],E,E,40,[[["v"]],[R[2]]]],[11,R[1235],E,E,40,[[["v"]],[R[2]]]],[11,R[1237],E,E,40,[[["v"]],[R[2]]]],[11,R[1239],E,E,40,[[["v"]],[R[2]]]],[11,R[1241],E,E,40,[[["v"]],[R[2]]]],[11,R[1243],E,E,40,[[["v"]],[R[2]]]],[11,R[1245],E,E,40,[[["v"]],[R[2]]]],[11,R[1247],E,E,40,[[["v"]],[R[2]]]],[11,R[1249],E,E,40,[[["v"]],[R[2]]]],[11,R[1251],E,E,40,[[["v"]],[R[2]]]],[11,R[1252],E,E,40,[[["v"]],[R[2]]]],[11,R[1253],E,E,40,[[["v"]],[R[2]]]],[11,R[1254],E,E,40,[[["v"]],[R[2]]]],[11,R[1255],E,E,40,[[["v"]],[R[2]]]],[11,R[1257],E,E,40,[[["v"]],[R[2]]]],[11,R[1259],E,E,40,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,40,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,40,[[["v"]],[R[2]]]],[11,R[1264],E,E,40,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,40,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,40,[[["v"]],[R[2]]]],[11,R[1269],E,E,40,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,40,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,40,[[["v"]],[R[2]]]],[11,R[1275],E,E,40,[[["v"]],[R[2]]]],[11,R[1221],E,E,40,[[["v"]],[R[2]]]],[11,R[1223],E,E,41,[[["v"]],[R[2]]]],[11,R[1225],E,E,41,[[["v"]],[R[2]]]],[11,R[1227],E,E,41,[[["v"]],[R[2]]]],[11,R[1229],E,E,41,[[["v"]],[R[2]]]],[11,R[1231],E,E,41,[[["v"]],[R[2]]]],[11,R[1233],E,E,41,[[["v"]],[R[2]]]],[11,R[1235],E,E,41,[[["v"]],[R[2]]]],[11,R[1237],E,E,41,[[["v"]],[R[2]]]],[11,R[1239],E,E,41,[[["v"]],[R[2]]]],[11,R[1241],E,E,41,[[["v"]],[R[2]]]],[11,R[1243],E,E,41,[[["v"]],[R[2]]]],[11,R[1245],E,E,41,[[["v"]],[R[2]]]],[11,R[1247],E,E,41,[[["v"]],[R[2]]]],[11,R[1249],E,E,41,[[["v"]],[R[2]]]],[11,R[1251],E,E,41,[[["v"]],[R[2]]]],[11,R[1252],E,E,41,[[["v"]],[R[2]]]],[11,R[1253],E,E,41,[[["v"]],[R[2]]]],[11,R[1254],E,E,41,[[["v"]],[R[2]]]],[11,R[1255],E,E,41,[[["v"]],[R[2]]]],[11,R[1257],E,E,41,[[["v"]],[R[2]]]],[11,R[1259],E,E,41,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,41,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,41,[[["v"]],[R[2]]]],[11,R[1264],E,E,41,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,41,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,41,[[["v"]],[R[2]]]],[11,R[1269],E,E,41,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,41,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,41,[[["v"]],[R[2]]]],[11,R[1275],E,E,41,[[["v"]],[R[2]]]],[11,R[1221],E,E,41,[[["v"]],[R[2]]]],[11,R[1223],E,E,42,[[["v"]],[R[2]]]],[11,R[1225],E,E,42,[[["v"]],[R[2]]]],[11,R[1227],E,E,42,[[["v"]],[R[2]]]],[11,R[1229],E,E,42,[[["v"]],[R[2]]]],[11,R[1231],E,E,42,[[["v"]],[R[2]]]],[11,R[1233],E,E,42,[[["v"]],[R[2]]]],[11,R[1235],E,E,42,[[["v"]],[R[2]]]],[11,R[1237],E,E,42,[[["v"]],[R[2]]]],[11,R[1239],E,E,42,[[["v"]],[R[2]]]],[11,R[1241],E,E,42,[[["v"]],[R[2]]]],[11,R[1243],E,E,42,[[["v"]],[R[2]]]],[11,R[1245],E,E,42,[[["v"]],[R[2]]]],[11,R[1247],E,E,42,[[["v"]],[R[2]]]],[11,R[1249],E,E,42,[[["v"]],[R[2]]]],[11,R[1251],E,E,42,[[["v"]],[R[2]]]],[11,R[1252],E,E,42,[[["v"]],[R[2]]]],[11,R[1253],E,E,42,[[["v"]],[R[2]]]],[11,R[1254],E,E,42,[[["v"]],[R[2]]]],[11,R[1255],E,E,42,[[["v"]],[R[2]]]],[11,R[1257],E,E,42,[[["v"]],[R[2]]]],[11,R[1259],E,E,42,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,42,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,42,[[["v"]],[R[2]]]],[11,R[1264],E,E,42,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,42,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,42,[[["v"]],[R[2]]]],[11,R[1269],E,E,42,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,42,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,42,[[["v"]],[R[2]]]],[11,R[1275],E,E,42,[[["v"]],[R[2]]]],[11,R[1221],E,E,42,[[["v"]],[R[2]]]],[11,R[1223],E,E,43,[[["v"]],[R[2]]]],[11,R[1225],E,E,43,[[["v"]],[R[2]]]],[11,R[1227],E,E,43,[[["v"]],[R[2]]]],[11,R[1229],E,E,43,[[["v"]],[R[2]]]],[11,R[1231],E,E,43,[[["v"]],[R[2]]]],[11,R[1233],E,E,43,[[["v"]],[R[2]]]],[11,R[1235],E,E,43,[[["v"]],[R[2]]]],[11,R[1237],E,E,43,[[["v"]],[R[2]]]],[11,R[1239],E,E,43,[[["v"]],[R[2]]]],[11,R[1241],E,E,43,[[["v"]],[R[2]]]],[11,R[1243],E,E,43,[[["v"]],[R[2]]]],[11,R[1245],E,E,43,[[["v"]],[R[2]]]],[11,R[1247],E,E,43,[[["v"]],[R[2]]]],[11,R[1249],E,E,43,[[["v"]],[R[2]]]],[11,R[1251],E,E,43,[[["v"]],[R[2]]]],[11,R[1252],E,E,43,[[["v"]],[R[2]]]],[11,R[1253],E,E,43,[[["v"]],[R[2]]]],[11,R[1254],E,E,43,[[["v"]],[R[2]]]],[11,R[1255],E,E,43,[[["v"]],[R[2]]]],[11,R[1257],E,E,43,[[["v"]],[R[2]]]],[11,R[1259],E,E,43,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,43,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,43,[[["v"]],[R[2]]]],[11,R[1264],E,E,43,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,43,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,43,[[["v"]],[R[2]]]],[11,R[1269],E,E,43,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,43,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,43,[[["v"]],[R[2]]]],[11,R[1275],E,E,43,[[["v"]],[R[2]]]],[11,R[1221],E,E,43,[[["v"]],[R[2]]]],[11,R[1223],E,E,44,[[["v"]],[R[2]]]],[11,R[1225],E,E,44,[[["v"]],[R[2]]]],[11,R[1227],E,E,44,[[["v"]],[R[2]]]],[11,R[1229],E,E,44,[[["v"]],[R[2]]]],[11,R[1231],E,E,44,[[["v"]],[R[2]]]],[11,R[1233],E,E,44,[[["v"]],[R[2]]]],[11,R[1235],E,E,44,[[["v"]],[R[2]]]],[11,R[1237],E,E,44,[[["v"]],[R[2]]]],[11,R[1239],E,E,44,[[["v"]],[R[2]]]],[11,R[1241],E,E,44,[[["v"]],[R[2]]]],[11,R[1243],E,E,44,[[["v"]],[R[2]]]],[11,R[1245],E,E,44,[[["v"]],[R[2]]]],[11,R[1247],E,E,44,[[["v"]],[R[2]]]],[11,R[1249],E,E,44,[[["v"]],[R[2]]]],[11,R[1251],E,E,44,[[["v"]],[R[2]]]],[11,R[1252],E,E,44,[[["v"]],[R[2]]]],[11,R[1253],E,E,44,[[["v"]],[R[2]]]],[11,R[1254],E,E,44,[[["v"]],[R[2]]]],[11,R[1255],E,E,44,[[["v"]],[R[2]]]],[11,R[1257],E,E,44,[[["v"]],[R[2]]]],[11,R[1259],E,E,44,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,44,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,44,[[["v"]],[R[2]]]],[11,R[1264],E,E,44,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,44,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,44,[[["v"]],[R[2]]]],[11,R[1269],E,E,44,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,44,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,44,[[["v"]],[R[2]]]],[11,R[1275],E,E,44,[[["v"]],[R[2]]]],[11,R[1221],E,E,44,[[["v"]],[R[2]]]],[11,R[1223],E,E,45,[[["v"]],[R[2]]]],[11,R[1225],E,E,45,[[["v"]],[R[2]]]],[11,R[1227],E,E,45,[[["v"]],[R[2]]]],[11,R[1229],E,E,45,[[["v"]],[R[2]]]],[11,R[1231],E,E,45,[[["v"]],[R[2]]]],[11,R[1233],E,E,45,[[["v"]],[R[2]]]],[11,R[1235],E,E,45,[[["v"]],[R[2]]]],[11,R[1237],E,E,45,[[["v"]],[R[2]]]],[11,R[1239],E,E,45,[[["v"]],[R[2]]]],[11,R[1241],E,E,45,[[["v"]],[R[2]]]],[11,R[1243],E,E,45,[[["v"]],[R[2]]]],[11,R[1245],E,E,45,[[["v"]],[R[2]]]],[11,R[1247],E,E,45,[[["v"]],[R[2]]]],[11,R[1249],E,E,45,[[["v"]],[R[2]]]],[11,R[1251],E,E,45,[[["v"]],[R[2]]]],[11,R[1252],E,E,45,[[["v"]],[R[2]]]],[11,R[1253],E,E,45,[[["v"]],[R[2]]]],[11,R[1254],E,E,45,[[["v"]],[R[2]]]],[11,R[1255],E,E,45,[[["v"]],[R[2]]]],[11,R[1257],E,E,45,[[["v"]],[R[2]]]],[11,R[1259],E,E,45,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,45,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,45,[[["v"]],[R[2]]]],[11,R[1264],E,E,45,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,45,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,45,[[["v"]],[R[2]]]],[11,R[1269],E,E,45,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,45,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,45,[[["v"]],[R[2]]]],[11,R[1275],E,E,45,[[["v"]],[R[2]]]],[11,R[1221],E,E,45,[[["v"]],[R[2]]]],[11,R[1223],E,E,46,[[["v"]],[R[2]]]],[11,R[1225],E,E,46,[[["v"]],[R[2]]]],[11,R[1227],E,E,46,[[["v"]],[R[2]]]],[11,R[1229],E,E,46,[[["v"]],[R[2]]]],[11,R[1231],E,E,46,[[["v"]],[R[2]]]],[11,R[1233],E,E,46,[[["v"]],[R[2]]]],[11,R[1235],E,E,46,[[["v"]],[R[2]]]],[11,R[1237],E,E,46,[[["v"]],[R[2]]]],[11,R[1239],E,E,46,[[["v"]],[R[2]]]],[11,R[1241],E,E,46,[[["v"]],[R[2]]]],[11,R[1243],E,E,46,[[["v"]],[R[2]]]],[11,R[1245],E,E,46,[[["v"]],[R[2]]]],[11,R[1247],E,E,46,[[["v"]],[R[2]]]],[11,R[1249],E,E,46,[[["v"]],[R[2]]]],[11,R[1251],E,E,46,[[["v"]],[R[2]]]],[11,R[1252],E,E,46,[[["v"]],[R[2]]]],[11,R[1253],E,E,46,[[["v"]],[R[2]]]],[11,R[1254],E,E,46,[[["v"]],[R[2]]]],[11,R[1255],E,E,46,[[["v"]],[R[2]]]],[11,R[1257],E,E,46,[[["v"]],[R[2]]]],[11,R[1259],E,E,46,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,46,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,46,[[["v"]],[R[2]]]],[11,R[1264],E,E,46,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,46,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,46,[[["v"]],[R[2]]]],[11,R[1269],E,E,46,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,46,[[["v"]],[R[2]]]],[11,R[1275],E,E,46,[[["v"]],[R[2]]]],[11,R[1221],E,E,46,[[["v"]],[R[2]]]],[11,R[1271],E,E,46,[[["v"],["str"]],[R[2]]]],[11,R[1221],E,E,47,[[["v"]],[R[2]]]],[11,R[1271],E,E,47,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,47,[[["v"]],[R[2]]]],[11,R[1225],E,E,47,[[["v"]],[R[2]]]],[11,R[1227],E,E,47,[[["v"]],[R[2]]]],[11,R[1229],E,E,47,[[["v"]],[R[2]]]],[11,R[1231],E,E,47,[[["v"]],[R[2]]]],[11,R[1233],E,E,47,[[["v"]],[R[2]]]],[11,R[1235],E,E,47,[[["v"]],[R[2]]]],[11,R[1237],E,E,47,[[["v"]],[R[2]]]],[11,R[1239],E,E,47,[[["v"]],[R[2]]]],[11,R[1241],E,E,47,[[["v"]],[R[2]]]],[11,R[1243],E,E,47,[[["v"]],[R[2]]]],[11,R[1245],E,E,47,[[["v"]],[R[2]]]],[11,R[1247],E,E,47,[[["v"]],[R[2]]]],[11,R[1249],E,E,47,[[["v"]],[R[2]]]],[11,R[1251],E,E,47,[[["v"]],[R[2]]]],[11,R[1252],E,E,47,[[["v"]],[R[2]]]],[11,R[1253],E,E,47,[[["v"]],[R[2]]]],[11,R[1254],E,E,47,[[["v"]],[R[2]]]],[11,R[1255],E,E,47,[[["v"]],[R[2]]]],[11,R[1257],E,E,47,[[["v"]],[R[2]]]],[11,R[1259],E,E,47,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,47,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,47,[[["v"]],[R[2]]]],[11,R[1264],E,E,47,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,47,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,47,[[["v"]],[R[2]]]],[11,R[1269],E,E,47,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,47,[[["v"]],[R[2]]]],[11,R[1275],E,E,47,[[["v"]],[R[2]]]],[11,R[1221],E,E,1,[[["v"]],[R[2]]]],[11,R[1271],E,E,1,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,1,[[["v"]],[R[2]]]],[11,R[1225],E,E,1,[[["v"]],[R[2]]]],[11,R[1227],E,E,1,[[["v"]],[R[2]]]],[11,R[1229],E,E,1,[[["v"]],[R[2]]]],[11,R[1231],E,E,1,[[["v"]],[R[2]]]],[11,R[1233],E,E,1,[[["v"]],[R[2]]]],[11,R[1235],E,E,1,[[["v"]],[R[2]]]],[11,R[1237],E,E,1,[[["v"]],[R[2]]]],[11,R[1239],E,E,1,[[["v"]],[R[2]]]],[11,R[1241],E,E,1,[[["v"]],[R[2]]]],[11,R[1243],E,E,1,[[["v"]],[R[2]]]],[11,R[1245],E,E,1,[[["v"]],[R[2]]]],[11,R[1247],E,E,1,[[["v"]],[R[2]]]],[11,R[1249],E,E,1,[[["v"]],[R[2]]]],[11,R[1251],E,E,1,[[["v"]],[R[2]]]],[11,R[1252],E,E,1,[[["v"]],[R[2]]]],[11,R[1253],E,E,1,[[["v"]],[R[2]]]],[11,R[1254],E,E,1,[[["v"]],[R[2]]]],[11,R[1255],E,E,1,[[["v"]],[R[2]]]],[11,R[1257],E,E,1,[[["v"]],[R[2]]]],[11,R[1259],E,E,1,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,1,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,1,[[["v"]],[R[2]]]],[11,R[1264],E,E,1,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,1,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,1,[[["v"]],[R[2]]]],[11,R[1269],E,E,1,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,1,[[["v"]],[R[2]]]],[11,R[1275],E,E,1,[[["v"]],[R[2]]]],[11,R[1221],E,E,48,[[["v"]],[R[2]]]],[11,R[1271],E,E,48,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,48,[[["v"]],[R[2]]]],[11,R[1225],E,E,48,[[["v"]],[R[2]]]],[11,R[1227],E,E,48,[[["v"]],[R[2]]]],[11,R[1229],E,E,48,[[["v"]],[R[2]]]],[11,R[1231],E,E,48,[[["v"]],[R[2]]]],[11,R[1233],E,E,48,[[["v"]],[R[2]]]],[11,R[1235],E,E,48,[[["v"]],[R[2]]]],[11,R[1237],E,E,48,[[["v"]],[R[2]]]],[11,R[1239],E,E,48,[[["v"]],[R[2]]]],[11,R[1241],E,E,48,[[["v"]],[R[2]]]],[11,R[1243],E,E,48,[[["v"]],[R[2]]]],[11,R[1245],E,E,48,[[["v"]],[R[2]]]],[11,R[1247],E,E,48,[[["v"]],[R[2]]]],[11,R[1249],E,E,48,[[["v"]],[R[2]]]],[11,R[1251],E,E,48,[[["v"]],[R[2]]]],[11,R[1252],E,E,48,[[["v"]],[R[2]]]],[11,R[1253],E,E,48,[[["v"]],[R[2]]]],[11,R[1254],E,E,48,[[["v"]],[R[2]]]],[11,R[1255],E,E,48,[[["v"]],[R[2]]]],[11,R[1257],E,E,48,[[["v"]],[R[2]]]],[11,R[1259],E,E,48,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,48,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,48,[[["v"]],[R[2]]]],[11,R[1264],E,E,48,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,48,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,48,[[["v"]],[R[2]]]],[11,R[1269],E,E,48,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,48,[[["v"]],[R[2]]]],[11,R[1275],E,E,48,[[["v"]],[R[2]]]],[11,R[1221],E,E,49,[[["v"]],[R[2]]]],[11,R[1271],E,E,49,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,49,[[["v"]],[R[2]]]],[11,R[1225],E,E,49,[[["v"]],[R[2]]]],[11,R[1227],E,E,49,[[["v"]],[R[2]]]],[11,R[1229],E,E,49,[[["v"]],[R[2]]]],[11,R[1231],E,E,49,[[["v"]],[R[2]]]],[11,R[1233],E,E,49,[[["v"]],[R[2]]]],[11,R[1235],E,E,49,[[["v"]],[R[2]]]],[11,R[1237],E,E,49,[[["v"]],[R[2]]]],[11,R[1239],E,E,49,[[["v"]],[R[2]]]],[11,R[1241],E,E,49,[[["v"]],[R[2]]]],[11,R[1243],E,E,49,[[["v"]],[R[2]]]],[11,R[1245],E,E,49,[[["v"]],[R[2]]]],[11,R[1247],E,E,49,[[["v"]],[R[2]]]],[11,R[1249],E,E,49,[[["v"]],[R[2]]]],[11,R[1251],E,E,49,[[["v"]],[R[2]]]],[11,R[1252],E,E,49,[[["v"]],[R[2]]]],[11,R[1253],E,E,49,[[["v"]],[R[2]]]],[11,R[1254],E,E,49,[[["v"]],[R[2]]]],[11,R[1255],E,E,49,[[["v"]],[R[2]]]],[11,R[1257],E,E,49,[[["v"]],[R[2]]]],[11,R[1259],E,E,49,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,49,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,49,[[["v"]],[R[2]]]],[11,R[1264],E,E,49,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,49,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,49,[[["v"]],[R[2]]]],[11,R[1269],E,E,49,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,49,[[["v"]],[R[2]]]],[11,R[1275],E,E,49,[[["v"]],[R[2]]]],[11,R[1221],E,E,2,[[["v"]],[R[2]]]],[11,R[1223],E,E,2,[[["v"]],[R[2]]]],[11,R[1225],E,E,2,[[["v"]],[R[2]]]],[11,R[1227],E,E,2,[[["v"]],[R[2]]]],[11,R[1229],E,E,2,[[["v"]],[R[2]]]],[11,R[1231],E,E,2,[[["v"]],[R[2]]]],[11,R[1233],E,E,2,[[["v"]],[R[2]]]],[11,R[1235],E,E,2,[[["v"]],[R[2]]]],[11,R[1237],E,E,2,[[["v"]],[R[2]]]],[11,R[1239],E,E,2,[[["v"]],[R[2]]]],[11,R[1241],E,E,2,[[["v"]],[R[2]]]],[11,R[1243],E,E,2,[[["v"]],[R[2]]]],[11,R[1245],E,E,2,[[["v"]],[R[2]]]],[11,R[1247],E,E,2,[[["v"]],[R[2]]]],[11,R[1249],E,E,2,[[["v"]],[R[2]]]],[11,R[1251],E,E,2,[[["v"]],[R[2]]]],[11,R[1252],E,E,2,[[["v"]],[R[2]]]],[11,R[1253],E,E,2,[[["v"]],[R[2]]]],[11,R[1254],E,E,2,[[["v"]],[R[2]]]],[11,R[1255],E,E,2,[[["v"]],[R[2]]]],[11,R[1257],E,E,2,[[["v"]],[R[2]]]],[11,R[1259],E,E,2,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,2,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,2,[[["v"]],[R[2]]]],[11,R[1264],E,E,2,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,2,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,2,[[["v"]],[R[2]]]],[11,R[1269],E,E,2,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,2,[[["v"]],[R[2]]]],[11,R[1275],E,E,2,[[["v"]],[R[2]]]],[11,R[1271],E,E,2,[[["v"],["str"]],[R[2]]]],[11,R[1221],E,E,3,[[["v"]],[R[2]]]],[11,R[1223],E,E,3,[[["v"]],[R[2]]]],[11,R[1225],E,E,3,[[["v"]],[R[2]]]],[11,R[1227],E,E,3,[[["v"]],[R[2]]]],[11,R[1229],E,E,3,[[["v"]],[R[2]]]],[11,R[1231],E,E,3,[[["v"]],[R[2]]]],[11,R[1233],E,E,3,[[["v"]],[R[2]]]],[11,R[1235],E,E,3,[[["v"]],[R[2]]]],[11,R[1237],E,E,3,[[["v"]],[R[2]]]],[11,R[1239],E,E,3,[[["v"]],[R[2]]]],[11,R[1241],E,E,3,[[["v"]],[R[2]]]],[11,R[1243],E,E,3,[[["v"]],[R[2]]]],[11,R[1245],E,E,3,[[["v"]],[R[2]]]],[11,R[1247],E,E,3,[[["v"]],[R[2]]]],[11,R[1249],E,E,3,[[["v"]],[R[2]]]],[11,R[1251],E,E,3,[[["v"]],[R[2]]]],[11,R[1252],E,E,3,[[["v"]],[R[2]]]],[11,R[1253],E,E,3,[[["v"]],[R[2]]]],[11,R[1254],E,E,3,[[["v"]],[R[2]]]],[11,R[1255],E,E,3,[[["v"]],[R[2]]]],[11,R[1257],E,E,3,[[["v"]],[R[2]]]],[11,R[1259],E,E,3,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,3,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,3,[[["v"]],[R[2]]]],[11,R[1264],E,E,3,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,3,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,3,[[["v"]],[R[2]]]],[11,R[1269],E,E,3,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,3,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,3,[[["v"]],[R[2]]]],[11,R[1275],E,E,3,[[["v"]],[R[2]]]],[11,R[1221],E,E,4,[[["v"]],[R[2]]]],[11,R[1223],E,E,4,[[["v"]],[R[2]]]],[11,R[1225],E,E,4,[[["v"]],[R[2]]]],[11,R[1227],E,E,4,[[["v"]],[R[2]]]],[11,R[1229],E,E,4,[[["v"]],[R[2]]]],[11,R[1231],E,E,4,[[["v"]],[R[2]]]],[11,R[1233],E,E,4,[[["v"]],[R[2]]]],[11,R[1235],E,E,4,[[["v"]],[R[2]]]],[11,R[1237],E,E,4,[[["v"]],[R[2]]]],[11,R[1239],E,E,4,[[["v"]],[R[2]]]],[11,R[1241],E,E,4,[[["v"]],[R[2]]]],[11,R[1243],E,E,4,[[["v"]],[R[2]]]],[11,R[1245],E,E,4,[[["v"]],[R[2]]]],[11,R[1247],E,E,4,[[["v"]],[R[2]]]],[11,R[1249],E,E,4,[[["v"]],[R[2]]]],[11,R[1251],E,E,4,[[["v"]],[R[2]]]],[11,R[1252],E,E,4,[[["v"]],[R[2]]]],[11,R[1253],E,E,4,[[["v"]],[R[2]]]],[11,R[1254],E,E,4,[[["v"]],[R[2]]]],[11,R[1255],E,E,4,[[["v"]],[R[2]]]],[11,R[1257],E,E,4,[[["v"]],[R[2]]]],[11,R[1259],E,E,4,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,4,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,4,[[["v"]],[R[2]]]],[11,R[1264],E,E,4,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,4,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,4,[[["v"]],[R[2]]]],[11,R[1269],E,E,4,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,4,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,4,[[["v"]],[R[2]]]],[11,R[1275],E,E,4,[[["v"]],[R[2]]]],[11,R[1221],E,E,5,[[["v"]],[R[2]]]],[11,R[1263],E,E,5,[[["v"]],[R[2]]]],[11,R[1264],E,E,5,[[["usize"],["v"]],[R[2]]]],[11,R[1223],E,E,5,[[["v"]],[R[2]]]],[11,R[1225],E,E,5,[[["v"]],[R[2]]]],[11,R[1227],E,E,5,[[["v"]],[R[2]]]],[11,R[1229],E,E,5,[[["v"]],[R[2]]]],[11,R[1231],E,E,5,[[["v"]],[R[2]]]],[11,R[1233],E,E,5,[[["v"]],[R[2]]]],[11,R[1235],E,E,5,[[["v"]],[R[2]]]],[11,R[1237],E,E,5,[[["v"]],[R[2]]]],[11,R[1239],E,E,5,[[["v"]],[R[2]]]],[11,R[1241],E,E,5,[[["v"]],[R[2]]]],[11,R[1243],E,E,5,[[["v"]],[R[2]]]],[11,R[1245],E,E,5,[[["v"]],[R[2]]]],[11,R[1247],E,E,5,[[["v"]],[R[2]]]],[11,R[1249],E,E,5,[[["v"]],[R[2]]]],[11,R[1251],E,E,5,[[["v"]],[R[2]]]],[11,R[1252],E,E,5,[[["v"]],[R[2]]]],[11,R[1253],E,E,5,[[["v"]],[R[2]]]],[11,R[1254],E,E,5,[[["v"]],[R[2]]]],[11,R[1255],E,E,5,[[["v"]],[R[2]]]],[11,R[1257],E,E,5,[[["v"]],[R[2]]]],[11,R[1259],E,E,5,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,5,[[["v"],["str"]],[R[2]]]],[11,R[1265],E,E,5,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,5,[[["v"]],[R[2]]]],[11,R[1269],E,E,5,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,5,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,5,[[["v"]],[R[2]]]],[11,R[1275],E,E,5,[[["v"]],[R[2]]]],[11,R[1221],E,E,6,[[["v"]],[R[2]]]],[11,R[1271],E,E,6,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,6,[[["v"]],[R[2]]]],[11,R[1225],E,E,6,[[["v"]],[R[2]]]],[11,R[1227],E,E,6,[[["v"]],[R[2]]]],[11,R[1229],E,E,6,[[["v"]],[R[2]]]],[11,R[1231],E,E,6,[[["v"]],[R[2]]]],[11,R[1233],E,E,6,[[["v"]],[R[2]]]],[11,R[1235],E,E,6,[[["v"]],[R[2]]]],[11,R[1237],E,E,6,[[["v"]],[R[2]]]],[11,R[1239],E,E,6,[[["v"]],[R[2]]]],[11,R[1241],E,E,6,[[["v"]],[R[2]]]],[11,R[1243],E,E,6,[[["v"]],[R[2]]]],[11,R[1245],E,E,6,[[["v"]],[R[2]]]],[11,R[1247],E,E,6,[[["v"]],[R[2]]]],[11,R[1249],E,E,6,[[["v"]],[R[2]]]],[11,R[1251],E,E,6,[[["v"]],[R[2]]]],[11,R[1252],E,E,6,[[["v"]],[R[2]]]],[11,R[1253],E,E,6,[[["v"]],[R[2]]]],[11,R[1254],E,E,6,[[["v"]],[R[2]]]],[11,R[1255],E,E,6,[[["v"]],[R[2]]]],[11,R[1257],E,E,6,[[["v"]],[R[2]]]],[11,R[1259],E,E,6,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,6,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,6,[[["v"]],[R[2]]]],[11,R[1264],E,E,6,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,6,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,6,[[["v"]],[R[2]]]],[11,R[1269],E,E,6,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,6,[[["v"]],[R[2]]]],[11,R[1275],E,E,6,[[["v"]],[R[2]]]],[11,"expecting",R[1358],E,28,[[["self"],[R[13]]],[R[2]]]],[11,"visit_bool",E,E,28,[[["bool"]],[R[2]]]],[11,"visit_i64",E,E,28,[[["i64"]],[R[2]]]],[11,"visit_u64",E,E,28,[[["u64"]],[R[2]]]],[11,"visit_f64",E,E,28,[[["f64"]],[R[2]]]],[11,"visit_str",E,E,28,[[["str"]],[R[2]]]],[11,"visit_none",E,E,28,[[],[R[2]]]],[11,"visit_some",E,E,28,[[["d"]],[R[2]]]],[11,R[1359],E,E,28,[[["d"]],[R[2]]]],[11,"visit_unit",E,E,28,[[],[R[2]]]],[11,"visit_seq",E,E,28,[[["a"]],[R[2]]]],[11,"visit_map",E,E,28,[[["a"]],[R[2]]]],[11,R[1360],E,E,28,[[],[R[2]]]],[11,"visit_enum",E,E,28,[[["a"]],[R[2]]]],[11,R[1361],R[1357],E,3,[[["self"],["v"]],[[R[32]],[R[2],[R[32]]]]]],[11,R[118],E,E,3,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1361],E,E,5,[[["self"],[T]],[[R[32]],[R[2],[R[32]]]]]],[11,R[118],E,E,5,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1362],E,E,5,[[["self"],[T]],[[R[2],[R[32]]],[R[32]]]]],[11,R[1363],E,E,5,[[["self"],[T]],[R[2]]]],[11,R[1364],E,E,5,[[["self"],["tv"],["tk"]],[[R[2],[R[32]]],[R[32]]]]],[11,R[118],E,E,5,[[["self"]],[[R[32],["usize"]],["usize"]]]],[11,R[1365],E,E,46,[[[T]],[R[2]]]],[11,R[1365],E,E,47,[[[T]],[R[2]]]],[11,R[1365],E,E,1,[[[T]],[R[2]]]],[11,R[1365],E,E,48,[[[T]],[R[2]]]],[11,R[1365],E,E,49,[[[T]],[R[2]]]],[11,R[1365],E,E,6,[[[T]],[R[2]]]],[11,R[1210],R[1366],E,50,[[["self"],[T]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1210],E,E,50,[[["self"],[T]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1213],E,E,50,[[["self"],[T]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1213],E,E,50,[[["self"],[T]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1367],E,E,50,[[["self"],[T]],[R[2]]]],[11,R[1368],E,E,50,[[["self"],[T]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1213],E,E,50,[[["self"],[T],["str"]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,R[1213],E,E,50,[[["self"],[T],["str"]],[R[2]]]],[11,"end",E,E,50,[[],[R[2]]]],[11,"custom",R[1357],E,29,[[[T]],["self"]]],[11,"custom",E,E,29,[[[T]],["self"]]],[11,"clone",E,E,29,[[["self"]],["error"]]],[11,"clone",E,E,30,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],["self"]]],[11,"clone",E,E,32,[[["self"]],["self"]]],[11,"clone",E,E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",E,E,35,[[["self"]],["self"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,38,[[["self"]],["self"]]],[11,"clone",E,E,39,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",E,E,41,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,46,[[["self"]],["self"]]],[11,"clone",E,E,47,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,49,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["seqdeserializer"]]],[11,"clone",E,E,4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",E,E,6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone",R[1358],E,28,[[["self"]],[R[1369]]]],[11,"clone",E,E,0,[[["self"]],[R[1370]]]],[11,R[99],E,E,28,[[],[R[1369]]]],[11,"eq",R[1357],E,29,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,29,[[["self"],["error"]],["bool"]]],[11,"eq",R[1358],E,0,[[["self"],[R[1370]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[1370]]],["bool"]]],[11,"fmt",R[1357],E,29,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,32,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,35,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,39,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,43,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,45,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,48,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1358],E,28,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1357],E,29,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[1358],E,0,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[13]]],[R[2]]]],[11,R[409],R[1357],E,29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,R[1371]],[3,R[1372]],[3,R[1373]],[3,R[1374]],[3,R[1375]],[3,R[1376]],[8,"Error"],[8,"Expected"],[8,R[1217]],[8,R[1377]],[8,R[1204]],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,R[1378]],[8,R[1379]],[8,"Error"],[8,R[1455]],[8,R[1380]],[8,R[1206]],[8,R[1207]],[8,R[1211]],[8,R[1212]],[8,R[1214]],[8,R[1215]],[8,R[1216]],[3,"IgnoredAny"],[3,"Error"],[3,R[1381]],[3,R[1382]],[3,R[1383]],[3,R[1384]],[3,R[1385]],[3,R[1386]],[3,R[1387]],[3,R[1388]],[3,R[1389]],[3,R[1390]],[3,R[1391]],[3,R[1392]],[3,R[1393]],[3,R[1394]],[3,R[1395]],[3,R[1396]],[3,R[1397]],[3,R[1398]],[3,R[1399]],[3,R[1400]],[3,"Impossible"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","i":[[24,R[1455],"serde_derive",E,N,N],[24,R[1217],E,E,N,N]],"p":[]};
searchIndex["serde_json"]={"doc":"Serde JSON","i":[[3,R[1204],R[1666],R[1658],N,N],[3,R[1659],E,R[1660],N,N],[3,"Error",E,R[1665],N,N],[3,R[1380],E,R[1668],N,N],[3,"Map",E,R[1667],N,N],[3,"Number",E,R[1656],N,N],[4,"Value",E,R[1679],N,N],[13,"Null",E,R[1680],0,N],[13,"Bool",E,R[1681],0,N],[13,"Number",E,R[1656],0,N],[13,"String",E,R[1682],0,N],[13,"Array",E,R[1683],0,N],[13,"Object",E,R[1684],0,N],[5,R[1661],E,R[1662],N,[[["r"]],[R[2]]]],[5,R[1654],E,R[1663],N,[[],[R[2]]]],[5,R[712],E,R[1664],N,[[["str"]],[R[2]]]],[5,R[95],E,R[1674],N,[[[T]],[[R[2],[R[63]]],[R[63]]]]],[5,R[1675],E,R[1657],N,[[[T]],[[R[2],[R[63]]],[R[63]]]]],[5,"to_vec",E,R[1672],N,[[[T]],[[R[2],["vec"]],["vec",["u8"]]]]],[5,R[1673],E,R[1657],N,[[[T]],[[R[2],["vec"]],["vec",["u8"]]]]],[5,"to_writer",E,R[1669],N,[[["w"],[T]],[R[2]]]],[5,R[1670],E,R[1671],N,[[["w"],[T]],[R[2]]]],[5,"from_value",E,R[1686],N,[[["value"]],[[R[2],["error"]],["error"]]]],[5,"to_value",E,R[1685],N,[[[T]],[["value"],["error"],[R[2],["value","error"]]]]],[0,"de",E,"Deserialize JSON data to a Rust data structure.",N,N],[3,"IoRead",R[1687],"JSON input source that reads from a std::io input stream.",N,N],[3,"SliceRead",E,"JSON input source that reads from a slice of bytes.",N,N],[3,"StrRead",E,"JSON input source that reads from a UTF-8 string.",N,N],[3,R[1204],E,R[1658],N,N],[3,R[1659],E,R[1660],N,N],[5,R[1661],E,R[1662],N,[[["r"]],[R[2]]]],[5,R[1654],E,R[1663],N,[[],[R[2]]]],[5,R[712],E,R[1664],N,[[["str"]],[R[2]]]],[8,"Read",E,"Trait used by the deserializer for iterating over input.…",N,N],[11,"new",E,"Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,R[1661],E,"Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,R[1654],E,"Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,R[712],E,"Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end",E,"The `Deserializer::end` method should be called after a…",1,[[["self"]],[R[2]]]],[11,R[30],E,"Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new",E,"Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,R[1700],E,"Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error",R[1666],"When serializing or deserializing JSON goes wrong.",N,N],[3,"Error",R[1689],R[1665],N,N],[4,"Category",E,"Categorizes the cause of a `serde_json::Error`.",N,N],[13,"Io",E,"The error was caused by a failure to read or write bytes…",3,N],[13,"Syntax",E,"The error was caused by input that was not syntactically…",3,N],[13,"Data",E,"The error was caused by input data that was semantically…",3,N],[13,"Eof",E,"The error was caused by prematurely reaching the end of…",3,N],[6,"Result",E,R[1688],N,N],[11,"line",E,"One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column",E,"One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify",E,"Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io",E,"Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax",E,"Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data",E,"Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof",E,"Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map",R[1666],"A map of String to serde_json::Value.",N,N],[3,"Map",R[1691],R[1667],N,N],[3,R[1707],E,"A vacant Entry. It is part of the [`Entry`] enum.",N,N],[3,R[1708],E,"An occupied Entry. It is part of the [`Entry`] enum.",N,N],[3,"Iter",E,"An iterator over a serde_json::Map's entries.",N,N],[3,"IterMut",E,"A mutable iterator over a serde_json::Map's entries.",N,N],[3,R[165],E,"An owning iterator over a serde_json::Map's entries.",N,N],[3,"Keys",E,"An iterator over a serde_json::Map's keys.",N,N],[3,"Values",E,"An iterator over a serde_json::Map's values.",N,N],[3,"ValuesMut",E,"A mutable iterator over a serde_json::Map's values.",N,N],[4,"Entry",E,"A view into a single entry in a map, which may either be…",N,N],[13,"Vacant",E,"A vacant Entry.",5,N],[13,"Occupied",E,"An occupied Entry.",5,N],[11,"new",E,"Makes a new empty Map.",6,[[],["self"]]],[11,R[2247],E,"Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear",E,"Clears the map, removing all values.",6,[[["self"]]]],[11,"get",E,"Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[[R[32],["value"]],["value"]]]],[11,"contains_key",E,"Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[[R[32],["value"]],["value"]]]],[11,"insert",E,"Inserts a key-value pair into the map.",6,[[["self"],[R[63]],["value"]],[["value"],[R[32],["value"]]]]],[11,"remove",E,"Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["value"],[R[32],["value"]]]]],[11,"entry",E,"Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len",E,"Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,R[45],E,"Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter",E,"Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut",E,"Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys",E,"Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values",E,"Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut",E,"Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key",E,"Returns a reference to this entry's key.",5,[[["self"]],[R[63]]]],[11,"or_insert",E,"Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with",E,"Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key",E,"Gets a reference to the key that would be used when…",7,[[["self"]],[R[63]]]],[11,"insert",E,"Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key",E,"Gets a reference to the key in the entry.",8,[[["self"]],[R[63]]]],[11,"get",E,"Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut",E,"Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut",E,"Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert",E,"Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove",E,"Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser",R[1666],"Serialize a Rust data structure into JSON data.",N,N],[3,R[1380],R[1690],R[1668],N,N],[3,R[1710],E,"This structure compacts a JSON value with no extra…",N,N],[3,R[1709],E,"This structure pretty prints a JSON value to make it human…",N,N],[4,"CharEscape",E,"Represents a character escape code in a type-safe manner.",N,N],[13,"Quote",E,"An escaped quote `\"`",9,N],[13,"ReverseSolidus",E,"An escaped reverse solidus `\\`",9,N],[13,"Solidus",E,"An escaped solidus `/`",9,N],[13,"Backspace",E,"An escaped backspace character (usually escaped as `\\b`)",9,N],[13,"FormFeed",E,"An escaped form feed character (usually escaped as `\\f`)",9,N],[13,"LineFeed",E,"An escaped line feed character (usually escaped as `\\n`)",9,N],[13,"CarriageReturn",E,"An escaped carriage return character (usually escaped as…",9,N],[13,"Tab",E,"An escaped tab character (usually escaped as `\\t`)",9,N],[13,"AsciiControl",E,"An escaped ASCII plane control character (usually escaped…",9,N],[5,"to_writer",E,R[1669],N,[[["w"],[T]],[R[2]]]],[5,R[1670],E,R[1671],N,[[["w"],[T]],[R[2]]]],[5,"to_vec",E,R[1672],N,[[[T]],[[R[2],["vec"]],["vec",["u8"]]]]],[5,R[1673],E,R[1657],N,[[[T]],[[R[2],["vec"]],["vec",["u8"]]]]],[5,R[95],E,R[1674],N,[[[T]],[[R[2],[R[63]]],[R[63]]]]],[5,R[1675],E,R[1657],N,[[[T]],[[R[2],[R[63]]],[R[63]]]]],[8,"Formatter",E,"This trait abstracts away serializing the JSON control…",N,N],[11,"write_null",E,"Writes a `null` value to the specified writer.",10,[[["self"],["w"]],[R[2]]]],[11,"write_bool",E,"Writes a `true` or `false` value to the specified writer.",10,[[["self"],["w"],["bool"]],[R[2]]]],[11,"write_i8",E,R[1676],10,[[["self"],["w"],["i8"]],[R[2]]]],[11,"write_i16",E,R[1676],10,[[["self"],["w"],["i16"]],[R[2]]]],[11,"write_i32",E,R[1676],10,[[["self"],["w"],["i32"]],[R[2]]]],[11,"write_i64",E,R[1676],10,[[["self"],["w"],["i64"]],[R[2]]]],[11,"write_u8",E,R[1677],10,[[["self"],["w"],["u8"]],[R[2]]]],[11,R[137],E,R[1677],10,[[["self"],["w"],["u16"]],[R[2]]]],[11,R[138],E,R[1677],10,[[["self"],["w"],["u32"]],[R[2]]]],[11,R[139],E,R[1677],10,[[["self"],["w"],["u64"]],[R[2]]]],[11,"write_f32",E,R[1678],10,[[["self"],["w"],["f32"]],[R[2]]]],[11,"write_f64",E,R[1678],10,[[["self"],["w"],["f64"]],[R[2]]]],[11,"write_number_str",E,"Writes a number that has already been rendered to a string.",10,[[["self"],["w"],["str"]],[R[2]]]],[11,"begin_string",E,"Called before each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[2]]]],[11,"end_string",E,"Called after each series of `write_string_fragment` and…",10,[[["self"],["w"]],[R[2]]]],[11,"write_string_fragment",E,"Writes a string fragment that doesn't need any escaping to…",10,[[["self"],["w"],["str"]],[R[2]]]],[11,"write_char_escape",E,"Writes a character escape code to the specified writer.",10,[[["self"],["w"],["charescape"]],[R[2]]]],[11,R[1693],E,"Called before every array. Writes a `[` to the specified…",10,[[["self"],["w"]],[R[2]]]],[11,"end_array",E,"Called after every array. Writes a `]` to the specified…",10,[[["self"],["w"]],[R[2]]]],[11,R[1694],E,"Called before every array value. Writes a `,` if needed to…",10,[[["self"],["w"],["bool"]],[R[2]]]],[11,R[1695],E,"Called after every array value.",10,[[["self"],["w"]],[R[2]]]],[11,R[1696],E,"Called before every object. Writes a `{` to the specified…",10,[[["self"],["w"]],[R[2]]]],[11,"end_object",E,"Called after every object. Writes a `}` to the specified…",10,[[["self"],["w"]],[R[2]]]],[11,R[1697],E,"Called before every object key.",10,[[["self"],["w"],["bool"]],[R[2]]]],[11,"end_object_key",E,"Called after every object key. A `:` should be written to…",10,[[["self"],["w"]],[R[2]]]],[11,R[1698],E,"Called before every object value. A `:` should be written…",10,[[["self"],["w"]],[R[2]]]],[11,R[1699],E,"Called after every object value.",10,[[["self"],["w"]],[R[2]]]],[11,"write_raw_fragment",E,"Writes a raw JSON fragment that doesn't need any escaping…",10,[[["self"],["w"],["str"]],[R[2]]]],[11,"new",E,"Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty",E,"Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter",E,"Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,R[6],E,"Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new",E,"Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent",E,"Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value",R[1666],"The Value enum, a loosely typed way of representing any…",N,N],[3,"Number",R[1692],R[1656],N,N],[4,"Value",E,R[1679],N,N],[13,"Null",E,R[1680],0,N],[13,"Bool",E,R[1681],0,N],[13,"Number",E,R[1656],0,N],[13,"String",E,R[1682],0,N],[13,"Array",E,R[1683],0,N],[13,"Object",E,R[1684],0,N],[5,"to_value",E,R[1685],N,[[[T]],[["value"],["error"],[R[2],["value","error"]]]]],[5,"from_value",E,R[1686],N,[[["value"]],[[R[2],["error"]],["error"]]]],[8,"Index",E,"A type that can be used to index into a `serde_json::Value`.",N,N],[11,"get",E,"Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[[R[32],["value"]],["value"]]]],[11,"get_mut",E,"Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[[R[32],["value"]],["value"]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["map"],[R[32],["map"]]]]],[11,"as_object_mut",E,"If the `Value` is an Object, returns the associated…",0,[[["self"]],[["map"],[R[32],["map"]]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],[R[32],["vec"]]]]],[11,"as_array_mut",E,"If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[[R[32],["vec"]],["vec"]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",0,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[[R[32],["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[[R[32],["f64"]],["f64"]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[[R[32],["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],[R[32]]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",0,[[["self"],["str"]],[[R[32],["value"]],["value"]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",0,[[["self"],["str"]],[["value"],[R[32],["value"]]]]],[11,"take",E,"Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64",R[1666],"Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[[R[32],["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[[R[32],["u64"]],["u64"]]]],[11,"as_f64",E,"Represents the number as f64 if possible. Returns None…",13,[[["self"]],[[R[32],["f64"]],["f64"]]]],[11,R[1452],E,"Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[[R[32],["number"]],["number"]]]],[11,"new",R[1687],"Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new",E,"Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new",E,"Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[6,"Result",R[1666],R[1688],N,N],[14,"json",E,"Construct a `serde_json::Value` from a JSON literal.",N,N],[11,"into",R[1687],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,2,[[],[U]]],[11,R[30],E,E,2,[[],["i"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",R[1689],E,4,[[],[U]]],[11,R[95],E,E,4,[[["self"]],[R[63]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",R[1690],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"into",R[1691],E,6,[[],[U]]],[11,R[30],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"into",R[1666],E,13,[[],[U]]],[11,R[95],E,E,13,[[["self"]],[R[63]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[37],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"],[T]]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",R[1692],E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",R[1687],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"into",R[1689],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",R[1691],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"into",E,E,17,[[],[U]]],[11,R[30],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,18,[[],[U]]],[11,R[30],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,19,[[],[U]]],[11,R[30],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,20,[[],[U]]],[11,R[30],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"into",E,E,21,[[],[U]]],[11,R[30],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"into",E,E,22,[[],[U]]],[11,R[30],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"into",R[1690],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[37],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"],[T]]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,R[1693],E,E,12,[[["self"],["w"]],[R[2]]]],[11,"end_array",E,E,12,[[["self"],["w"]],[R[2]]]],[11,R[1694],E,E,12,[[["self"],["w"],["bool"]],[R[2]]]],[11,R[1695],E,E,12,[[["self"],["w"]],[R[2]]]],[11,R[1696],E,E,12,[[["self"],["w"]],[R[2]]]],[11,"end_object",E,E,12,[[["self"],["w"]],[R[2]]]],[11,R[1697],E,E,12,[[["self"],["w"],["bool"]],[R[2]]]],[11,R[1698],E,E,12,[[["self"],["w"]],[R[2]]]],[11,R[1699],E,E,12,[[["self"],["w"]],[R[2]]]],[11,"next",R[1687],E,14,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"peek",E,E,14,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"discard",E,E,14,[[["self"]]]],[11,R[212],E,E,14,[[["self"]],[R[212]]]],[11,R[1702],E,E,14,[[["self"]],[R[212]]]],[11,R[1700],E,E,14,[[["self"]],["usize"]]],[11,R[1711],E,E,14,[[["self"],["vec"]],[[R[2],[R[1701]]],[R[1701],["str"]]]]],[11,R[1703],E,E,14,[[["self"],["vec"]],[[R[2],[R[1701]]],[R[1701]]]]],[11,R[1705],E,E,14,[[["self"]],[R[2]]]],[11,R[1704],E,E,14,[[["self"]],[["u16"],[R[2],["u16"]]]]],[11,"next",E,E,15,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"peek",E,E,15,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"discard",E,E,15,[[["self"]]]],[11,R[212],E,E,15,[[["self"]],[R[212]]]],[11,R[1702],E,E,15,[[["self"]],[R[212]]]],[11,R[1700],E,E,15,[[["self"]],["usize"]]],[11,R[1711],E,E,15,[[["self"],["vec"]],[[R[2],[R[1701]]],[R[1701],["str"]]]]],[11,R[1703],E,E,15,[[["self"],["vec"]],[[R[1701]],[R[2],[R[1701]]]]]],[11,R[1705],E,E,15,[[["self"]],[R[2]]]],[11,R[1704],E,E,15,[[["self"]],[["u16"],[R[2],["u16"]]]]],[11,"next",E,E,16,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"peek",E,E,16,[[["self"]],[[R[32],["u8"]],[R[2],[R[32]]]]]],[11,"discard",E,E,16,[[["self"]]]],[11,R[212],E,E,16,[[["self"]],[R[212]]]],[11,R[1702],E,E,16,[[["self"]],[R[212]]]],[11,R[1700],E,E,16,[[["self"]],["usize"]]],[11,R[1711],E,E,16,[[["self"],["vec"]],[[R[2],[R[1701]]],[R[1701],["str"]]]]],[11,R[1703],E,E,16,[[["self"],["vec"]],[[R[1701]],[R[2],[R[1701]]]]]],[11,R[1705],E,E,16,[[["self"]],[R[2]]]],[11,R[1704],E,E,16,[[["self"]],[["u16"],[R[2],["u16"]]]]],[11,"extend",R[1691],E,6,[[["self"],[T]]]],[11,"clone",R[1689],E,3,[[["self"]],["category"]]],[11,"clone",R[1691],E,6,[[["self"]],["self"]]],[11,"clone",R[1690],E,23,[[["self"]],["compactformatter"]]],[11,"clone",E,E,12,[[["self"]],["prettyformatter"]]],[11,"clone",R[1692],E,0,[[["self"]],["value"]]],[11,"clone",R[1666],E,13,[[["self"]],["number"]]],[11,"len",R[1691],E,17,[[["self"]],["usize"]]],[11,"len",E,E,18,[[["self"]],["usize"]]],[11,"len",E,E,19,[[["self"]],["usize"]]],[11,"len",E,E,20,[[["self"]],["usize"]]],[11,"len",E,E,21,[[["self"]],["usize"]]],[11,"len",E,E,22,[[["self"]],["usize"]]],[11,R[30],E,E,6,[[]]],[11,R[99],E,E,6,[[],["self"]]],[11,R[99],R[1690],E,12,[[],["self"]]],[11,R[99],R[1692],E,0,[[],["value"]]],[11,"from",E,E,0,[[["i8"]],["self"]]],[11,"from",E,E,0,[[["i16"]],["self"]]],[11,"from",E,E,0,[[["i32"]],["self"]]],[11,"from",E,E,0,[[["i64"]],["self"]]],[11,"from",E,E,0,[[["isize"]],["self"]]],[11,"from",E,E,0,[[["u8"]],["self"]]],[11,"from",E,E,0,[[["u16"]],["self"]]],[11,"from",E,E,0,[[["u32"]],["self"]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"from",E,E,0,[[["usize"]],["self"]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from",E,"Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from",E,"Convert `String` to `Value`",0,[[[R[63]]],["self"]]],[11,"from",E,"Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from",E,"Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,"Convert map (with string keys) to `Value`",0,[[["map",[R[63],"value"]],[R[63]],["value"]],["self"]]],[11,"from",E,"Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from",E,"Convert a slice to `Value`",0,[[],["self"]]],[11,"from",R[1666],E,13,[[["u8"]],["self"]]],[11,"from",E,E,13,[[["u16"]],["self"]]],[11,"from",E,E,13,[[["u32"]],["self"]]],[11,"from",E,E,13,[[["u64"]],["self"]]],[11,"from",E,E,13,[[["usize"]],["self"]]],[11,"from",E,E,13,[[["i8"]],["self"]]],[11,"from",E,E,13,[[["i16"]],["self"]]],[11,"from",E,E,13,[[["i32"]],["self"]]],[11,"from",E,E,13,[[["i64"]],["self"]]],[11,"from",E,E,13,[[["isize"]],["self"]]],[11,R[119],R[1691],E,17,[[["self"]],[R[32]]]],[11,R[119],E,E,18,[[["self"]],[R[32]]]],[11,R[119],E,E,19,[[["self"]],[R[32]]]],[11,R[119],E,E,20,[[["self"]],[R[32]]]],[11,R[119],E,E,21,[[["self"]],[R[32]]]],[11,R[119],E,E,22,[[["self"]],[R[32]]]],[11,"eq",R[1689],E,3,[[["self"],["category"]],["bool"]]],[11,"eq",R[1691],E,6,[[["self"]],["bool"]]],[11,"eq",R[1692],E,0,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[63]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["i64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["isize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u16"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f32"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["f64"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["bool"]],["bool"]]],[11,"eq",R[1666],E,13,[[["self"],["number"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["number"]],["bool"]]],[11,"next",R[1687],E,2,[[["self"]],[[R[32],[R[2]]],[R[2]]]]],[11,"next",R[1691],E,17,[[["self"]],[R[32]]]],[11,R[118],E,E,17,[[["self"]]]],[11,"next",E,E,18,[[["self"]],[R[32]]]],[11,R[118],E,E,18,[[["self"]]]],[11,"next",E,E,19,[[["self"]],[R[32]]]],[11,R[118],E,E,19,[[["self"]]]],[11,"next",E,E,20,[[["self"]],[R[32]]]],[11,R[118],E,E,20,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[R[32]]]],[11,R[118],E,E,21,[[["self"]]]],[11,"next",E,E,22,[[["self"]],[R[32]]]],[11,R[118],E,E,22,[[["self"]]]],[11,"fmt",R[1689],E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1691],E,6,[[["self"],[R[13]]],[[R[2],["error"]],["error"]]]],[11,"fmt",R[1690],E,23,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1692],E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1666],E,13,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1689],E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1692],"Display a JSON value as a string.",0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1666],E,13,[[["self"],[R[13]]],[R[2]]]],[11,"index",R[1691],E,6,[[["self"],["q"]],["value"]]],[11,"index",R[1692],"Index into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[1511],R[1691],E,6,[[["self"],["q"]],["value"]]],[11,R[1511],R[1692],"Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,R[176],R[1691],E,6,[[[T]],["self"]]],[11,R[176],R[1692],"Convert an iteratable type to a `Value`",0,[[[R[120]]],["self"]]],[11,R[712],R[1666],E,13,[[["str"]],[R[2]]]],[11,R[712],R[1692],E,0,[[["str"]],[["value"],["error"],[R[2],["value","error"]]]]],[11,R[409],R[1689],E,4,[[["self"]],["str"]]],[11,"cause",E,E,4,[[["self"]],[["error"],[R[32],["error"]]]]],[11,R[1221],R[1692],E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1225],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1227],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1229],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1231],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1235],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1237],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1239],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1241],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1245],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1247],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1233],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1243],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1255],E,E,0,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1271],E,E,0,[[["v"],["str"]],[[R[2],["error"]],["error"]]]],[11,R[1261],E,E,0,[[["v"],["str"]],[R[2]]]],[11,R[1223],E,E,0,[[["v"]],[R[2]]]],[11,R[1249],E,E,0,[[["v"]],[R[2]]]],[11,R[1251],E,E,0,[[["v"]],[R[2]]]],[11,R[1252],E,E,0,[[["v"]],[R[2]]]],[11,R[1253],E,E,0,[[["v"]],[R[2]]]],[11,R[1254],E,E,0,[[["v"]],[R[2]]]],[11,R[1257],E,E,0,[[["v"]],[R[2]]]],[11,R[1259],E,E,0,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,0,[[["v"]],[R[2]]]],[11,R[1264],E,E,0,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,0,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,0,[[["v"]],[R[2]]]],[11,R[1269],E,E,0,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,0,[[["v"]],[R[2]]]],[11,R[1275],E,E,0,[[["v"]],[R[2]]]],[11,R[1221],R[1666],E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1225],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1227],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1229],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1231],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1235],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1237],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1239],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1241],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1245],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1247],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1233],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1243],E,E,13,[[["v"]],[[R[2],["error"]],["error"]]]],[11,R[1223],E,E,13,[[["v"]],[R[2]]]],[11,R[1249],E,E,13,[[["v"]],[R[2]]]],[11,R[1251],E,E,13,[[["v"]],[R[2]]]],[11,R[1252],E,E,13,[[["v"]],[R[2]]]],[11,R[1253],E,E,13,[[["v"]],[R[2]]]],[11,R[1254],E,E,13,[[["v"]],[R[2]]]],[11,R[1255],E,E,13,[[["v"]],[R[2]]]],[11,R[1257],E,E,13,[[["v"]],[R[2]]]],[11,R[1259],E,E,13,[[["v"],["str"]],[R[2]]]],[11,R[1261],E,E,13,[[["v"],["str"]],[R[2]]]],[11,R[1263],E,E,13,[[["v"]],[R[2]]]],[11,R[1264],E,E,13,[[["usize"],["v"]],[R[2]]]],[11,R[1265],E,E,13,[[["v"],["usize"],["str"]],[R[2]]]],[11,R[1267],E,E,13,[[["v"]],[R[2]]]],[11,R[1269],E,E,13,[[["v"],["str"]],[R[2]]]],[11,R[1271],E,E,13,[[["v"],["str"]],[R[2]]]],[11,R[1273],E,E,13,[[["v"]],[R[2]]]],[11,R[1275],E,E,13,[[["v"]],[R[2]]]],[11,R[1655],R[1691],E,6,[[["self"],["s"]],[R[2]]]],[11,R[1655],R[1692],E,0,[[["self"],["s"]],[R[2]]]],[11,R[1655],R[1666],E,13,[[["self"],["s"]],[R[2]]]],[11,"custom",R[1689],E,4,[[["display"]],["error"]]],[11,"custom",E,E,4,[[["display"]],["error"]]],[11,R[1706],E,E,4,[[[R[1370]],["expected"]],["self"]]],[11,R[1193],R[1691],E,6,[[["d"]],[R[2]]]],[11,R[1193],R[1692],E,0,[[["d"]],[[R[2],["value"]],["value"]]]],[11,R[1193],R[1666],E,13,[[["d"]],[["number"],[R[2],["number"]]]]]],"p":[[4,"Value"],[3,R[1204]],[3,R[1659]],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,R[1707]],[3,R[1708]],[4,"CharEscape"],[8,"Formatter"],[3,R[1380]],[3,R[1709]],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,R[165]],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,R[1710]]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn",R[829],N,N],[3,"Attribute",E,"An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token",E,E,0,N],[12,"style",E,E,0,N],[12,R[832],E,E,0,N],[12,"path",E,E,0,N],[12,"tts",E,E,0,N],[3,"MetaList",E,R[845],N,N],[12,"ident",E,E,1,N],[12,R[830],E,E,1,N],[12,"nested",E,E,1,N],[3,R[1117],E,R[846],N,N],[12,"ident",E,E,2,N],[12,R[834],E,E,2,N],[12,"lit",E,E,2,N],[3,"Field",E,"A field of a struct or enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the field.",3,N],[12,"vis",E,"Visibility of the field.",3,N],[12,"ident",E,"Name of the field, if any.",3,N],[12,R[833],E,E,3,N],[12,"ty",E,"Type of the field.",3,N],[3,R[1118],E,R[847],N,N],[12,R[837],E,E,4,N],[12,"named",E,E,4,N],[3,R[1119],E,R[848],N,N],[12,R[830],E,E,5,N],[12,"unnamed",E,E,5,N],[3,"Variant",E,"An enum variant.",N,N],[12,"attrs",E,"Attributes tagged on the variant.",6,N],[12,"ident",E,"Name of the variant.",6,N],[12,"fields",E,"Content stored in the variant.",6,N],[12,"discriminant",E,"Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate",E,R[850],N,N],[12,"crate_token",E,E,7,N],[3,"VisPublic",E,R[849],N,N],[12,R[831],E,E,8,N],[3,R[1120],E,R[851],N,N],[12,R[831],E,E,9,N],[12,R[830],E,E,9,N],[12,"in_token",E,E,9,N],[12,"path",E,E,9,N],[3,"ExprArray",E,R[854],N,N],[3,"ExprAssign",E,R[872],N,N],[3,R[1151],E,R[873],N,N],[3,"ExprAsync",E,R[888],N,N],[3,"ExprBinary",E,R[858],N,N],[12,"attrs",E,E,10,N],[12,"left",E,E,10,N],[12,"op",E,E,10,N],[12,"right",E,E,10,N],[3,"ExprBlock",E,R[871],N,N],[3,"ExprBox",E,R[852],N,N],[3,"ExprBreak",E,R[879],N,N],[3,"ExprCall",E,R[855],N,N],[12,"attrs",E,E,11,N],[12,"func",E,E,11,N],[12,R[830],E,E,11,N],[12,"args",E,E,11,N],[3,"ExprCast",E,R[861],N,N],[12,"attrs",E,E,12,N],[12,"expr",E,E,12,N],[12,"as_token",E,E,12,N],[12,"ty",E,E,12,N],[3,R[1152],E,R[869],N,N],[3,R[1153],E,R[880],N,N],[3,"ExprField",E,R[874],N,N],[12,"attrs",E,E,13,N],[12,"base",E,E,13,N],[12,"dot_token",E,E,13,N],[12,"member",E,E,13,N],[3,R[1154],E,R[866],N,N],[3,"ExprGroup",E,R[886],N,N],[3,"ExprIf",E,R[864],N,N],[3,R[1155],E,R[853],N,N],[3,"ExprIndex",E,R[875],N,N],[12,"attrs",E,E,14,N],[12,"expr",E,E,14,N],[12,R[832],E,E,14,N],[12,"index",E,E,14,N],[3,"ExprLet",E,R[863],N,N],[3,"ExprLit",E,R[860],N,N],[12,"attrs",E,E,15,N],[12,"lit",E,E,15,N],[3,"ExprLoop",E,R[867],N,N],[3,"ExprMacro",E,R[882],N,N],[3,"ExprMatch",E,R[868],N,N],[3,R[1156],E,R[856],N,N],[3,"ExprParen",E,R[885],N,N],[12,"attrs",E,E,16,N],[12,R[830],E,E,16,N],[12,"expr",E,E,16,N],[3,"ExprPath",E,R[877],N,N],[12,"attrs",E,E,17,N],[12,"qself",E,E,17,N],[12,"path",E,E,17,N],[3,"ExprRange",E,R[876],N,N],[3,R[1157],E,R[878],N,N],[3,"ExprRepeat",E,R[884],N,N],[3,"ExprReturn",E,R[881],N,N],[3,"ExprStruct",E,R[883],N,N],[3,"ExprTry",E,R[887],N,N],[3,R[1158],E,R[889],N,N],[3,"ExprTuple",E,R[857],N,N],[3,"ExprType",E,R[862],N,N],[3,"ExprUnary",E,R[859],N,N],[12,"attrs",E,E,18,N],[12,"op",E,E,18,N],[12,"expr",E,E,18,N],[3,"ExprUnsafe",E,R[870],N,N],[3,R[1121],E,R[891],N,N],[12,"tts",E,E,19,N],[3,"ExprWhile",E,R[865],N,N],[3,"ExprYield",E,R[890],N,N],[3,"Index",E,"The index of an unnamed tuple struct field.",N,N],[12,"index",E,E,20,N],[12,"span",E,E,20,N],[3,R[1122],E,"A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token",E,E,21,N],[12,R[843],E,E,21,N],[12,R[835],E,E,21,N],[12,R[844],E,E,21,N],[3,"ConstParam",E,R[894],N,N],[12,"attrs",E,E,22,N],[12,R[840],E,E,22,N],[12,"ident",E,E,22,N],[12,R[833],E,E,22,N],[12,"ty",E,E,22,N],[12,R[834],E,E,22,N],[12,R[99],E,E,22,N],[3,"Generics",E,"Lifetimes and type parameters attached to a declaration of…",N,N],[12,R[843],E,E,23,N],[12,"params",E,E,23,N],[12,R[844],E,E,23,N],[12,"where_clause",E,E,23,N],[3,R[1123],E,R[893],N,N],[12,"attrs",E,E,24,N],[12,R[841],E,E,24,N],[12,R[833],E,E,24,N],[12,"bounds",E,E,24,N],[3,R[1124],E,R[898],N,N],[12,"lhs_ty",E,E,25,N],[12,R[834],E,E,25,N],[12,"rhs_ty",E,E,25,N],[3,R[1125],E,R[897],N,N],[12,R[841],E,E,26,N],[12,R[833],E,E,26,N],[12,"bounds",E,E,26,N],[3,R[1126],E,R[896],N,N],[12,R[835],E,"Any lifetimes from a `for` binding",27,N],[12,"bounded_ty",E,"The type being bounded",27,N],[12,R[833],E,E,27,N],[12,"bounds",E,"Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound",E,"A trait used as a bound on a type parameter.",N,N],[12,R[830],E,E,28,N],[12,"modifier",E,E,28,N],[12,R[835],E,"The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path",E,"The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam",E,R[892],N,N],[12,"attrs",E,E,29,N],[12,"ident",E,E,29,N],[12,R[833],E,E,29,N],[12,"bounds",E,E,29,N],[12,R[834],E,E,29,N],[12,R[99],E,E,29,N],[3,R[1127],E,"A `where` clause in a definition: `where T:…",N,N],[12,"where_token",E,E,30,N],[12,"predicates",E,E,30,N],[3,R[1159],E,R[836],N,N],[3,"Turbofish",E,"Returned by `TypeGenerics::as_turbofish`.",N,N],[3,R[1147],E,R[836],N,N],[3,R[895],E,"A Rust lifetime: `'a`.",N,N],[12,"apostrophe",E,E,31,N],[12,"ident",E,E,31,N],[3,"LitBool",E,R[905],N,N],[12,"value",E,E,32,N],[12,"span",E,E,32,N],[3,"LitByte",E,R[901],N,N],[3,"LitByteStr",E,R[900],N,N],[3,"LitChar",E,R[902],N,N],[3,"LitFloat",E,R[904],N,N],[3,"LitInt",E,R[903],N,N],[3,"LitStr",E,R[899],N,N],[3,R[1128],E,R[906],N,N],[12,"token",E,E,33,N],[3,"Macro",E,"A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path",E,E,34,N],[12,R[839],E,E,34,N],[12,R[168],E,E,34,N],[12,"tts",E,E,34,N],[3,"DataEnum",E,R[908],N,N],[12,"enum_token",E,E,35,N],[12,R[837],E,E,35,N],[12,"variants",E,E,35,N],[3,"DataStruct",E,R[907],N,N],[12,"struct_token",E,E,36,N],[12,"fields",E,E,36,N],[12,R[838],E,E,36,N],[3,"DataUnion",E,R[909],N,N],[12,"union_token",E,E,37,N],[12,"fields",E,E,37,N],[3,R[1129],E,"Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs",E,"Attributes tagged on the whole struct or enum.",38,N],[12,"vis",E,"Visibility of the struct or enum.",38,N],[12,"ident",E,"Name of the struct or enum.",38,N],[12,"generics",E,"Generics required to complete the definition.",38,N],[12,"data",E,"Data within the struct or enum.",38,N],[3,"Abi",E,"The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token",E,E,39,N],[12,"name",E,E,39,N],[3,"BareFnArg",E,"An argument in a function type: the `usize` in `fn(usize)…",N,N],[12,"name",E,E,40,N],[12,"ty",E,E,40,N],[3,"TypeArray",E,R[911],N,N],[12,R[832],E,E,41,N],[12,"elem",E,E,41,N],[12,R[838],E,E,41,N],[12,"len",E,E,41,N],[3,"TypeBareFn",E,R[915],N,N],[12,R[835],E,E,42,N],[12,"unsafety",E,E,42,N],[12,"abi",E,E,42,N],[12,"fn_token",E,E,42,N],[12,R[830],E,E,42,N],[12,"inputs",E,E,42,N],[12,"variadic",E,E,42,N],[12,"output",E,E,42,N],[3,"TypeGroup",E,R[922],N,N],[12,"group_token",E,E,43,N],[12,"elem",E,E,43,N],[3,R[1130],E,R[920],N,N],[12,"impl_token",E,E,44,N],[12,"bounds",E,E,44,N],[3,"TypeInfer",E,R[923],N,N],[12,"underscore_token",E,E,45,N],[3,"TypeMacro",E,R[924],N,N],[12,"mac",E,E,46,N],[3,"TypeNever",E,R[916],N,N],[12,R[839],E,E,47,N],[3,"TypeParen",E,R[921],N,N],[12,R[830],E,E,48,N],[12,"elem",E,E,48,N],[3,"TypePath",E,R[918],N,N],[12,"qself",E,E,49,N],[12,"path",E,E,49,N],[3,"TypePtr",E,R[912],N,N],[12,"star_token",E,E,50,N],[12,R[840],E,E,50,N],[12,R[842],E,E,50,N],[12,"elem",E,E,50,N],[3,R[1131],E,R[914],N,N],[12,"and_token",E,E,51,N],[12,R[841],E,E,51,N],[12,R[842],E,E,51,N],[12,"elem",E,E,51,N],[3,"TypeSlice",E,R[910],N,N],[12,R[832],E,E,52,N],[12,"elem",E,E,52,N],[3,R[1132],E,R[919],N,N],[12,"dyn_token",E,E,53,N],[12,"bounds",E,E,53,N],[3,"TypeTuple",E,R[917],N,N],[12,R[830],E,E,54,N],[12,"elems",E,E,54,N],[3,R[1133],E,R[926],N,N],[12,"tts",E,E,55,N],[3,R[1134],E,"Angle bracketed arguments of a path segment: the `<K, V>`…",N,N],[12,"colon2_token",E,E,56,N],[12,R[843],E,E,56,N],[12,"args",E,E,56,N],[12,R[844],E,E,56,N],[3,"Binding",E,"A binding (equality constraint) on an associated type:…",N,N],[12,"ident",E,E,57,N],[12,R[834],E,E,57,N],[12,"ty",E,E,57,N],[3,R[927],E,R[928],N,N],[12,"ident",E,E,58,N],[12,R[833],E,E,58,N],[12,"bounds",E,E,58,N],[3,R[1135],E,"Arguments of a function path segment: the `(A, B) -> C` in…",N,N],[12,R[830],E,E,59,N],[12,"inputs",E,"`(A, B)`",59,N],[12,"output",E,"`C`",59,N],[3,"Path",E,"A path at which a named item is exported:…",N,N],[12,"leading_colon",E,E,60,N],[12,"segments",E,E,60,N],[3,R[1136],E,"A segment of a path together with any path arguments on…",N,N],[12,"ident",E,E,61,N],[12,"arguments",E,E,61,N],[3,"QSelf",E,"The explicit Self type in a qualified path: the `T` in `<T…",N,N],[12,R[843],E,E,62,N],[12,"ty",E,E,62,N],[12,R[212],E,E,62,N],[12,"as_token",E,E,62,N],[12,R[844],E,E,62,N],[3,"Error",E,R[1072],N,N],[4,"AttrStyle",E,"Distinguishes between attributes that decorate an item and…",N,N],[13,"Outer",E,E,63,N],[13,"Inner",E,E,63,N],[4,"Meta",E,"Content of a compile-time structured attribute.",N,N],[13,"Word",E,E,64,N],[13,"List",E,R[845],64,N],[13,"NameValue",E,R[846],64,N],[4,"NestedMeta",E,"Element of a compile-time attribute list.",N,N],[13,"Meta",E,"A structured meta item, like the `Copy` in…",65,N],[13,"Literal",E,"A Rust literal, like the `\"new_name\"` in…",65,N],[4,"Fields",E,"Data stored within an enum variant or struct.",N,N],[13,"Named",E,R[847],66,N],[13,"Unnamed",E,R[848],66,N],[13,"Unit",E,"Unit struct or unit variant such as `None`.",66,N],[4,"Visibility",E,"The visibility level of an item: inherited or `pub` or…",N,N],[13,"Public",E,R[849],67,N],[13,"Crate",E,R[850],67,N],[13,"Restricted",E,R[851],67,N],[13,"Inherited",E,"An inherited visibility, which usually means private.",67,N],[4,"Expr",E,"A Rust expression.",N,N],[13,"Box",E,R[852],68,N],[13,"InPlace",E,R[853],68,N],[13,"Array",E,R[854],68,N],[13,"Call",E,R[855],68,N],[13,"MethodCall",E,R[856],68,N],[13,"Tuple",E,R[857],68,N],[13,"Binary",E,R[858],68,N],[13,"Unary",E,R[859],68,N],[13,"Lit",E,R[860],68,N],[13,"Cast",E,R[861],68,N],[13,"Type",E,R[862],68,N],[13,"Let",E,R[863],68,N],[13,"If",E,R[864],68,N],[13,"While",E,R[865],68,N],[13,"ForLoop",E,R[866],68,N],[13,"Loop",E,R[867],68,N],[13,"Match",E,R[868],68,N],[13,"Closure",E,R[869],68,N],[13,"Unsafe",E,R[870],68,N],[13,"Block",E,R[871],68,N],[13,"Assign",E,R[872],68,N],[13,"AssignOp",E,R[873],68,N],[13,"Field",E,R[874],68,N],[13,"Index",E,R[875],68,N],[13,"Range",E,R[876],68,N],[13,"Path",E,R[877],68,N],[13,R[913],E,R[878],68,N],[13,"Break",E,R[879],68,N],[13,R[929],E,R[880],68,N],[13,"Return",E,R[881],68,N],[13,"Macro",E,R[882],68,N],[13,"Struct",E,R[883],68,N],[13,"Repeat",E,R[884],68,N],[13,"Paren",E,R[885],68,N],[13,"Group",E,R[886],68,N],[13,"Try",E,R[887],68,N],[13,"Async",E,R[888],68,N],[13,"TryBlock",E,R[889],68,N],[13,"Yield",E,R[890],68,N],[13,R[925],E,R[891],68,N],[4,"Member",E,"A struct or tuple struct field accessed in a struct…",N,N],[13,"Named",E,"A named field like `self.x`.",69,N],[13,"Unnamed",E,"An unnamed field like `self.0`.",69,N],[4,R[1137],E,"A generic type parameter, lifetime, or const generic: `T:…",N,N],[13,"Type",E,R[892],70,N],[13,R[895],E,R[893],70,N],[13,"Const",E,R[894],70,N],[4,R[1138],E,"A modifier on a trait bound, currently only used for the…",N,N],[13,"None",E,E,71,N],[13,"Maybe",E,E,71,N],[4,R[1139],E,"A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait",E,E,72,N],[13,R[895],E,E,72,N],[4,R[1140],E,"A single predicate in a `where` clause: `T:…",N,N],[13,"Type",E,R[896],73,N],[13,R[895],E,R[897],73,N],[13,"Eq",E,R[898],73,N],[4,R[1141],E,"The suffix on a floating point literal if any, like the…",N,N],[13,"F32",E,E,74,N],[13,"F64",E,E,74,N],[13,"None",E,E,74,N],[4,"IntSuffix",E,"The suffix on an integer literal if any, like the `u8` in…",N,N],[13,"I8",E,E,75,N],[13,"I16",E,E,75,N],[13,"I32",E,E,75,N],[13,"I64",E,E,75,N],[13,"I128",E,E,75,N],[13,"Isize",E,E,75,N],[13,"U8",E,E,75,N],[13,"U16",E,E,75,N],[13,"U32",E,E,75,N],[13,"U64",E,E,75,N],[13,"U128",E,E,75,N],[13,"Usize",E,E,75,N],[13,"None",E,E,75,N],[4,"Lit",E,"A Rust literal such as a string or integer or boolean.",N,N],[13,"Str",E,R[899],76,N],[13,"ByteStr",E,R[900],76,N],[13,"Byte",E,R[901],76,N],[13,"Char",E,R[902],76,N],[13,"Int",E,R[903],76,N],[13,"Float",E,R[904],76,N],[13,"Bool",E,R[905],76,N],[13,R[925],E,R[906],76,N],[4,"StrStyle",E,"The style of a string literal, either plain quoted or a…",N,N],[13,"Cooked",E,"An ordinary string like `\"data\"`.",77,N],[13,"Raw",E,"A raw string like `r##\"data\"##`.",77,N],[4,R[1142],E,"A grouping token that surrounds a macro body: `m!(...)` or…",N,N],[13,"Paren",E,E,78,N],[13,"Brace",E,E,78,N],[13,"Bracket",E,E,78,N],[4,"Data",E,"The storage of a struct, enum or union data structure.",N,N],[13,"Struct",E,R[907],79,N],[13,"Enum",E,R[908],79,N],[13,"Union",E,R[909],79,N],[4,"BinOp",E,"A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add",E,"The `+` operator (addition)",80,N],[13,"Sub",E,"The `-` operator (subtraction)",80,N],[13,"Mul",E,"The `*` operator (multiplication)",80,N],[13,"Div",E,"The `/` operator (division)",80,N],[13,"Rem",E,"The `%` operator (modulus)",80,N],[13,"And",E,"The `&&` operator (logical and)",80,N],[13,"Or",E,"The `||` operator (logical or)",80,N],[13,"BitXor",E,"The `^` operator (bitwise xor)",80,N],[13,"BitAnd",E,"The `&` operator (bitwise and)",80,N],[13,"BitOr",E,"The `|` operator (bitwise or)",80,N],[13,"Shl",E,"The `<<` operator (shift left)",80,N],[13,"Shr",E,"The `>>` operator (shift right)",80,N],[13,"Eq",E,"The `==` operator (equality)",80,N],[13,"Lt",E,"The `<` operator (less than)",80,N],[13,"Le",E,"The `<=` operator (less than or equal to)",80,N],[13,"Ne",E,"The `!=` operator (not equal to)",80,N],[13,"Ge",E,"The `>=` operator (greater than or equal to)",80,N],[13,"Gt",E,"The `>` operator (greater than)",80,N],[13,"AddEq",E,"The `+=` operator",80,N],[13,"SubEq",E,"The `-=` operator",80,N],[13,"MulEq",E,"The `*=` operator",80,N],[13,"DivEq",E,"The `/=` operator",80,N],[13,"RemEq",E,"The `%=` operator",80,N],[13,"BitXorEq",E,"The `^=` operator",80,N],[13,"BitAndEq",E,"The `&=` operator",80,N],[13,"BitOrEq",E,"The `|=` operator",80,N],[13,"ShlEq",E,"The `<<=` operator",80,N],[13,"ShrEq",E,"The `>>=` operator",80,N],[4,"UnOp",E,"A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref",E,"The `*` operator for dereferencing",81,N],[13,"Not",E,"The `!` operator for logical inversion",81,N],[13,"Neg",E,"The `-` operator for negation",81,N],[4,R[1143],E,"Name of an argument in a function type: the `n` in `fn(n:…",N,N],[13,"Named",E,"Argument given a name.",82,N],[13,"Wild",E,"Argument not given a name, matched with `_`.",82,N],[4,"ReturnType",E,"Return type of a function signature.",N,N],[13,"Default",E,"Return type is not specified.",83,N],[13,"Type",E,"A particular type is returned.",83,N],[4,"Type",E,"The possible types that a Rust value could have.",N,N],[13,"Slice",E,R[910],84,N],[13,"Array",E,R[911],84,N],[13,"Ptr",E,R[912],84,N],[13,R[913],E,R[914],84,N],[13,"BareFn",E,R[915],84,N],[13,"Never",E,R[916],84,N],[13,"Tuple",E,R[917],84,N],[13,"Path",E,R[918],84,N],[13,"TraitObject",E,R[919],84,N],[13,"ImplTrait",E,R[920],84,N],[13,"Paren",E,R[921],84,N],[13,"Group",E,R[922],84,N],[13,"Infer",E,R[923],84,N],[13,"Macro",E,R[924],84,N],[13,R[925],E,R[926],84,N],[4,R[1144],E,"An individual generic argument, like `'a`, `T`, or `Item =…",N,N],[13,R[895],E,"A lifetime argument.",85,N],[13,"Type",E,"A type argument.",85,N],[13,"Binding",E,"A binding (equality constraint) on an associated type: the…",85,N],[13,R[927],E,R[928],85,N],[13,"Const",E,"A const expression. Must be inside of a block.",85,N],[4,R[1145],E,"Angle bracketed or parenthesized arguments of a path…",N,N],[13,"None",E,E,86,N],[13,"AngleBracketed",E,"The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized",E,"The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse",E,R[1074],N,[[[R[167]]],[[R[2]],["parse"]]]],[5,"parse2",E,R[1073],N,[[[R[167]]],[[R[2]],["parse"]]]],[5,R[1711],E,R[1075],N,[[["str"]],[[R[2]],["parse"]]]],[0,"token",E,"Tokens representing Rust punctuation, keywords, and…",N,N],[3,"Underscore",R[1083],"`_`",N,N],[12,"spans",E,E,87,N],[3,"Abstract",E,"`abstract`",N,N],[12,"span",E,E,88,N],[3,"As",E,"`as`",N,N],[12,"span",E,E,89,N],[3,"Async",E,"`async`",N,N],[12,"span",E,E,90,N],[3,"Auto",E,"`auto`",N,N],[12,"span",E,E,91,N],[3,"Become",E,"`become`",N,N],[12,"span",E,E,92,N],[3,"Box",E,"`box`",N,N],[12,"span",E,E,93,N],[3,"Break",E,"`break`",N,N],[12,"span",E,E,94,N],[3,"Const",E,"`const`",N,N],[12,"span",E,E,95,N],[3,R[929],E,"`continue`",N,N],[12,"span",E,E,96,N],[3,"Crate",E,"`crate`",N,N],[12,"span",E,E,97,N],[3,"Default",E,"`default`",N,N],[12,"span",E,E,98,N],[3,"Do",E,"`do`",N,N],[12,"span",E,E,99,N],[3,"Dyn",E,"`dyn`",N,N],[12,"span",E,E,100,N],[3,"Else",E,"`else`",N,N],[12,"span",E,E,101,N],[3,"Enum",E,"`enum`",N,N],[12,"span",E,E,102,N],[3,R[1146],E,"`existential`",N,N],[12,"span",E,E,103,N],[3,"Extern",E,"`extern`",N,N],[12,"span",E,E,104,N],[3,"Final",E,"`final`",N,N],[12,"span",E,E,105,N],[3,"Fn",E,"`fn`",N,N],[12,"span",E,E,106,N],[3,"For",E,"`for`",N,N],[12,"span",E,E,107,N],[3,"If",E,"`if`",N,N],[12,"span",E,E,108,N],[3,"Impl",E,"`impl`",N,N],[12,"span",E,E,109,N],[3,"In",E,"`in`",N,N],[12,"span",E,E,110,N],[3,"Let",E,"`let`",N,N],[12,"span",E,E,111,N],[3,"Loop",E,"`loop`",N,N],[12,"span",E,E,112,N],[3,"Macro",E,"`macro`",N,N],[12,"span",E,E,113,N],[3,"Match",E,"`match`",N,N],[12,"span",E,E,114,N],[3,"Mod",E,"`mod`",N,N],[12,"span",E,E,115,N],[3,"Move",E,"`move`",N,N],[12,"span",E,E,116,N],[3,"Mut",E,"`mut`",N,N],[12,"span",E,E,117,N],[3,"Override",E,"`override`",N,N],[12,"span",E,E,118,N],[3,"Priv",E,"`priv`",N,N],[12,"span",E,E,119,N],[3,"Pub",E,"`pub`",N,N],[12,"span",E,E,120,N],[3,"Ref",E,"`ref`",N,N],[12,"span",E,E,121,N],[3,"Return",E,"`return`",N,N],[12,"span",E,E,122,N],[3,"SelfType",E,"`Self`",N,N],[12,"span",E,E,123,N],[3,"SelfValue",E,"`self`",N,N],[12,"span",E,E,124,N],[3,"Static",E,"`static`",N,N],[12,"span",E,E,125,N],[3,"Struct",E,"`struct`",N,N],[12,"span",E,E,126,N],[3,"Super",E,"`super`",N,N],[12,"span",E,E,127,N],[3,"Trait",E,"`trait`",N,N],[12,"span",E,E,128,N],[3,"Try",E,"`try`",N,N],[12,"span",E,E,129,N],[3,"Type",E,"`type`",N,N],[12,"span",E,E,130,N],[3,"Typeof",E,"`typeof`",N,N],[12,"span",E,E,131,N],[3,"Union",E,"`union`",N,N],[12,"span",E,E,132,N],[3,"Unsafe",E,"`unsafe`",N,N],[12,"span",E,E,133,N],[3,"Unsized",E,"`unsized`",N,N],[12,"span",E,E,134,N],[3,"Use",E,"`use`",N,N],[12,"span",E,E,135,N],[3,"Virtual",E,"`virtual`",N,N],[12,"span",E,E,136,N],[3,"Where",E,"`where`",N,N],[12,"span",E,E,137,N],[3,"While",E,"`while`",N,N],[12,"span",E,E,138,N],[3,"Yield",E,"`yield`",N,N],[12,"span",E,E,139,N],[3,"Add",E,"`+`",N,N],[12,"spans",E,E,140,N],[3,"AddEq",E,"`+=`",N,N],[12,"spans",E,E,141,N],[3,"And",E,"`&`",N,N],[12,"spans",E,E,142,N],[3,"AndAnd",E,"`&&`",N,N],[12,"spans",E,E,143,N],[3,"AndEq",E,"`&=`",N,N],[12,"spans",E,E,144,N],[3,"At",E,"`@`",N,N],[12,"spans",E,E,145,N],[3,"Bang",E,"`!`",N,N],[12,"spans",E,E,146,N],[3,"Caret",E,"`^`",N,N],[12,"spans",E,E,147,N],[3,"CaretEq",E,"`^=`",N,N],[12,"spans",E,E,148,N],[3,"Colon",E,"`:`",N,N],[12,"spans",E,E,149,N],[3,"Colon2",E,"`::`",N,N],[12,"spans",E,E,150,N],[3,"Comma",E,"`,`",N,N],[12,"spans",E,E,151,N],[3,"Div",E,"`/`",N,N],[12,"spans",E,E,152,N],[3,"DivEq",E,"`/=`",N,N],[12,"spans",E,E,153,N],[3,"Dollar",E,"`$`",N,N],[12,"spans",E,E,154,N],[3,"Dot",E,"`.`",N,N],[12,"spans",E,E,155,N],[3,"Dot2",E,"`..`",N,N],[12,"spans",E,E,156,N],[3,"Dot3",E,"`...`",N,N],[12,"spans",E,E,157,N],[3,"DotDotEq",E,"`..=`",N,N],[12,"spans",E,E,158,N],[3,"Eq",E,"`=`",N,N],[12,"spans",E,E,159,N],[3,"EqEq",E,"`==`",N,N],[12,"spans",E,E,160,N],[3,"Ge",E,"`>=`",N,N],[12,"spans",E,E,161,N],[3,"Gt",E,"`>`",N,N],[12,"spans",E,E,162,N],[3,"Le",E,"`<=`",N,N],[12,"spans",E,E,163,N],[3,"Lt",E,"`<`",N,N],[12,"spans",E,E,164,N],[3,"MulEq",E,"`*=`",N,N],[12,"spans",E,E,165,N],[3,"Ne",E,"`!=`",N,N],[12,"spans",E,E,166,N],[3,"Or",E,"`|`",N,N],[12,"spans",E,E,167,N],[3,"OrEq",E,"`|=`",N,N],[12,"spans",E,E,168,N],[3,"OrOr",E,"`||`",N,N],[12,"spans",E,E,169,N],[3,"Pound",E,"`#`",N,N],[12,"spans",E,E,170,N],[3,"Question",E,"`?`",N,N],[12,"spans",E,E,171,N],[3,"RArrow",E,"`->`",N,N],[12,"spans",E,E,172,N],[3,"LArrow",E,"`<-`",N,N],[12,"spans",E,E,173,N],[3,"Rem",E,"`%`",N,N],[12,"spans",E,E,174,N],[3,"RemEq",E,"`%=`",N,N],[12,"spans",E,E,175,N],[3,"FatArrow",E,"`=>`",N,N],[12,"spans",E,E,176,N],[3,"Semi",E,"`;`",N,N],[12,"spans",E,E,177,N],[3,"Shl",E,"`<<`",N,N],[12,"spans",E,E,178,N],[3,"ShlEq",E,"`<<=`",N,N],[12,"spans",E,E,179,N],[3,"Shr",E,"`>>`",N,N],[12,"spans",E,E,180,N],[3,"ShrEq",E,"`>>=`",N,N],[12,"spans",E,E,181,N],[3,"Star",E,"`*`",N,N],[12,"spans",E,E,182,N],[3,"Sub",E,"`-`",N,N],[12,"spans",E,E,183,N],[3,"SubEq",E,"`-=`",N,N],[12,"spans",E,E,184,N],[3,"Tilde",E,"`~`",N,N],[12,"spans",E,E,185,N],[3,"Brace",E,"`{...}`",N,N],[12,"span",E,E,186,N],[3,"Bracket",E,"`[...]`",N,N],[12,"span",E,E,187,N],[3,"Paren",E,"`(...)`",N,N],[12,"span",E,E,188,N],[3,"Group",E,"None-delimited group",N,N],[12,"span",E,E,189,N],[8,"Token",E,"Marker trait for types that represent single tokens.",N,N],[11,R[930],E,E,186,[[["self"],[R[167]],["f"]]]],[11,R[930],E,E,187,[[["self"],[R[167]],["f"]]]],[11,R[930],E,E,188,[[["self"],[R[167]],["f"]]]],[11,R[930],E,E,189,[[["self"],[R[167]],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],[R[2],["meta"]]]]],[11,"parse_outer",E,"Parses zero or more outer attributes from the stream.",0,[[[R[931]]],[[R[2],["vec"]],["vec"]]]],[11,"parse_inner",E,"Parses zero or more inner attributes from the stream.",0,[[[R[931]]],[[R[2],["vec"]],["vec"]]]],[11,"name",E,"Returns the identifier that begins this structured meta…",64,[[["self"]],["ident"]]],[11,"parse_named",E,"Parses a named (braced struct) field.",3,[[[R[931]]],[R[2]]]],[11,"parse_unnamed",E,"Parses an unnamed (tuple struct) field.",3,[[[R[931]]],[R[2]]]],[11,"iter",E,"Get an iterator over the borrowed [`Field`] items in this…",66,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut",E,"Get an iterator over the mutably borrowed [`Field`] items…",66,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"type_params",E,"Returns an Iterator<Item = &TypeParam> over the type…",23,[[["self"]],["typeparams"]]],[11,"type_params_mut",E,"Returns an Iterator<Item = &mut TypeParam> over the type…",23,[[["self"]],["typeparamsmut"]]],[11,R[835],E,"Returns an Iterator<Item = &LifetimeDef> over the lifetime…",23,[[["self"]],[R[835]]]],[11,"lifetimes_mut",E,"Returns an Iterator<Item = &mut LifetimeDef> over the…",23,[[["self"]],["lifetimesmut"]]],[11,"const_params",E,"Returns an Iterator<Item = &ConstParam> over the constant…",23,[[["self"]],["constparams"]]],[11,"const_params_mut",E,"Returns an Iterator<Item = &mut ConstParam> over the…",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause",E,"Initializes an empty `where`-clause if there is not one…",23,[[["self"]],[R[944]]]],[11,"split_for_impl",E,"Split a type's generics into the pieces required for…",23,[[["self"]]]],[11,"as_turbofish",E,"Turn a type's generics like `<X, Y>` into a turbofish like…",190,[[["self"]],["turbofish"]]],[11,"new",E,E,24,[[[R[841]]],["self"]]],[11,"new",E,"Panics",31,[[["str"],["span"]],["self"]]],[11,"new",E,"Interpret a Syn literal from a proc-macro2 literal.",76,[[[R[171]]],["self"]]],[11,"new",E,E,191,[[["str"],["span"]],["self"]]],[11,"value",E,E,191,[[["self"]],[R[63]]]],[11,"parse",E,"Parse a syntax tree node from the content of this string…",191,[[["self"]],[["parse"],[R[2]]]]],[11,"parse_with",E,"Invoke parser on the content of this string literal.",191,[[["self"],["parser"]],[R[2]]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,R[169],E,E,191,[[["self"],["span"]]]],[11,"new",E,E,192,[[["span"]],["self"]]],[11,"value",E,E,192,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,R[169],E,E,192,[[["self"],["span"]]]],[11,"new",E,E,193,[[["span"],["u8"]],["self"]]],[11,"value",E,E,193,[[["self"]],["u8"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,R[169],E,E,193,[[["self"],["span"]]]],[11,"new",E,E,194,[[["char"],["span"]],["self"]]],[11,"value",E,E,194,[[["self"]],["char"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,R[169],E,E,194,[[["self"],["span"]]]],[11,"new",E,E,195,[[["span"],["u64"],[R[932]]],["self"]]],[11,"value",E,E,195,[[["self"]],["u64"]]],[11,"suffix",E,E,195,[[["self"]],[R[932]]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,R[169],E,E,195,[[["self"],["span"]]]],[11,"new",E,E,196,[[[R[933]],["f64"],["span"]],["self"]]],[11,"value",E,E,196,[[["self"]],["f64"]]],[11,"suffix",E,E,196,[[["self"]],[R[933]]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,R[169],E,E,196,[[["self"],["span"]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,R[169],E,E,33,[[["self"],["span"]]]],[11,"parse_body",E,R[934],34,[[["self"]],[["parse"],[R[2]]]]],[11,"parse_body_with",E,R[934],34,[[["self"],["parser"]],[R[2]]]],[11,R[935],E,"In some positions, types may not contain the `+`…",84,[[[R[931]]],[R[2]]]],[11,R[935],E,E,83,[[[R[931]]],[R[2]]]],[11,"parse",E,E,83,[[[R[931]],["bool"]],[R[2]]]],[11,R[935],E,E,53,[[[R[931]]],[R[2]]]],[11,"parse",E,E,53,[[[R[931]],["bool"]],[R[2]]]],[11,"parse_mod_style",E,"Parse a `Path` containing no path arguments on any of its…",60,[[[R[931]]],[R[2]]]],[11,"is_ident",E,"Determines whether this is a path of length 1 equal to the…",60,[[["self"],["i"]],["bool"]]],[11,R[45],E,E,86,[[["self"]],["bool"]]],[0,"buffer",E,"A stably addressed token buffer supporting efficient…",N,N],[3,R[1148],R[1080],"A buffer that can be efficiently traversed multiple times,…",N,N],[3,"Cursor",E,"A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new",E,R[936],197,[[[R[167]]],[R[937]]]],[11,"new2",E,R[936],197,[[[R[167]]],[R[937]]]],[11,"begin",E,"Creates a cursor referencing the first token in the buffer…",197,[[["self"]],["cursor"]]],[11,"empty",E,"Creates a cursor referencing a static empty TokenStream.",198,[[],["self"]]],[11,"eof",E,"Checks whether the cursor is currently pointing at the end…",198,[[],["bool"]]],[11,"group",E,"If the cursor is pointing at a `Group` with the given…",198,[[[R[168]]],[R[32]]]],[11,"ident",E,"If the cursor is pointing at a `Ident`, returns it along…",198,[[],[R[32]]]],[11,"punct",E,"If the cursor is pointing at an `Punct`, returns it along…",198,[[],[R[32]]]],[11,R[171],E,"If the cursor is pointing at a `Literal`, return it along…",198,[[],[R[32]]]],[11,R[841],E,"If the cursor is pointing at a `Lifetime`, returns it…",198,[[],[R[32]]]],[11,R[938],E,"Copies all remaining tokens visible from this cursor into…",198,[[],[R[167]]]],[11,"token_tree",E,"If the cursor is pointing at a `TokenTree`, returns it…",198,[[],[R[32]]]],[11,"span",E,"Returns the `Span` of the current token, or…",198,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",N,N],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",N,N],[10,"parse_any",E,"Parses any identifier including keywords.",199,[[[R[931]]],[R[2]]]],[18,"peek_any",E,"Peeks any identifier including keywords. Usage:…",199,N],[10,"unraw",E,"Strips the raw marker `r#`, if any, from the beginning of…",199,[[["self"]],["ident"]]],[0,R[940],"syn","A punctuated sequence of syntax tree nodes separated by…",N,N],[3,R[939],R[1081],"A punctuated sequence of syntax tree nodes of type `T`…",N,N],[3,"Pairs",E,"An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut",E,"An iterator over mutably borrowed pairs of type `Pair<&mut…",N,N],[3,"IntoPairs",E,"An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,R[165],E,"An iterator over owned values of type `T`.",N,N],[3,"Iter",E,"An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut",E,"An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair",E,"A single syntax tree node of type `T` followed by its…",N,N],[13,R[939],E,E,200,N],[13,"End",E,E,200,N],[11,"new",E,"Creates an empty punctuated sequence.",201,[[],[R[940]]]],[11,R[45],E,"Determines whether this punctuated sequence is empty,…",201,[[["self"]],["bool"]]],[11,"len",E,"Returns the number of syntax tree nodes in this punctuated…",201,[[["self"]],["usize"]]],[11,"first",E,"Borrows the first punctuated pair in this sequence.",201,[[["self"]],[["pair"],[R[32],["pair"]]]]],[11,"last",E,"Borrows the last punctuated pair in this sequence.",201,[[["self"]],[["pair"],[R[32],["pair"]]]]],[11,"last_mut",E,"Mutably borrows the last punctuated pair in this sequence.",201,[[["self"]],[[R[32],["pair"]],["pair"]]]],[11,"iter",E,"Returns an iterator over borrowed syntax tree nodes of…",201,[[["self"]],["iter"]]],[11,"iter_mut",E,"Returns an iterator over mutably borrowed syntax tree…",201,[[["self"]],["itermut"]]],[11,"pairs",E,R[941],201,[[["self"]],["pairs"]]],[11,"pairs_mut",E,R[941],201,[[["self"]],["pairsmut"]]],[11,"into_pairs",E,R[941],201,[[],["intopairs"]]],[11,"push_value",E,R[942],201,[[["self"],[T]]]],[11,"push_punct",E,"Appends a trailing punctuation onto the end of this…",201,[[["self"],["p"]]]],[11,"pop",E,"Removes the last punctuated pair from this sequence, or…",201,[[["self"]],[["pair"],[R[32],["pair"]]]]],[11,"trailing_punct",E,"Determines whether this punctuated sequence ends with a…",201,[[["self"]],["bool"]]],[11,"empty_or_trailing",E,"Returns true if either this `Punctuated` is empty, or it…",201,[[["self"]],["bool"]]],[11,"push",E,R[942],201,[[["self"],[T]]]],[11,"insert",E,"Inserts an element at position `index`.",201,[[["self"],["usize"],[T]]]],[11,R[1076],E,R[1077],201,[[[R[931]]],[R[2]]]],[11,"parse_terminated_with",E,"Parses zero or more occurrences of `T` using the given…",201,[[[R[931]]],[R[2]]]],[11,"parse_separated_nonempty",E,"Parses one or more occurrences of `T` separated by…",201,[[[R[931]]],[R[2]]]],[11,"parse_separated_nonempty_with",E,"Parses one or more occurrences of `T` using the given…",201,[[[R[931]]],[R[2]]]],[11,"into_value",E,"Extracts the syntax tree node from this punctuated pair,…",200,[[],[T]]],[11,"value",E,"Borrows the syntax tree node from this punctuated pair.",200,[[["self"]],[T]]],[11,"value_mut",E,"Mutably borrows the syntax tree node from this punctuated…",200,[[["self"]],[T]]],[11,"punct",E,"Borrows the punctuation from this punctuated pair, unless…",200,[[["self"]],[[R[32]],["p"]]]],[11,"new",E,"Creates a punctuated pair out of a syntax tree node and an…",200,[[[R[32]],[T]],["self"]]],[11,"into_tuple",E,"Produces this punctuated pair as a tuple of syntax tree…",200,[[]]],[0,"spanned","syn",R[943],N,N],[8,"Spanned","syn::spanned",R[943],N,N],[10,"span",E,"Returns a `Span` covering the complete contents of this…",202,[[["self"]],["span"]]],[0,"visit","syn",R[945],N,N],[5,R[946],"syn::visit",E,N,[[["abi"],["v"]]]],[5,R[947],E,E,N,[[[R[948]],["v"]]]],[5,R[949],E,E,N,[[[R[950]],["v"]]]],[5,R[951],E,E,N,[[[R[952]],["v"]]]],[5,R[953],E,E,N,[[[R[954]],["v"]]]],[5,R[955],E,E,N,[[[R[956]],["v"]]]],[5,R[957],E,E,N,[[["binop"],["v"]]]],[5,R[958],E,E,N,[[["binding"],["v"]]]],[5,R[959],E,E,N,[[[R[960]],["v"]]]],[5,R[961],E,E,N,[[[R[962]],["v"]]]],[5,R[963],E,E,N,[[[R[964]],["v"]]]],[5,R[965],E,E,N,[[["data"],["v"]]]],[5,R[966],E,E,N,[[["dataenum"],["v"]]]],[5,R[967],E,E,N,[[[R[968]],["v"]]]],[5,R[969],E,E,N,[[[R[970]],["v"]]]],[5,R[971],E,E,N,[[[R[972]],["v"]]]],[5,R[973],E,E,N,[[["expr"],["v"]]]],[5,R[974],E,E,N,[[[R[975]],["v"]]]],[5,R[976],E,E,N,[[["exprcall"],["v"]]]],[5,R[977],E,E,N,[[["exprcast"],["v"]]]],[5,R[978],E,E,N,[[[R[979]],["v"]]]],[5,R[980],E,E,N,[[[R[981]],["v"]]]],[5,R[982],E,E,N,[[["exprlit"],["v"]]]],[5,R[983],E,E,N,[[[R[984]],["v"]]]],[5,R[985],E,E,N,[[["exprpath"],["v"]]]],[5,R[986],E,E,N,[[[R[987]],["v"]]]],[5,R[988],E,E,N,[[[R[989]],["v"]]]],[5,R[990],E,E,N,[[["field"],["v"]]]],[5,R[991],E,E,N,[[["fields"],["v"]]]],[5,R[992],E,E,N,[[[R[993]],["v"]]]],[5,R[994],E,E,N,[[[R[995]],["v"]]]],[5,R[996],E,E,N,[[[R[997]],["v"]]]],[5,R[998],E,E,N,[[[R[999]],["v"]]]],[5,R[1000],E,E,N,[[["generics"],["v"]]]],[5,R[1001],E,E,N,[[["index"],["v"]]]],[5,R[1002],E,E,N,[[[R[841]],["v"]]]],[5,R[1003],E,E,N,[[[R[1004]],["v"]]]],[5,"visit_lit",E,E,N,[[["lit"],["v"]]]],[5,R[1005],E,E,N,[[["litbool"],["v"]]]],[5,R[1006],E,E,N,[[["litbyte"],["v"]]]],[5,R[1007],E,E,N,[[[R[1087]],["v"]]]],[5,R[1008],E,E,N,[[["litchar"],["v"]]]],[5,R[1009],E,E,N,[[["litfloat"],["v"]]]],[5,R[1010],E,E,N,[[["litint"],["v"]]]],[5,R[1011],E,E,N,[[["litstr"],["v"]]]],[5,R[1012],E,E,N,[[[R[1013]],["v"]]]],[5,R[1014],E,E,N,[[["macro"],["v"]]]],[5,R[1015],E,E,N,[[[R[1016]],["v"]]]],[5,R[1017],E,E,N,[[["member"],["v"]]]],[5,R[1112],E,E,N,[[["meta"],["v"]]]],[5,R[1018],E,E,N,[[["metalist"],["v"]]]],[5,R[1019],E,E,N,[[[R[1020]],["v"]]]],[5,R[1021],E,E,N,[[[R[1084]],["v"]]]],[5,R[1022],E,E,N,[[[R[1023]],["v"]]]],[5,R[1113],E,E,N,[[["path"],["v"]]]],[5,R[1024],E,E,N,[[[R[1025]],["v"]]]],[5,R[1026],E,E,N,[[[R[1027]],["v"]]]],[5,R[1028],E,E,N,[[[R[1029]],["v"]]]],[5,R[1030],E,E,N,[[[R[1031]],["v"]]]],[5,R[1032],E,E,N,[[[R[1033]],["v"]]]],[5,R[1034],E,E,N,[[["qself"],["v"]]]],[5,R[1035],E,E,N,[[[R[1089]],["v"]]]],[5,R[1036],E,E,N,[[[R[1086]],["v"]]]],[5,R[1037],E,E,N,[[[R[1038]],["v"]]]],[5,R[1114],E,E,N,[[["type"],["v"]]]],[5,R[1039],E,E,N,[[[R[1101]],["v"]]]],[5,R[1040],E,E,N,[[[R[1088]],["v"]]]],[5,R[1041],E,E,N,[[[R[1105]],["v"]]]],[5,R[1042],E,E,N,[[[R[1043]],["v"]]]],[5,R[1044],E,E,N,[[[R[1106]],["v"]]]],[5,R[1045],E,E,N,[[[R[1107]],["v"]]]],[5,R[1046],E,E,N,[[[R[1102]],["v"]]]],[5,R[1047],E,E,N,[[[R[1099]],["v"]]]],[5,R[1048],E,E,N,[[[R[1049]],["v"]]]],[5,R[1050],E,E,N,[[[R[1104]],["v"]]]],[5,R[1051],E,E,N,[[["typepath"],["v"]]]],[5,R[1052],E,E,N,[[["typeptr"],["v"]]]],[5,R[1053],E,E,N,[[[R[1054]],["v"]]]],[5,R[1055],E,E,N,[[[R[1100]],["v"]]]],[5,R[1056],E,E,N,[[[R[1057]],["v"]]]],[5,R[1058],E,E,N,[[[R[1103]],["v"]]]],[5,R[1059],E,E,N,[[[R[1060]],["v"]]]],[5,R[1061],E,E,N,[[["unop"],["v"]]]],[5,R[1062],E,E,N,[[["variant"],["v"]]]],[5,R[1063],E,E,N,[[["viscrate"],["v"]]]],[5,R[1064],E,E,N,[[[R[1090]],["v"]]]],[5,R[1065],E,E,N,[[[R[1066]],["v"]]]],[5,R[1067],E,E,N,[[[R[1085]],["v"]]]],[5,R[1068],E,E,N,[[[R[944]],["v"]]]],[5,R[1069],E,E,N,[[[R[1070]],["v"]]]],[5,R[1115],E,E,N,[[["span"],["v"]]]],[5,R[1071],E,E,N,[[["ident"],["v"]]]],[8,"Visit",E,R[945],N,N],[11,R[946],E,E,203,[[["self"],["abi"]]]],[11,R[947],E,E,203,[[["self"],[R[948]]]]],[11,R[949],E,E,203,[[["self"],[R[950]]]]],[11,R[951],E,E,203,[[["self"],[R[952]]]]],[11,R[953],E,E,203,[[["self"],[R[954]]]]],[11,R[955],E,E,203,[[["self"],[R[956]]]]],[11,R[957],E,E,203,[[["self"],["binop"]]]],[11,R[958],E,E,203,[[["self"],["binding"]]]],[11,R[959],E,E,203,[[["self"],[R[960]]]]],[11,R[961],E,E,203,[[["self"],[R[962]]]]],[11,R[963],E,E,203,[[["self"],[R[964]]]]],[11,R[965],E,E,203,[[["self"],["data"]]]],[11,R[966],E,E,203,[[["self"],["dataenum"]]]],[11,R[967],E,E,203,[[["self"],[R[968]]]]],[11,R[969],E,E,203,[[["self"],[R[970]]]]],[11,R[971],E,E,203,[[["self"],[R[972]]]]],[11,R[973],E,E,203,[[["self"],["expr"]]]],[11,R[974],E,E,203,[[["self"],[R[975]]]]],[11,R[976],E,E,203,[[["self"],["exprcall"]]]],[11,R[977],E,E,203,[[["self"],["exprcast"]]]],[11,R[978],E,E,203,[[["self"],[R[979]]]]],[11,R[980],E,E,203,[[["self"],[R[981]]]]],[11,R[982],E,E,203,[[["self"],["exprlit"]]]],[11,R[983],E,E,203,[[["self"],[R[984]]]]],[11,R[985],E,E,203,[[["self"],["exprpath"]]]],[11,R[986],E,E,203,[[["self"],[R[987]]]]],[11,R[988],E,E,203,[[["self"],[R[989]]]]],[11,R[990],E,E,203,[[["self"],["field"]]]],[11,R[991],E,E,203,[[["self"],["fields"]]]],[11,R[992],E,E,203,[[["self"],[R[993]]]]],[11,R[994],E,E,203,[[["self"],[R[995]]]]],[11,R[996],E,E,203,[[["self"],[R[997]]]]],[11,R[998],E,E,203,[[["self"],[R[999]]]]],[11,R[1000],E,E,203,[[["self"],["generics"]]]],[11,R[1001],E,E,203,[[["self"],["index"]]]],[11,R[1002],E,E,203,[[["self"],[R[841]]]]],[11,R[1003],E,E,203,[[["self"],[R[1004]]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[1005],E,E,203,[[["self"],["litbool"]]]],[11,R[1006],E,E,203,[[["self"],["litbyte"]]]],[11,R[1007],E,E,203,[[["self"],[R[1087]]]]],[11,R[1008],E,E,203,[[["self"],["litchar"]]]],[11,R[1009],E,E,203,[[["self"],["litfloat"]]]],[11,R[1010],E,E,203,[[["self"],["litint"]]]],[11,R[1011],E,E,203,[[["self"],["litstr"]]]],[11,R[1012],E,E,203,[[["self"],[R[1013]]]]],[11,R[1014],E,E,203,[[["self"],["macro"]]]],[11,R[1015],E,E,203,[[["self"],[R[1016]]]]],[11,R[1017],E,E,203,[[["self"],["member"]]]],[11,R[1112],E,E,203,[[["self"],["meta"]]]],[11,R[1018],E,E,203,[[["self"],["metalist"]]]],[11,R[1019],E,E,203,[[["self"],[R[1020]]]]],[11,R[1021],E,E,203,[[["self"],[R[1084]]]]],[11,R[1022],E,E,203,[[["self"],[R[1023]]]]],[11,R[1113],E,E,203,[[["self"],["path"]]]],[11,R[1024],E,E,203,[[["self"],[R[1025]]]]],[11,R[1026],E,E,203,[[["self"],[R[1027]]]]],[11,R[1028],E,E,203,[[["self"],[R[1029]]]]],[11,R[1030],E,E,203,[[["self"],[R[1031]]]]],[11,R[1032],E,E,203,[[["self"],[R[1033]]]]],[11,R[1034],E,E,203,[[["self"],["qself"]]]],[11,R[1035],E,E,203,[[["self"],[R[1089]]]]],[11,R[1036],E,E,203,[[["self"],[R[1086]]]]],[11,R[1037],E,E,203,[[["self"],[R[1038]]]]],[11,R[1114],E,E,203,[[["self"],["type"]]]],[11,R[1039],E,E,203,[[["self"],[R[1101]]]]],[11,R[1040],E,E,203,[[["self"],[R[1088]]]]],[11,R[1041],E,E,203,[[["self"],[R[1105]]]]],[11,R[1042],E,E,203,[[["self"],[R[1043]]]]],[11,R[1044],E,E,203,[[["self"],[R[1106]]]]],[11,R[1045],E,E,203,[[["self"],[R[1107]]]]],[11,R[1046],E,E,203,[[["self"],[R[1102]]]]],[11,R[1047],E,E,203,[[["self"],[R[1099]]]]],[11,R[1048],E,E,203,[[["self"],[R[1049]]]]],[11,R[1050],E,E,203,[[["self"],[R[1104]]]]],[11,R[1051],E,E,203,[[["self"],["typepath"]]]],[11,R[1052],E,E,203,[[["self"],["typeptr"]]]],[11,R[1053],E,E,203,[[["self"],[R[1054]]]]],[11,R[1055],E,E,203,[[["self"],[R[1100]]]]],[11,R[1056],E,E,203,[[["self"],[R[1057]]]]],[11,R[1058],E,E,203,[[["self"],[R[1103]]]]],[11,R[1059],E,E,203,[[["self"],[R[1060]]]]],[11,R[1061],E,E,203,[[["self"],["unop"]]]],[11,R[1062],E,E,203,[[["self"],["variant"]]]],[11,R[1063],E,E,203,[[["self"],["viscrate"]]]],[11,R[1064],E,E,203,[[["self"],[R[1090]]]]],[11,R[1065],E,E,203,[[["self"],[R[1066]]]]],[11,R[1067],E,E,203,[[["self"],[R[1085]]]]],[11,R[1068],E,E,203,[[["self"],[R[944]]]]],[11,R[1069],E,E,203,[[["self"],[R[1070]]]]],[11,R[1115],E,E,203,[[["self"],["span"]]]],[11,R[1071],E,E,203,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",N,N],[3,"Error",R[1082],R[1072],N,N],[3,"Lookahead1",E,"Support for checking the next token in a stream to decide…",N,N],[3,R[1150],E,"Cursor position within a buffered token stream.",N,N],[3,"StepCursor",E,"Cursor state associated with speculative parsing.",N,N],[0,"discouraged",E,"Extensions to the parsing API with niche applicability.",N,N],[8,R[1149],"syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",N,N],[10,"advance_to",E,"Advance this parse stream to the position of a forked…",204,[[["self"]]]],[6,"Result",R[1082],R[1079],N,N],[6,"ParseStream",E,"Input to a Syn parser function.",N,N],[8,"Peek",E,"Types that can be parsed by looking at just one token.",N,N],[8,"Parse",E,"Parsing interface implemented by all types that can be…",N,N],[10,"parse",E,E,205,[[[R[931]]],[R[2]]]],[8,"Parser",E,"Parser that can parse Rust tokens into a particular syntax…",N,N],[16,"Output",E,E,206,N],[10,"parse2",E,R[1073],206,[[[R[167]]],[R[2]]]],[11,"parse",E,R[1074],206,[[[R[167]]],[R[2]]]],[11,R[1711],E,R[1075],206,[[["str"]],[R[2]]]],[11,"error",E,R[1078],207,[[["display"]],["error"]]],[11,"parse",E,"Parses a syntax tree node of type `T`, advancing the…",208,[[["self"]],[["parse"],[R[2]]]]],[11,"call",E,"Calls the given parser function to parse a syntax tree…",208,[[["self"]],[R[2]]]],[11,"peek",E,R[1116],208,[[["self"],["peek"]],["bool"]]],[11,"peek2",E,"Looks at the second-next token in the parse stream.",208,[[["self"],["peek"]],["bool"]]],[11,"peek3",E,"Looks at the third-next token in the parse stream.",208,[[["self"],["peek"]],["bool"]]],[11,R[1076],E,R[1077],208,[[["self"]],[[R[2],[R[940]]],[R[940]]]]],[11,R[45],E,"Returns whether there are tokens remaining in this stream.",208,[[["self"]],["bool"]]],[11,"lookahead1",E,"Constructs a helper for peeking at the next token in this…",208,[[["self"]],["lookahead1"]]],[11,"fork",E,"Forks a parse stream so that parsing tokens out of either…",208,[[["self"]],["self"]]],[11,"error",E,R[1078],208,[[["self"],["display"]],["error"]]],[11,"step",E,"Speculatively parses tokens from this parse stream,…",208,[[["self"],["f"]],[R[2]]]],[11,"cursor",E,"Provides low-level access to the token representation…",208,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",209,[[["display"],["span"]],["self"]]],[11,"new_spanned",E,"Creates an error with the specified message spanning the…",209,[[["totokens"],["display"]],["self"]]],[11,"span",E,"The source location of the error.",209,[[["self"]],["span"]]],[11,"to_compile_error",E,"Render the error as an invocation of [`compile_error!`].",209,[[["self"]],[R[167]]]],[6,"AttributeArgs",E,"Conventional argument type associated with an invocation…",N,N],[6,"Result",E,R[1079],N,N],[14,"parenthesized",E,"Parse a set of parentheses and expose their content to…",N,N],[14,"braced",E,"Parse a set of curly braces and expose their content to…",N,N],[14,"bracketed",E,"Parse a set of square brackets and expose their content to…",N,N],[14,"Token",E,"A type-macro that expands to the name of the Rust type…",N,N],[14,"parse_quote",E,"Quasi-quotation macro that accepts input like the…",N,N],[14,"parse_macro_input",E,"Parse the input TokenStream of a macro, triggering a…",N,N],[14,"custom_keyword",E,"Define a type that supports parsing and printing a given…",N,N],[14,"custom_punctuation",E,"Define a type that supports parsing and printing a…",N,N],[11,"peek",E,E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"span",E,E,210,[[["self"]],["span"]]],[11,"into",E,E,210,[[],[U]]],[11,R[95],E,E,210,[[["self"]],[R[63]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,R[37],E,E,210,[[["self"]],[T]]],[11,R[38],E,E,210,[[["self"],[T]]]],[11,R[7],E,E,210,[[[U]],[R[2]]]],[11,R[8],E,E,210,[[],[R[2]]]],[11,R[10],E,E,210,[[["self"]],[T]]],[11,R[9],E,E,210,[[["self"]],[T]]],[11,R[11],E,E,210,[[["self"]],[R[34]]]],[11,"span",E,E,0,[[["self"]],["span"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"span",E,E,1,[[["self"]],["span"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[37],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"],[T]]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"span",E,E,2,[[["self"]],["span"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"span",E,E,3,[[["self"]],["span"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"span",E,E,4,[[["self"]],["span"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[37],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"],[T]]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"span",E,E,5,[[["self"]],["span"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[37],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"],[T]]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"span",E,E,6,[[["self"]],["span"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"],[T]]]],[11,R[7],E,E,6,[[[U]],[R[2]]]],[11,R[8],E,E,6,[[],[R[2]]]],[11,R[10],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[T]]],[11,R[11],E,E,6,[[["self"]],[R[34]]]],[11,"span",E,E,7,[[["self"]],["span"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"],[T]]]],[11,R[7],E,E,7,[[[U]],[R[2]]]],[11,R[8],E,E,7,[[],[R[2]]]],[11,R[10],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[T]]],[11,R[11],E,E,7,[[["self"]],[R[34]]]],[11,"span",E,E,8,[[["self"]],["span"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[37],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"],[T]]]],[11,R[7],E,E,8,[[[U]],[R[2]]]],[11,R[8],E,E,8,[[],[R[2]]]],[11,R[10],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[T]]],[11,R[11],E,E,8,[[["self"]],[R[34]]]],[11,"span",E,E,9,[[["self"]],["span"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[37],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"],[T]]]],[11,R[7],E,E,9,[[[U]],[R[2]]]],[11,R[8],E,E,9,[[],[R[2]]]],[11,R[10],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[T]]],[11,R[11],E,E,9,[[["self"]],[R[34]]]],[11,"into",E,E,211,[[],[U]]],[11,"from",E,E,211,[[[T]],[T]]],[11,R[37],E,E,211,[[["self"]],[T]]],[11,R[38],E,E,211,[[["self"],[T]]]],[11,R[7],E,E,211,[[[U]],[R[2]]]],[11,R[8],E,E,211,[[],[R[2]]]],[11,R[10],E,E,211,[[["self"]],[T]]],[11,R[9],E,E,211,[[["self"]],[T]]],[11,R[11],E,E,211,[[["self"]],[R[34]]]],[11,"into",E,E,212,[[],[U]]],[11,"from",E,E,212,[[[T]],[T]]],[11,R[37],E,E,212,[[["self"]],[T]]],[11,R[38],E,E,212,[[["self"],[T]]]],[11,R[7],E,E,212,[[[U]],[R[2]]]],[11,R[8],E,E,212,[[],[R[2]]]],[11,R[10],E,E,212,[[["self"]],[T]]],[11,R[9],E,E,212,[[["self"]],[T]]],[11,R[11],E,E,212,[[["self"]],[R[34]]]],[11,"into",E,E,213,[[],[U]]],[11,"from",E,E,213,[[[T]],[T]]],[11,R[37],E,E,213,[[["self"]],[T]]],[11,R[38],E,E,213,[[["self"],[T]]]],[11,R[7],E,E,213,[[[U]],[R[2]]]],[11,R[8],E,E,213,[[],[R[2]]]],[11,R[10],E,E,213,[[["self"]],[T]]],[11,R[9],E,E,213,[[["self"]],[T]]],[11,R[11],E,E,213,[[["self"]],[R[34]]]],[11,"into",E,E,214,[[],[U]]],[11,"from",E,E,214,[[[T]],[T]]],[11,R[37],E,E,214,[[["self"]],[T]]],[11,R[38],E,E,214,[[["self"],[T]]]],[11,R[7],E,E,214,[[[U]],[R[2]]]],[11,R[8],E,E,214,[[],[R[2]]]],[11,R[10],E,E,214,[[["self"]],[T]]],[11,R[9],E,E,214,[[["self"]],[T]]],[11,R[11],E,E,214,[[["self"]],[R[34]]]],[11,"span",E,E,10,[[["self"]],["span"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[37],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"],[T]]]],[11,R[7],E,E,10,[[[U]],[R[2]]]],[11,R[8],E,E,10,[[],[R[2]]]],[11,R[10],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[T]]],[11,R[11],E,E,10,[[["self"]],[R[34]]]],[11,"into",E,E,215,[[],[U]]],[11,"from",E,E,215,[[[T]],[T]]],[11,R[37],E,E,215,[[["self"]],[T]]],[11,R[38],E,E,215,[[["self"],[T]]]],[11,R[7],E,E,215,[[[U]],[R[2]]]],[11,R[8],E,E,215,[[],[R[2]]]],[11,R[10],E,E,215,[[["self"]],[T]]],[11,R[9],E,E,215,[[["self"]],[T]]],[11,R[11],E,E,215,[[["self"]],[R[34]]]],[11,"into",E,E,216,[[],[U]]],[11,"from",E,E,216,[[[T]],[T]]],[11,R[37],E,E,216,[[["self"]],[T]]],[11,R[38],E,E,216,[[["self"],[T]]]],[11,R[7],E,E,216,[[[U]],[R[2]]]],[11,R[8],E,E,216,[[],[R[2]]]],[11,R[10],E,E,216,[[["self"]],[T]]],[11,R[9],E,E,216,[[["self"]],[T]]],[11,R[11],E,E,216,[[["self"]],[R[34]]]],[11,"into",E,E,217,[[],[U]]],[11,"from",E,E,217,[[[T]],[T]]],[11,R[37],E,E,217,[[["self"]],[T]]],[11,R[38],E,E,217,[[["self"],[T]]]],[11,R[7],E,E,217,[[[U]],[R[2]]]],[11,R[8],E,E,217,[[],[R[2]]]],[11,R[10],E,E,217,[[["self"]],[T]]],[11,R[9],E,E,217,[[["self"]],[T]]],[11,R[11],E,E,217,[[["self"]],[R[34]]]],[11,"span",E,E,11,[[["self"]],["span"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[37],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"],[T]]]],[11,R[7],E,E,11,[[[U]],[R[2]]]],[11,R[8],E,E,11,[[],[R[2]]]],[11,R[10],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[T]]],[11,R[11],E,E,11,[[["self"]],[R[34]]]],[11,"span",E,E,12,[[["self"]],["span"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[37],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"],[T]]]],[11,R[7],E,E,12,[[[U]],[R[2]]]],[11,R[8],E,E,12,[[],[R[2]]]],[11,R[10],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[T]]],[11,R[11],E,E,12,[[["self"]],[R[34]]]],[11,"into",E,E,218,[[],[U]]],[11,"from",E,E,218,[[[T]],[T]]],[11,R[37],E,E,218,[[["self"]],[T]]],[11,R[38],E,E,218,[[["self"],[T]]]],[11,R[7],E,E,218,[[[U]],[R[2]]]],[11,R[8],E,E,218,[[],[R[2]]]],[11,R[10],E,E,218,[[["self"]],[T]]],[11,R[9],E,E,218,[[["self"]],[T]]],[11,R[11],E,E,218,[[["self"]],[R[34]]]],[11,"into",E,E,219,[[],[U]]],[11,"from",E,E,219,[[[T]],[T]]],[11,R[37],E,E,219,[[["self"]],[T]]],[11,R[38],E,E,219,[[["self"],[T]]]],[11,R[7],E,E,219,[[[U]],[R[2]]]],[11,R[8],E,E,219,[[],[R[2]]]],[11,R[10],E,E,219,[[["self"]],[T]]],[11,R[9],E,E,219,[[["self"]],[T]]],[11,R[11],E,E,219,[[["self"]],[R[34]]]],[11,"span",E,E,13,[[["self"]],["span"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[37],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"],[T]]]],[11,R[7],E,E,13,[[[U]],[R[2]]]],[11,R[8],E,E,13,[[],[R[2]]]],[11,R[10],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[T]]],[11,R[11],E,E,13,[[["self"]],[R[34]]]],[11,"into",E,E,220,[[],[U]]],[11,"from",E,E,220,[[[T]],[T]]],[11,R[37],E,E,220,[[["self"]],[T]]],[11,R[38],E,E,220,[[["self"],[T]]]],[11,R[7],E,E,220,[[[U]],[R[2]]]],[11,R[8],E,E,220,[[],[R[2]]]],[11,R[10],E,E,220,[[["self"]],[T]]],[11,R[9],E,E,220,[[["self"]],[T]]],[11,R[11],E,E,220,[[["self"]],[R[34]]]],[11,"into",E,E,221,[[],[U]]],[11,"from",E,E,221,[[[T]],[T]]],[11,R[37],E,E,221,[[["self"]],[T]]],[11,R[38],E,E,221,[[["self"],[T]]]],[11,R[7],E,E,221,[[[U]],[R[2]]]],[11,R[8],E,E,221,[[],[R[2]]]],[11,R[10],E,E,221,[[["self"]],[T]]],[11,R[9],E,E,221,[[["self"]],[T]]],[11,R[11],E,E,221,[[["self"]],[R[34]]]],[11,"into",E,E,222,[[],[U]]],[11,"from",E,E,222,[[[T]],[T]]],[11,R[37],E,E,222,[[["self"]],[T]]],[11,R[38],E,E,222,[[["self"],[T]]]],[11,R[7],E,E,222,[[[U]],[R[2]]]],[11,R[8],E,E,222,[[],[R[2]]]],[11,R[10],E,E,222,[[["self"]],[T]]],[11,R[9],E,E,222,[[["self"]],[T]]],[11,R[11],E,E,222,[[["self"]],[R[34]]]],[11,"into",E,E,223,[[],[U]]],[11,"from",E,E,223,[[[T]],[T]]],[11,R[37],E,E,223,[[["self"]],[T]]],[11,R[38],E,E,223,[[["self"],[T]]]],[11,R[7],E,E,223,[[[U]],[R[2]]]],[11,R[8],E,E,223,[[],[R[2]]]],[11,R[10],E,E,223,[[["self"]],[T]]],[11,R[9],E,E,223,[[["self"]],[T]]],[11,R[11],E,E,223,[[["self"]],[R[34]]]],[11,"span",E,E,14,[[["self"]],["span"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[37],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"],[T]]]],[11,R[7],E,E,14,[[[U]],[R[2]]]],[11,R[8],E,E,14,[[],[R[2]]]],[11,R[10],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[T]]],[11,R[11],E,E,14,[[["self"]],[R[34]]]],[11,"into",E,E,224,[[],[U]]],[11,"from",E,E,224,[[[T]],[T]]],[11,R[37],E,E,224,[[["self"]],[T]]],[11,R[38],E,E,224,[[["self"],[T]]]],[11,R[7],E,E,224,[[[U]],[R[2]]]],[11,R[8],E,E,224,[[],[R[2]]]],[11,R[10],E,E,224,[[["self"]],[T]]],[11,R[9],E,E,224,[[["self"]],[T]]],[11,R[11],E,E,224,[[["self"]],[R[34]]]],[11,"span",E,E,15,[[["self"]],["span"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"],[T]]]],[11,R[7],E,E,15,[[[U]],[R[2]]]],[11,R[8],E,E,15,[[],[R[2]]]],[11,R[10],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[T]]],[11,R[11],E,E,15,[[["self"]],[R[34]]]],[11,"into",E,E,225,[[],[U]]],[11,"from",E,E,225,[[[T]],[T]]],[11,R[37],E,E,225,[[["self"]],[T]]],[11,R[38],E,E,225,[[["self"],[T]]]],[11,R[7],E,E,225,[[[U]],[R[2]]]],[11,R[8],E,E,225,[[],[R[2]]]],[11,R[10],E,E,225,[[["self"]],[T]]],[11,R[9],E,E,225,[[["self"]],[T]]],[11,R[11],E,E,225,[[["self"]],[R[34]]]],[11,"into",E,E,226,[[],[U]]],[11,"from",E,E,226,[[[T]],[T]]],[11,R[37],E,E,226,[[["self"]],[T]]],[11,R[38],E,E,226,[[["self"],[T]]]],[11,R[7],E,E,226,[[[U]],[R[2]]]],[11,R[8],E,E,226,[[],[R[2]]]],[11,R[10],E,E,226,[[["self"]],[T]]],[11,R[9],E,E,226,[[["self"]],[T]]],[11,R[11],E,E,226,[[["self"]],[R[34]]]],[11,"into",E,E,227,[[],[U]]],[11,"from",E,E,227,[[[T]],[T]]],[11,R[37],E,E,227,[[["self"]],[T]]],[11,R[38],E,E,227,[[["self"],[T]]]],[11,R[7],E,E,227,[[[U]],[R[2]]]],[11,R[8],E,E,227,[[],[R[2]]]],[11,R[10],E,E,227,[[["self"]],[T]]],[11,R[9],E,E,227,[[["self"]],[T]]],[11,R[11],E,E,227,[[["self"]],[R[34]]]],[11,"into",E,E,228,[[],[U]]],[11,"from",E,E,228,[[[T]],[T]]],[11,R[37],E,E,228,[[["self"]],[T]]],[11,R[38],E,E,228,[[["self"],[T]]]],[11,R[7],E,E,228,[[[U]],[R[2]]]],[11,R[8],E,E,228,[[],[R[2]]]],[11,R[10],E,E,228,[[["self"]],[T]]],[11,R[9],E,E,228,[[["self"]],[T]]],[11,R[11],E,E,228,[[["self"]],[R[34]]]],[11,"span",E,E,16,[[["self"]],["span"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"],[T]]]],[11,R[7],E,E,16,[[[U]],[R[2]]]],[11,R[8],E,E,16,[[],[R[2]]]],[11,R[10],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[T]]],[11,R[11],E,E,16,[[["self"]],[R[34]]]],[11,"span",E,E,17,[[["self"]],["span"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[37],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"],[T]]]],[11,R[7],E,E,17,[[[U]],[R[2]]]],[11,R[8],E,E,17,[[],[R[2]]]],[11,R[10],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[34]]]],[11,"into",E,E,229,[[],[U]]],[11,"from",E,E,229,[[[T]],[T]]],[11,R[37],E,E,229,[[["self"]],[T]]],[11,R[38],E,E,229,[[["self"],[T]]]],[11,R[7],E,E,229,[[[U]],[R[2]]]],[11,R[8],E,E,229,[[],[R[2]]]],[11,R[10],E,E,229,[[["self"]],[T]]],[11,R[9],E,E,229,[[["self"]],[T]]],[11,R[11],E,E,229,[[["self"]],[R[34]]]],[11,"into",E,E,230,[[],[U]]],[11,"from",E,E,230,[[[T]],[T]]],[11,R[37],E,E,230,[[["self"]],[T]]],[11,R[38],E,E,230,[[["self"],[T]]]],[11,R[7],E,E,230,[[[U]],[R[2]]]],[11,R[8],E,E,230,[[],[R[2]]]],[11,R[10],E,E,230,[[["self"]],[T]]],[11,R[9],E,E,230,[[["self"]],[T]]],[11,R[11],E,E,230,[[["self"]],[R[34]]]],[11,"into",E,E,231,[[],[U]]],[11,"from",E,E,231,[[[T]],[T]]],[11,R[37],E,E,231,[[["self"]],[T]]],[11,R[38],E,E,231,[[["self"],[T]]]],[11,R[7],E,E,231,[[[U]],[R[2]]]],[11,R[8],E,E,231,[[],[R[2]]]],[11,R[10],E,E,231,[[["self"]],[T]]],[11,R[9],E,E,231,[[["self"]],[T]]],[11,R[11],E,E,231,[[["self"]],[R[34]]]],[11,"into",E,E,232,[[],[U]]],[11,"from",E,E,232,[[[T]],[T]]],[11,R[37],E,E,232,[[["self"]],[T]]],[11,R[38],E,E,232,[[["self"],[T]]]],[11,R[7],E,E,232,[[[U]],[R[2]]]],[11,R[8],E,E,232,[[],[R[2]]]],[11,R[10],E,E,232,[[["self"]],[T]]],[11,R[9],E,E,232,[[["self"]],[T]]],[11,R[11],E,E,232,[[["self"]],[R[34]]]],[11,"into",E,E,233,[[],[U]]],[11,"from",E,E,233,[[[T]],[T]]],[11,R[37],E,E,233,[[["self"]],[T]]],[11,R[38],E,E,233,[[["self"],[T]]]],[11,R[7],E,E,233,[[[U]],[R[2]]]],[11,R[8],E,E,233,[[],[R[2]]]],[11,R[10],E,E,233,[[["self"]],[T]]],[11,R[9],E,E,233,[[["self"]],[T]]],[11,R[11],E,E,233,[[["self"]],[R[34]]]],[11,"into",E,E,234,[[],[U]]],[11,"from",E,E,234,[[[T]],[T]]],[11,R[37],E,E,234,[[["self"]],[T]]],[11,R[38],E,E,234,[[["self"],[T]]]],[11,R[7],E,E,234,[[[U]],[R[2]]]],[11,R[8],E,E,234,[[],[R[2]]]],[11,R[10],E,E,234,[[["self"]],[T]]],[11,R[9],E,E,234,[[["self"]],[T]]],[11,R[11],E,E,234,[[["self"]],[R[34]]]],[11,"into",E,E,235,[[],[U]]],[11,"from",E,E,235,[[[T]],[T]]],[11,R[37],E,E,235,[[["self"]],[T]]],[11,R[38],E,E,235,[[["self"],[T]]]],[11,R[7],E,E,235,[[[U]],[R[2]]]],[11,R[8],E,E,235,[[],[R[2]]]],[11,R[10],E,E,235,[[["self"]],[T]]],[11,R[9],E,E,235,[[["self"]],[T]]],[11,R[11],E,E,235,[[["self"]],[R[34]]]],[11,"into",E,E,236,[[],[U]]],[11,"from",E,E,236,[[[T]],[T]]],[11,R[37],E,E,236,[[["self"]],[T]]],[11,R[38],E,E,236,[[["self"],[T]]]],[11,R[7],E,E,236,[[[U]],[R[2]]]],[11,R[8],E,E,236,[[],[R[2]]]],[11,R[10],E,E,236,[[["self"]],[T]]],[11,R[9],E,E,236,[[["self"]],[T]]],[11,R[11],E,E,236,[[["self"]],[R[34]]]],[11,"into",E,E,237,[[],[U]]],[11,"from",E,E,237,[[[T]],[T]]],[11,R[37],E,E,237,[[["self"]],[T]]],[11,R[38],E,E,237,[[["self"],[T]]]],[11,R[7],E,E,237,[[[U]],[R[2]]]],[11,R[8],E,E,237,[[],[R[2]]]],[11,R[10],E,E,237,[[["self"]],[T]]],[11,R[9],E,E,237,[[["self"]],[T]]],[11,R[11],E,E,237,[[["self"]],[R[34]]]],[11,"span",E,E,18,[[["self"]],["span"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[37],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"],[T]]]],[11,R[7],E,E,18,[[[U]],[R[2]]]],[11,R[8],E,E,18,[[],[R[2]]]],[11,R[10],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[34]]]],[11,"into",E,E,238,[[],[U]]],[11,"from",E,E,238,[[[T]],[T]]],[11,R[37],E,E,238,[[["self"]],[T]]],[11,R[38],E,E,238,[[["self"],[T]]]],[11,R[7],E,E,238,[[[U]],[R[2]]]],[11,R[8],E,E,238,[[],[R[2]]]],[11,R[10],E,E,238,[[["self"]],[T]]],[11,R[9],E,E,238,[[["self"]],[T]]],[11,R[11],E,E,238,[[["self"]],[R[34]]]],[11,"span",E,E,19,[[["self"]],["span"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[37],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"],[T]]]],[11,R[7],E,E,19,[[[U]],[R[2]]]],[11,R[8],E,E,19,[[],[R[2]]]],[11,R[10],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[34]]]],[11,"into",E,E,239,[[],[U]]],[11,"from",E,E,239,[[[T]],[T]]],[11,R[37],E,E,239,[[["self"]],[T]]],[11,R[38],E,E,239,[[["self"],[T]]]],[11,R[7],E,E,239,[[[U]],[R[2]]]],[11,R[8],E,E,239,[[],[R[2]]]],[11,R[10],E,E,239,[[["self"]],[T]]],[11,R[9],E,E,239,[[["self"]],[T]]],[11,R[11],E,E,239,[[["self"]],[R[34]]]],[11,"into",E,E,240,[[],[U]]],[11,"from",E,E,240,[[[T]],[T]]],[11,R[37],E,E,240,[[["self"]],[T]]],[11,R[38],E,E,240,[[["self"],[T]]]],[11,R[7],E,E,240,[[[U]],[R[2]]]],[11,R[8],E,E,240,[[],[R[2]]]],[11,R[10],E,E,240,[[["self"]],[T]]],[11,R[9],E,E,240,[[["self"]],[T]]],[11,R[11],E,E,240,[[["self"]],[R[34]]]],[11,"span",E,E,20,[[["self"]],["span"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[37],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"],[T]]]],[11,R[7],E,E,20,[[[U]],[R[2]]]],[11,R[8],E,E,20,[[],[R[2]]]],[11,R[10],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[34]]]],[11,"span",E,E,21,[[["self"]],["span"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[37],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"],[T]]]],[11,R[7],E,E,21,[[[U]],[R[2]]]],[11,R[8],E,E,21,[[],[R[2]]]],[11,R[10],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[T]]],[11,R[11],E,E,21,[[["self"]],[R[34]]]],[11,"span",E,E,22,[[["self"]],["span"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[37],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"],[T]]]],[11,R[7],E,E,22,[[[U]],[R[2]]]],[11,R[8],E,E,22,[[],[R[2]]]],[11,R[10],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[34]]]],[11,"span",E,E,23,[[["self"]],["span"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[37],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"],[T]]]],[11,R[7],E,E,23,[[[U]],[R[2]]]],[11,R[8],E,E,23,[[],[R[2]]]],[11,R[10],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[T]]],[11,R[11],E,E,23,[[["self"]],[R[34]]]],[11,"span",E,E,24,[[["self"]],["span"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[37],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"],[T]]]],[11,R[7],E,E,24,[[[U]],[R[2]]]],[11,R[8],E,E,24,[[],[R[2]]]],[11,R[10],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[34]]]],[11,"span",E,E,25,[[["self"]],["span"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[37],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"],[T]]]],[11,R[7],E,E,25,[[[U]],[R[2]]]],[11,R[8],E,E,25,[[],[R[2]]]],[11,R[10],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[T]]],[11,R[11],E,E,25,[[["self"]],[R[34]]]],[11,"span",E,E,26,[[["self"]],["span"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[37],E,E,26,[[["self"]],[T]]],[11,R[38],E,E,26,[[["self"],[T]]]],[11,R[7],E,E,26,[[[U]],[R[2]]]],[11,R[8],E,E,26,[[],[R[2]]]],[11,R[10],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[T]]],[11,R[11],E,E,26,[[["self"]],[R[34]]]],[11,"span",E,E,27,[[["self"]],["span"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[37],E,E,27,[[["self"]],[T]]],[11,R[38],E,E,27,[[["self"],[T]]]],[11,R[7],E,E,27,[[[U]],[R[2]]]],[11,R[8],E,E,27,[[],[R[2]]]],[11,R[10],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[34]]]],[11,"span",E,E,28,[[["self"]],["span"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[37],E,E,28,[[["self"]],[T]]],[11,R[38],E,E,28,[[["self"],[T]]]],[11,R[7],E,E,28,[[[U]],[R[2]]]],[11,R[8],E,E,28,[[],[R[2]]]],[11,R[10],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[34]]]],[11,"span",E,E,29,[[["self"]],["span"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[37],E,E,29,[[["self"]],[T]]],[11,R[38],E,E,29,[[["self"],[T]]]],[11,R[7],E,E,29,[[[U]],[R[2]]]],[11,R[8],E,E,29,[[],[R[2]]]],[11,R[10],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[34]]]],[11,"span",E,E,30,[[["self"]],["span"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[37],E,E,30,[[["self"]],[T]]],[11,R[38],E,E,30,[[["self"],[T]]]],[11,R[7],E,E,30,[[[U]],[R[2]]]],[11,R[8],E,E,30,[[],[R[2]]]],[11,R[10],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[34]]]],[11,"span",E,E,241,[[["self"]],["span"]]],[11,"into",E,E,241,[[],[U]]],[11,"from",E,E,241,[[[T]],[T]]],[11,R[37],E,E,241,[[["self"]],[T]]],[11,R[38],E,E,241,[[["self"],[T]]]],[11,R[7],E,E,241,[[[U]],[R[2]]]],[11,R[8],E,E,241,[[],[R[2]]]],[11,R[10],E,E,241,[[["self"]],[T]]],[11,R[9],E,E,241,[[["self"]],[T]]],[11,R[11],E,E,241,[[["self"]],[R[34]]]],[11,"span",E,E,242,[[["self"]],["span"]]],[11,"into",E,E,242,[[],[U]]],[11,"from",E,E,242,[[[T]],[T]]],[11,R[37],E,E,242,[[["self"]],[T]]],[11,R[38],E,E,242,[[["self"],[T]]]],[11,R[7],E,E,242,[[[U]],[R[2]]]],[11,R[8],E,E,242,[[],[R[2]]]],[11,R[10],E,E,242,[[["self"]],[T]]],[11,R[9],E,E,242,[[["self"]],[T]]],[11,R[11],E,E,242,[[["self"]],[R[34]]]],[11,"span",E,E,190,[[["self"]],["span"]]],[11,"into",E,E,190,[[],[U]]],[11,"from",E,E,190,[[[T]],[T]]],[11,R[37],E,E,190,[[["self"]],[T]]],[11,R[38],E,E,190,[[["self"],[T]]]],[11,R[7],E,E,190,[[[U]],[R[2]]]],[11,R[8],E,E,190,[[],[R[2]]]],[11,R[10],E,E,190,[[["self"]],[T]]],[11,R[9],E,E,190,[[["self"]],[T]]],[11,R[11],E,E,190,[[["self"]],[R[34]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"span",E,E,31,[[["self"]],["span"]]],[11,"into",E,E,31,[[],[U]]],[11,R[95],E,E,31,[[["self"]],[R[63]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[37],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"],[T]]]],[11,R[7],E,E,31,[[[U]],[R[2]]]],[11,R[8],E,E,31,[[],[R[2]]]],[11,R[10],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[34]]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"span",E,E,32,[[["self"]],["span"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[37],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"],[T]]]],[11,R[7],E,E,32,[[[U]],[R[2]]]],[11,R[8],E,E,32,[[],[R[2]]]],[11,R[10],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[34]]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"span",E,E,193,[[["self"]],["span"]]],[11,"into",E,E,193,[[],[U]]],[11,"from",E,E,193,[[[T]],[T]]],[11,R[37],E,E,193,[[["self"]],[T]]],[11,R[38],E,E,193,[[["self"],[T]]]],[11,R[7],E,E,193,[[[U]],[R[2]]]],[11,R[8],E,E,193,[[],[R[2]]]],[11,R[10],E,E,193,[[["self"]],[T]]],[11,R[9],E,E,193,[[["self"]],[T]]],[11,R[11],E,E,193,[[["self"]],[R[34]]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"span",E,E,192,[[["self"]],["span"]]],[11,"into",E,E,192,[[],[U]]],[11,"from",E,E,192,[[[T]],[T]]],[11,R[37],E,E,192,[[["self"]],[T]]],[11,R[38],E,E,192,[[["self"],[T]]]],[11,R[7],E,E,192,[[[U]],[R[2]]]],[11,R[8],E,E,192,[[],[R[2]]]],[11,R[10],E,E,192,[[["self"]],[T]]],[11,R[9],E,E,192,[[["self"]],[T]]],[11,R[11],E,E,192,[[["self"]],[R[34]]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"span",E,E,194,[[["self"]],["span"]]],[11,"into",E,E,194,[[],[U]]],[11,"from",E,E,194,[[[T]],[T]]],[11,R[37],E,E,194,[[["self"]],[T]]],[11,R[38],E,E,194,[[["self"],[T]]]],[11,R[7],E,E,194,[[[U]],[R[2]]]],[11,R[8],E,E,194,[[],[R[2]]]],[11,R[10],E,E,194,[[["self"]],[T]]],[11,R[9],E,E,194,[[["self"]],[T]]],[11,R[11],E,E,194,[[["self"]],[R[34]]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"span",E,E,196,[[["self"]],["span"]]],[11,"into",E,E,196,[[],[U]]],[11,"from",E,E,196,[[[T]],[T]]],[11,R[37],E,E,196,[[["self"]],[T]]],[11,R[38],E,E,196,[[["self"],[T]]]],[11,R[7],E,E,196,[[[U]],[R[2]]]],[11,R[8],E,E,196,[[],[R[2]]]],[11,R[10],E,E,196,[[["self"]],[T]]],[11,R[9],E,E,196,[[["self"]],[T]]],[11,R[11],E,E,196,[[["self"]],[R[34]]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"span",E,E,195,[[["self"]],["span"]]],[11,"into",E,E,195,[[],[U]]],[11,"from",E,E,195,[[[T]],[T]]],[11,R[37],E,E,195,[[["self"]],[T]]],[11,R[38],E,E,195,[[["self"],[T]]]],[11,R[7],E,E,195,[[[U]],[R[2]]]],[11,R[8],E,E,195,[[],[R[2]]]],[11,R[10],E,E,195,[[["self"]],[T]]],[11,R[9],E,E,195,[[["self"]],[T]]],[11,R[11],E,E,195,[[["self"]],[R[34]]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"span",E,E,191,[[["self"]],["span"]]],[11,"into",E,E,191,[[],[U]]],[11,"from",E,E,191,[[[T]],[T]]],[11,R[37],E,E,191,[[["self"]],[T]]],[11,R[38],E,E,191,[[["self"],[T]]]],[11,R[7],E,E,191,[[[U]],[R[2]]]],[11,R[8],E,E,191,[[],[R[2]]]],[11,R[10],E,E,191,[[["self"]],[T]]],[11,R[9],E,E,191,[[["self"]],[T]]],[11,R[11],E,E,191,[[["self"]],[R[34]]]],[11,"span",E,E,33,[[["self"]],["span"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[37],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"],[T]]]],[11,R[7],E,E,33,[[[U]],[R[2]]]],[11,R[8],E,E,33,[[],[R[2]]]],[11,R[10],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[T]]],[11,R[11],E,E,33,[[["self"]],[R[34]]]],[11,"span",E,E,34,[[["self"]],["span"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[37],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"],[T]]]],[11,R[7],E,E,34,[[[U]],[R[2]]]],[11,R[8],E,E,34,[[],[R[2]]]],[11,R[10],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[34]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[37],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"],[T]]]],[11,R[7],E,E,35,[[[U]],[R[2]]]],[11,R[8],E,E,35,[[],[R[2]]]],[11,R[10],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[34]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[37],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"],[T]]]],[11,R[7],E,E,36,[[[U]],[R[2]]]],[11,R[8],E,E,36,[[],[R[2]]]],[11,R[10],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[34]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[37],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"],[T]]]],[11,R[7],E,E,37,[[[U]],[R[2]]]],[11,R[8],E,E,37,[[],[R[2]]]],[11,R[10],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[34]]]],[11,"span",E,E,38,[[["self"]],["span"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[37],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"],[T]]]],[11,R[7],E,E,38,[[[U]],[R[2]]]],[11,R[8],E,E,38,[[],[R[2]]]],[11,R[10],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[34]]]],[11,"span",E,E,39,[[["self"]],["span"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[37],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"],[T]]]],[11,R[7],E,E,39,[[[U]],[R[2]]]],[11,R[8],E,E,39,[[],[R[2]]]],[11,R[10],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[34]]]],[11,"span",E,E,40,[[["self"]],["span"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[37],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"],[T]]]],[11,R[7],E,E,40,[[[U]],[R[2]]]],[11,R[8],E,E,40,[[],[R[2]]]],[11,R[10],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[34]]]],[11,"span",E,E,41,[[["self"]],["span"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[37],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"],[T]]]],[11,R[7],E,E,41,[[[U]],[R[2]]]],[11,R[8],E,E,41,[[],[R[2]]]],[11,R[10],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[34]]]],[11,"span",E,E,42,[[["self"]],["span"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[37],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"],[T]]]],[11,R[7],E,E,42,[[[U]],[R[2]]]],[11,R[8],E,E,42,[[],[R[2]]]],[11,R[10],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[34]]]],[11,"span",E,E,43,[[["self"]],["span"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[37],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"],[T]]]],[11,R[7],E,E,43,[[[U]],[R[2]]]],[11,R[8],E,E,43,[[],[R[2]]]],[11,R[10],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[34]]]],[11,"span",E,E,44,[[["self"]],["span"]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[37],E,E,44,[[["self"]],[T]]],[11,R[38],E,E,44,[[["self"],[T]]]],[11,R[7],E,E,44,[[[U]],[R[2]]]],[11,R[8],E,E,44,[[],[R[2]]]],[11,R[10],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[34]]]],[11,"span",E,E,45,[[["self"]],["span"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[37],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"],[T]]]],[11,R[7],E,E,45,[[[U]],[R[2]]]],[11,R[8],E,E,45,[[],[R[2]]]],[11,R[10],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[34]]]],[11,"span",E,E,46,[[["self"]],["span"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[37],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"],[T]]]],[11,R[7],E,E,46,[[[U]],[R[2]]]],[11,R[8],E,E,46,[[],[R[2]]]],[11,R[10],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[34]]]],[11,"span",E,E,47,[[["self"]],["span"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[37],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"],[T]]]],[11,R[7],E,E,47,[[[U]],[R[2]]]],[11,R[8],E,E,47,[[],[R[2]]]],[11,R[10],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[34]]]],[11,"span",E,E,48,[[["self"]],["span"]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[37],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"],[T]]]],[11,R[7],E,E,48,[[[U]],[R[2]]]],[11,R[8],E,E,48,[[],[R[2]]]],[11,R[10],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[34]]]],[11,"span",E,E,49,[[["self"]],["span"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[37],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"],[T]]]],[11,R[7],E,E,49,[[[U]],[R[2]]]],[11,R[8],E,E,49,[[],[R[2]]]],[11,R[10],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[34]]]],[11,"span",E,E,50,[[["self"]],["span"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[37],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"],[T]]]],[11,R[7],E,E,50,[[[U]],[R[2]]]],[11,R[8],E,E,50,[[],[R[2]]]],[11,R[10],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[34]]]],[11,"span",E,E,51,[[["self"]],["span"]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[37],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"],[T]]]],[11,R[7],E,E,51,[[[U]],[R[2]]]],[11,R[8],E,E,51,[[],[R[2]]]],[11,R[10],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[34]]]],[11,"span",E,E,52,[[["self"]],["span"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[37],E,E,52,[[["self"]],[T]]],[11,R[38],E,E,52,[[["self"],[T]]]],[11,R[7],E,E,52,[[[U]],[R[2]]]],[11,R[8],E,E,52,[[],[R[2]]]],[11,R[10],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[34]]]],[11,"span",E,E,53,[[["self"]],["span"]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[37],E,E,53,[[["self"]],[T]]],[11,R[38],E,E,53,[[["self"],[T]]]],[11,R[7],E,E,53,[[[U]],[R[2]]]],[11,R[8],E,E,53,[[],[R[2]]]],[11,R[10],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[34]]]],[11,"span",E,E,54,[[["self"]],["span"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[37],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"],[T]]]],[11,R[7],E,E,54,[[[U]],[R[2]]]],[11,R[8],E,E,54,[[],[R[2]]]],[11,R[10],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[34]]]],[11,"span",E,E,55,[[["self"]],["span"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[37],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"],[T]]]],[11,R[7],E,E,55,[[[U]],[R[2]]]],[11,R[8],E,E,55,[[],[R[2]]]],[11,R[10],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[34]]]],[11,"span",E,E,56,[[["self"]],["span"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[37],E,E,56,[[["self"]],[T]]],[11,R[38],E,E,56,[[["self"],[T]]]],[11,R[7],E,E,56,[[[U]],[R[2]]]],[11,R[8],E,E,56,[[],[R[2]]]],[11,R[10],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[34]]]],[11,"span",E,E,57,[[["self"]],["span"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[37],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"],[T]]]],[11,R[7],E,E,57,[[[U]],[R[2]]]],[11,R[8],E,E,57,[[],[R[2]]]],[11,R[10],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[34]]]],[11,"span",E,E,58,[[["self"]],["span"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[37],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"],[T]]]],[11,R[7],E,E,58,[[[U]],[R[2]]]],[11,R[8],E,E,58,[[],[R[2]]]],[11,R[10],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[34]]]],[11,"span",E,E,59,[[["self"]],["span"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[37],E,E,59,[[["self"]],[T]]],[11,R[38],E,E,59,[[["self"],[T]]]],[11,R[7],E,E,59,[[[U]],[R[2]]]],[11,R[8],E,E,59,[[],[R[2]]]],[11,R[10],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[T]]],[11,R[11],E,E,59,[[["self"]],[R[34]]]],[11,"span",E,E,60,[[["self"]],["span"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[37],E,E,60,[[["self"]],[T]]],[11,R[38],E,E,60,[[["self"],[T]]]],[11,R[7],E,E,60,[[[U]],[R[2]]]],[11,R[8],E,E,60,[[],[R[2]]]],[11,R[10],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[T]]],[11,R[11],E,E,60,[[["self"]],[R[34]]]],[11,"span",E,E,61,[[["self"]],["span"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[37],E,E,61,[[["self"]],[T]]],[11,R[38],E,E,61,[[["self"],[T]]]],[11,R[7],E,E,61,[[[U]],[R[2]]]],[11,R[8],E,E,61,[[],[R[2]]]],[11,R[10],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[T]]],[11,R[11],E,E,61,[[["self"]],[R[34]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[37],E,E,62,[[["self"]],[T]]],[11,R[38],E,E,62,[[["self"],[T]]]],[11,R[7],E,E,62,[[[U]],[R[2]]]],[11,R[8],E,E,62,[[],[R[2]]]],[11,R[10],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[T]]],[11,R[11],E,E,62,[[["self"]],[R[34]]]],[11,"into",E,E,209,[[],[U]]],[11,R[95],E,E,209,[[["self"]],[R[63]]]],[11,"from",E,E,209,[[[T]],[T]]],[11,R[37],E,E,209,[[["self"]],[T]]],[11,R[38],E,E,209,[[["self"],[T]]]],[11,R[7],E,E,209,[[[U]],[R[2]]]],[11,R[8],E,E,209,[[],[R[2]]]],[11,R[10],E,E,209,[[["self"]],[T]]],[11,R[9],E,E,209,[[["self"]],[T]]],[11,R[11],E,E,209,[[["self"]],[R[34]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[37],E,E,63,[[["self"]],[T]]],[11,R[38],E,E,63,[[["self"],[T]]]],[11,R[7],E,E,63,[[[U]],[R[2]]]],[11,R[8],E,E,63,[[],[R[2]]]],[11,R[10],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[T]]],[11,R[11],E,E,63,[[["self"]],[R[34]]]],[11,"span",E,E,64,[[["self"]],["span"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[37],E,E,64,[[["self"]],[T]]],[11,R[38],E,E,64,[[["self"],[T]]]],[11,R[7],E,E,64,[[[U]],[R[2]]]],[11,R[8],E,E,64,[[],[R[2]]]],[11,R[10],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[T]]],[11,R[11],E,E,64,[[["self"]],[R[34]]]],[11,"span",E,E,65,[[["self"]],["span"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[37],E,E,65,[[["self"]],[T]]],[11,R[38],E,E,65,[[["self"],[T]]]],[11,R[7],E,E,65,[[[U]],[R[2]]]],[11,R[8],E,E,65,[[],[R[2]]]],[11,R[10],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[T]]],[11,R[11],E,E,65,[[["self"]],[R[34]]]],[11,"span",E,E,66,[[["self"]],["span"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[37],E,E,66,[[["self"]],[T]]],[11,R[38],E,E,66,[[["self"],[T]]]],[11,R[7],E,E,66,[[[U]],[R[2]]]],[11,R[8],E,E,66,[[],[R[2]]]],[11,R[10],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[T]]],[11,R[11],E,E,66,[[["self"]],[R[34]]]],[11,"span",E,E,67,[[["self"]],["span"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[37],E,E,67,[[["self"]],[T]]],[11,R[38],E,E,67,[[["self"],[T]]]],[11,R[7],E,E,67,[[[U]],[R[2]]]],[11,R[8],E,E,67,[[],[R[2]]]],[11,R[10],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[T]]],[11,R[11],E,E,67,[[["self"]],[R[34]]]],[11,"span",E,E,68,[[["self"]],["span"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[37],E,E,68,[[["self"]],[T]]],[11,R[38],E,E,68,[[["self"],[T]]]],[11,R[7],E,E,68,[[[U]],[R[2]]]],[11,R[8],E,E,68,[[],[R[2]]]],[11,R[10],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[T]]],[11,R[11],E,E,68,[[["self"]],[R[34]]]],[11,"span",E,E,69,[[["self"]],["span"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[37],E,E,69,[[["self"]],[T]]],[11,R[38],E,E,69,[[["self"],[T]]]],[11,R[7],E,E,69,[[[U]],[R[2]]]],[11,R[8],E,E,69,[[],[R[2]]]],[11,R[10],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[T]]],[11,R[11],E,E,69,[[["self"]],[R[34]]]],[11,"span",E,E,70,[[["self"]],["span"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[37],E,E,70,[[["self"]],[T]]],[11,R[38],E,E,70,[[["self"],[T]]]],[11,R[7],E,E,70,[[[U]],[R[2]]]],[11,R[8],E,E,70,[[],[R[2]]]],[11,R[10],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[T]]],[11,R[11],E,E,70,[[["self"]],[R[34]]]],[11,"span",E,E,71,[[["self"]],["span"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[37],E,E,71,[[["self"]],[T]]],[11,R[38],E,E,71,[[["self"],[T]]]],[11,R[7],E,E,71,[[[U]],[R[2]]]],[11,R[8],E,E,71,[[],[R[2]]]],[11,R[10],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[["self"]],[T]]],[11,R[11],E,E,71,[[["self"]],[R[34]]]],[11,"span",E,E,72,[[["self"]],["span"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[37],E,E,72,[[["self"]],[T]]],[11,R[38],E,E,72,[[["self"],[T]]]],[11,R[7],E,E,72,[[[U]],[R[2]]]],[11,R[8],E,E,72,[[],[R[2]]]],[11,R[10],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[T]]],[11,R[11],E,E,72,[[["self"]],[R[34]]]],[11,"span",E,E,73,[[["self"]],["span"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[37],E,E,73,[[["self"]],[T]]],[11,R[38],E,E,73,[[["self"],[T]]]],[11,R[7],E,E,73,[[[U]],[R[2]]]],[11,R[8],E,E,73,[[],[R[2]]]],[11,R[10],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[["self"]],[T]]],[11,R[11],E,E,73,[[["self"]],[R[34]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[37],E,E,74,[[["self"]],[T]]],[11,R[38],E,E,74,[[["self"],[T]]]],[11,R[7],E,E,74,[[[U]],[R[2]]]],[11,R[8],E,E,74,[[],[R[2]]]],[11,R[10],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[T]]],[11,R[11],E,E,74,[[["self"]],[R[34]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[37],E,E,75,[[["self"]],[T]]],[11,R[38],E,E,75,[[["self"],[T]]]],[11,R[7],E,E,75,[[[U]],[R[2]]]],[11,R[8],E,E,75,[[],[R[2]]]],[11,R[10],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[T]]],[11,R[11],E,E,75,[[["self"]],[R[34]]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"span",E,E,76,[[["self"]],["span"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[37],E,E,76,[[["self"]],[T]]],[11,R[38],E,E,76,[[["self"],[T]]]],[11,R[7],E,E,76,[[[U]],[R[2]]]],[11,R[8],E,E,76,[[],[R[2]]]],[11,R[10],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[T]]],[11,R[11],E,E,76,[[["self"]],[R[34]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[37],E,E,77,[[["self"]],[T]]],[11,R[38],E,E,77,[[["self"],[T]]]],[11,R[7],E,E,77,[[[U]],[R[2]]]],[11,R[8],E,E,77,[[],[R[2]]]],[11,R[10],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[T]]],[11,R[11],E,E,77,[[["self"]],[R[34]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[37],E,E,78,[[["self"]],[T]]],[11,R[38],E,E,78,[[["self"],[T]]]],[11,R[7],E,E,78,[[[U]],[R[2]]]],[11,R[8],E,E,78,[[],[R[2]]]],[11,R[10],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[T]]],[11,R[11],E,E,78,[[["self"]],[R[34]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[37],E,E,79,[[["self"]],[T]]],[11,R[38],E,E,79,[[["self"],[T]]]],[11,R[7],E,E,79,[[[U]],[R[2]]]],[11,R[8],E,E,79,[[],[R[2]]]],[11,R[10],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[T]]],[11,R[11],E,E,79,[[["self"]],[R[34]]]],[11,"span",E,E,80,[[["self"]],["span"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[37],E,E,80,[[["self"]],[T]]],[11,R[38],E,E,80,[[["self"],[T]]]],[11,R[7],E,E,80,[[[U]],[R[2]]]],[11,R[8],E,E,80,[[],[R[2]]]],[11,R[10],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[T]]],[11,R[11],E,E,80,[[["self"]],[R[34]]]],[11,"span",E,E,81,[[["self"]],["span"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[37],E,E,81,[[["self"]],[T]]],[11,R[38],E,E,81,[[["self"],[T]]]],[11,R[7],E,E,81,[[[U]],[R[2]]]],[11,R[8],E,E,81,[[],[R[2]]]],[11,R[10],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[T]]],[11,R[11],E,E,81,[[["self"]],[R[34]]]],[11,"span",E,E,82,[[["self"]],["span"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[37],E,E,82,[[["self"]],[T]]],[11,R[38],E,E,82,[[["self"],[T]]]],[11,R[7],E,E,82,[[[U]],[R[2]]]],[11,R[8],E,E,82,[[],[R[2]]]],[11,R[10],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[T]]],[11,R[11],E,E,82,[[["self"]],[R[34]]]],[11,"span",E,E,83,[[["self"]],["span"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[37],E,E,83,[[["self"]],[T]]],[11,R[38],E,E,83,[[["self"],[T]]]],[11,R[7],E,E,83,[[[U]],[R[2]]]],[11,R[8],E,E,83,[[],[R[2]]]],[11,R[10],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[T]]],[11,R[11],E,E,83,[[["self"]],[R[34]]]],[11,"span",E,E,84,[[["self"]],["span"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[37],E,E,84,[[["self"]],[T]]],[11,R[38],E,E,84,[[["self"],[T]]]],[11,R[7],E,E,84,[[[U]],[R[2]]]],[11,R[8],E,E,84,[[],[R[2]]]],[11,R[10],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[T]]],[11,R[11],E,E,84,[[["self"]],[R[34]]]],[11,"span",E,E,85,[[["self"]],["span"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[37],E,E,85,[[["self"]],[T]]],[11,R[38],E,E,85,[[["self"],[T]]]],[11,R[7],E,E,85,[[[U]],[R[2]]]],[11,R[8],E,E,85,[[],[R[2]]]],[11,R[10],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[T]]],[11,R[11],E,E,85,[[["self"]],[R[34]]]],[11,"span",E,E,86,[[["self"]],["span"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[37],E,E,86,[[["self"]],[T]]],[11,R[38],E,E,86,[[["self"],[T]]]],[11,R[7],E,E,86,[[[U]],[R[2]]]],[11,R[8],E,E,86,[[],[R[2]]]],[11,R[10],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[T]]],[11,R[11],E,E,86,[[["self"]],[R[34]]]],[11,"peek",R[1083],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"span",E,E,87,[[["self"]],["span"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[37],E,E,87,[[["self"]],[T]]],[11,R[38],E,E,87,[[["self"],[T]]]],[11,R[7],E,E,87,[[[U]],[R[2]]]],[11,R[8],E,E,87,[[],[R[2]]]],[11,R[10],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[T]]],[11,R[11],E,E,87,[[["self"]],[R[34]]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"span",E,E,88,[[["self"]],["span"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[37],E,E,88,[[["self"]],[T]]],[11,R[38],E,E,88,[[["self"],[T]]]],[11,R[7],E,E,88,[[[U]],[R[2]]]],[11,R[8],E,E,88,[[],[R[2]]]],[11,R[10],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[T]]],[11,R[11],E,E,88,[[["self"]],[R[34]]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"span",E,E,89,[[["self"]],["span"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[37],E,E,89,[[["self"]],[T]]],[11,R[38],E,E,89,[[["self"],[T]]]],[11,R[7],E,E,89,[[[U]],[R[2]]]],[11,R[8],E,E,89,[[],[R[2]]]],[11,R[10],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[T]]],[11,R[11],E,E,89,[[["self"]],[R[34]]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"span",E,E,90,[[["self"]],["span"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[37],E,E,90,[[["self"]],[T]]],[11,R[38],E,E,90,[[["self"],[T]]]],[11,R[7],E,E,90,[[[U]],[R[2]]]],[11,R[8],E,E,90,[[],[R[2]]]],[11,R[10],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[T]]],[11,R[11],E,E,90,[[["self"]],[R[34]]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"span",E,E,91,[[["self"]],["span"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[37],E,E,91,[[["self"]],[T]]],[11,R[38],E,E,91,[[["self"],[T]]]],[11,R[7],E,E,91,[[[U]],[R[2]]]],[11,R[8],E,E,91,[[],[R[2]]]],[11,R[10],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[T]]],[11,R[11],E,E,91,[[["self"]],[R[34]]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"span",E,E,92,[[["self"]],["span"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[37],E,E,92,[[["self"]],[T]]],[11,R[38],E,E,92,[[["self"],[T]]]],[11,R[7],E,E,92,[[[U]],[R[2]]]],[11,R[8],E,E,92,[[],[R[2]]]],[11,R[10],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[T]]],[11,R[11],E,E,92,[[["self"]],[R[34]]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"span",E,E,93,[[["self"]],["span"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[37],E,E,93,[[["self"]],[T]]],[11,R[38],E,E,93,[[["self"],[T]]]],[11,R[7],E,E,93,[[[U]],[R[2]]]],[11,R[8],E,E,93,[[],[R[2]]]],[11,R[10],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[T]]],[11,R[11],E,E,93,[[["self"]],[R[34]]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"span",E,E,94,[[["self"]],["span"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[37],E,E,94,[[["self"]],[T]]],[11,R[38],E,E,94,[[["self"],[T]]]],[11,R[7],E,E,94,[[[U]],[R[2]]]],[11,R[8],E,E,94,[[],[R[2]]]],[11,R[10],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[T]]],[11,R[11],E,E,94,[[["self"]],[R[34]]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"span",E,E,95,[[["self"]],["span"]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[37],E,E,95,[[["self"]],[T]]],[11,R[38],E,E,95,[[["self"],[T]]]],[11,R[7],E,E,95,[[[U]],[R[2]]]],[11,R[8],E,E,95,[[],[R[2]]]],[11,R[10],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[T]]],[11,R[11],E,E,95,[[["self"]],[R[34]]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"span",E,E,96,[[["self"]],["span"]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[37],E,E,96,[[["self"]],[T]]],[11,R[38],E,E,96,[[["self"],[T]]]],[11,R[7],E,E,96,[[[U]],[R[2]]]],[11,R[8],E,E,96,[[],[R[2]]]],[11,R[10],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[["self"]],[T]]],[11,R[11],E,E,96,[[["self"]],[R[34]]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"span",E,E,97,[[["self"]],["span"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[37],E,E,97,[[["self"]],[T]]],[11,R[38],E,E,97,[[["self"],[T]]]],[11,R[7],E,E,97,[[[U]],[R[2]]]],[11,R[8],E,E,97,[[],[R[2]]]],[11,R[10],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[["self"]],[T]]],[11,R[11],E,E,97,[[["self"]],[R[34]]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"span",E,E,98,[[["self"]],["span"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[37],E,E,98,[[["self"]],[T]]],[11,R[38],E,E,98,[[["self"],[T]]]],[11,R[7],E,E,98,[[[U]],[R[2]]]],[11,R[8],E,E,98,[[],[R[2]]]],[11,R[10],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[["self"]],[T]]],[11,R[11],E,E,98,[[["self"]],[R[34]]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"span",E,E,99,[[["self"]],["span"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[37],E,E,99,[[["self"]],[T]]],[11,R[38],E,E,99,[[["self"],[T]]]],[11,R[7],E,E,99,[[[U]],[R[2]]]],[11,R[8],E,E,99,[[],[R[2]]]],[11,R[10],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[["self"]],[T]]],[11,R[11],E,E,99,[[["self"]],[R[34]]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"span",E,E,100,[[["self"]],["span"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[37],E,E,100,[[["self"]],[T]]],[11,R[38],E,E,100,[[["self"],[T]]]],[11,R[7],E,E,100,[[[U]],[R[2]]]],[11,R[8],E,E,100,[[],[R[2]]]],[11,R[10],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[["self"]],[T]]],[11,R[11],E,E,100,[[["self"]],[R[34]]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"span",E,E,101,[[["self"]],["span"]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[37],E,E,101,[[["self"]],[T]]],[11,R[38],E,E,101,[[["self"],[T]]]],[11,R[7],E,E,101,[[[U]],[R[2]]]],[11,R[8],E,E,101,[[],[R[2]]]],[11,R[10],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[["self"]],[T]]],[11,R[11],E,E,101,[[["self"]],[R[34]]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"span",E,E,102,[[["self"]],["span"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[37],E,E,102,[[["self"]],[T]]],[11,R[38],E,E,102,[[["self"],[T]]]],[11,R[7],E,E,102,[[[U]],[R[2]]]],[11,R[8],E,E,102,[[],[R[2]]]],[11,R[10],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[["self"]],[T]]],[11,R[11],E,E,102,[[["self"]],[R[34]]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"span",E,E,103,[[["self"]],["span"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[37],E,E,103,[[["self"]],[T]]],[11,R[38],E,E,103,[[["self"],[T]]]],[11,R[7],E,E,103,[[[U]],[R[2]]]],[11,R[8],E,E,103,[[],[R[2]]]],[11,R[10],E,E,103,[[["self"]],[T]]],[11,R[9],E,E,103,[[["self"]],[T]]],[11,R[11],E,E,103,[[["self"]],[R[34]]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"span",E,E,104,[[["self"]],["span"]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[37],E,E,104,[[["self"]],[T]]],[11,R[38],E,E,104,[[["self"],[T]]]],[11,R[7],E,E,104,[[[U]],[R[2]]]],[11,R[8],E,E,104,[[],[R[2]]]],[11,R[10],E,E,104,[[["self"]],[T]]],[11,R[9],E,E,104,[[["self"]],[T]]],[11,R[11],E,E,104,[[["self"]],[R[34]]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"span",E,E,105,[[["self"]],["span"]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[37],E,E,105,[[["self"]],[T]]],[11,R[38],E,E,105,[[["self"],[T]]]],[11,R[7],E,E,105,[[[U]],[R[2]]]],[11,R[8],E,E,105,[[],[R[2]]]],[11,R[10],E,E,105,[[["self"]],[T]]],[11,R[9],E,E,105,[[["self"]],[T]]],[11,R[11],E,E,105,[[["self"]],[R[34]]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"span",E,E,106,[[["self"]],["span"]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[37],E,E,106,[[["self"]],[T]]],[11,R[38],E,E,106,[[["self"],[T]]]],[11,R[7],E,E,106,[[[U]],[R[2]]]],[11,R[8],E,E,106,[[],[R[2]]]],[11,R[10],E,E,106,[[["self"]],[T]]],[11,R[9],E,E,106,[[["self"]],[T]]],[11,R[11],E,E,106,[[["self"]],[R[34]]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"span",E,E,107,[[["self"]],["span"]]],[11,"into",E,E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[37],E,E,107,[[["self"]],[T]]],[11,R[38],E,E,107,[[["self"],[T]]]],[11,R[7],E,E,107,[[[U]],[R[2]]]],[11,R[8],E,E,107,[[],[R[2]]]],[11,R[10],E,E,107,[[["self"]],[T]]],[11,R[9],E,E,107,[[["self"]],[T]]],[11,R[11],E,E,107,[[["self"]],[R[34]]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"span",E,E,108,[[["self"]],["span"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[37],E,E,108,[[["self"]],[T]]],[11,R[38],E,E,108,[[["self"],[T]]]],[11,R[7],E,E,108,[[[U]],[R[2]]]],[11,R[8],E,E,108,[[],[R[2]]]],[11,R[10],E,E,108,[[["self"]],[T]]],[11,R[9],E,E,108,[[["self"]],[T]]],[11,R[11],E,E,108,[[["self"]],[R[34]]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"span",E,E,109,[[["self"]],["span"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[37],E,E,109,[[["self"]],[T]]],[11,R[38],E,E,109,[[["self"],[T]]]],[11,R[7],E,E,109,[[[U]],[R[2]]]],[11,R[8],E,E,109,[[],[R[2]]]],[11,R[10],E,E,109,[[["self"]],[T]]],[11,R[9],E,E,109,[[["self"]],[T]]],[11,R[11],E,E,109,[[["self"]],[R[34]]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"span",E,E,110,[[["self"]],["span"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[37],E,E,110,[[["self"]],[T]]],[11,R[38],E,E,110,[[["self"],[T]]]],[11,R[7],E,E,110,[[[U]],[R[2]]]],[11,R[8],E,E,110,[[],[R[2]]]],[11,R[10],E,E,110,[[["self"]],[T]]],[11,R[9],E,E,110,[[["self"]],[T]]],[11,R[11],E,E,110,[[["self"]],[R[34]]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"span",E,E,111,[[["self"]],["span"]]],[11,"into",E,E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[37],E,E,111,[[["self"]],[T]]],[11,R[38],E,E,111,[[["self"],[T]]]],[11,R[7],E,E,111,[[[U]],[R[2]]]],[11,R[8],E,E,111,[[],[R[2]]]],[11,R[10],E,E,111,[[["self"]],[T]]],[11,R[9],E,E,111,[[["self"]],[T]]],[11,R[11],E,E,111,[[["self"]],[R[34]]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"span",E,E,112,[[["self"]],["span"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[37],E,E,112,[[["self"]],[T]]],[11,R[38],E,E,112,[[["self"],[T]]]],[11,R[7],E,E,112,[[[U]],[R[2]]]],[11,R[8],E,E,112,[[],[R[2]]]],[11,R[10],E,E,112,[[["self"]],[T]]],[11,R[9],E,E,112,[[["self"]],[T]]],[11,R[11],E,E,112,[[["self"]],[R[34]]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"span",E,E,113,[[["self"]],["span"]]],[11,"into",E,E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[37],E,E,113,[[["self"]],[T]]],[11,R[38],E,E,113,[[["self"],[T]]]],[11,R[7],E,E,113,[[[U]],[R[2]]]],[11,R[8],E,E,113,[[],[R[2]]]],[11,R[10],E,E,113,[[["self"]],[T]]],[11,R[9],E,E,113,[[["self"]],[T]]],[11,R[11],E,E,113,[[["self"]],[R[34]]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"span",E,E,114,[[["self"]],["span"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[37],E,E,114,[[["self"]],[T]]],[11,R[38],E,E,114,[[["self"],[T]]]],[11,R[7],E,E,114,[[[U]],[R[2]]]],[11,R[8],E,E,114,[[],[R[2]]]],[11,R[10],E,E,114,[[["self"]],[T]]],[11,R[9],E,E,114,[[["self"]],[T]]],[11,R[11],E,E,114,[[["self"]],[R[34]]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"span",E,E,115,[[["self"]],["span"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[37],E,E,115,[[["self"]],[T]]],[11,R[38],E,E,115,[[["self"],[T]]]],[11,R[7],E,E,115,[[[U]],[R[2]]]],[11,R[8],E,E,115,[[],[R[2]]]],[11,R[10],E,E,115,[[["self"]],[T]]],[11,R[9],E,E,115,[[["self"]],[T]]],[11,R[11],E,E,115,[[["self"]],[R[34]]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"span",E,E,116,[[["self"]],["span"]]],[11,"into",E,E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[37],E,E,116,[[["self"]],[T]]],[11,R[38],E,E,116,[[["self"],[T]]]],[11,R[7],E,E,116,[[[U]],[R[2]]]],[11,R[8],E,E,116,[[],[R[2]]]],[11,R[10],E,E,116,[[["self"]],[T]]],[11,R[9],E,E,116,[[["self"]],[T]]],[11,R[11],E,E,116,[[["self"]],[R[34]]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"span",E,E,117,[[["self"]],["span"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[37],E,E,117,[[["self"]],[T]]],[11,R[38],E,E,117,[[["self"],[T]]]],[11,R[7],E,E,117,[[[U]],[R[2]]]],[11,R[8],E,E,117,[[],[R[2]]]],[11,R[10],E,E,117,[[["self"]],[T]]],[11,R[9],E,E,117,[[["self"]],[T]]],[11,R[11],E,E,117,[[["self"]],[R[34]]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"span",E,E,118,[[["self"]],["span"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[37],E,E,118,[[["self"]],[T]]],[11,R[38],E,E,118,[[["self"],[T]]]],[11,R[7],E,E,118,[[[U]],[R[2]]]],[11,R[8],E,E,118,[[],[R[2]]]],[11,R[10],E,E,118,[[["self"]],[T]]],[11,R[9],E,E,118,[[["self"]],[T]]],[11,R[11],E,E,118,[[["self"]],[R[34]]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"span",E,E,119,[[["self"]],["span"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[37],E,E,119,[[["self"]],[T]]],[11,R[38],E,E,119,[[["self"],[T]]]],[11,R[7],E,E,119,[[[U]],[R[2]]]],[11,R[8],E,E,119,[[],[R[2]]]],[11,R[10],E,E,119,[[["self"]],[T]]],[11,R[9],E,E,119,[[["self"]],[T]]],[11,R[11],E,E,119,[[["self"]],[R[34]]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"span",E,E,120,[[["self"]],["span"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[37],E,E,120,[[["self"]],[T]]],[11,R[38],E,E,120,[[["self"],[T]]]],[11,R[7],E,E,120,[[[U]],[R[2]]]],[11,R[8],E,E,120,[[],[R[2]]]],[11,R[10],E,E,120,[[["self"]],[T]]],[11,R[9],E,E,120,[[["self"]],[T]]],[11,R[11],E,E,120,[[["self"]],[R[34]]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"span",E,E,121,[[["self"]],["span"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[37],E,E,121,[[["self"]],[T]]],[11,R[38],E,E,121,[[["self"],[T]]]],[11,R[7],E,E,121,[[[U]],[R[2]]]],[11,R[8],E,E,121,[[],[R[2]]]],[11,R[10],E,E,121,[[["self"]],[T]]],[11,R[9],E,E,121,[[["self"]],[T]]],[11,R[11],E,E,121,[[["self"]],[R[34]]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"span",E,E,122,[[["self"]],["span"]]],[11,"into",E,E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[37],E,E,122,[[["self"]],[T]]],[11,R[38],E,E,122,[[["self"],[T]]]],[11,R[7],E,E,122,[[[U]],[R[2]]]],[11,R[8],E,E,122,[[],[R[2]]]],[11,R[10],E,E,122,[[["self"]],[T]]],[11,R[9],E,E,122,[[["self"]],[T]]],[11,R[11],E,E,122,[[["self"]],[R[34]]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"span",E,E,123,[[["self"]],["span"]]],[11,"into",E,E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[37],E,E,123,[[["self"]],[T]]],[11,R[38],E,E,123,[[["self"],[T]]]],[11,R[7],E,E,123,[[[U]],[R[2]]]],[11,R[8],E,E,123,[[],[R[2]]]],[11,R[10],E,E,123,[[["self"]],[T]]],[11,R[9],E,E,123,[[["self"]],[T]]],[11,R[11],E,E,123,[[["self"]],[R[34]]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"span",E,E,124,[[["self"]],["span"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[37],E,E,124,[[["self"]],[T]]],[11,R[38],E,E,124,[[["self"],[T]]]],[11,R[7],E,E,124,[[[U]],[R[2]]]],[11,R[8],E,E,124,[[],[R[2]]]],[11,R[10],E,E,124,[[["self"]],[T]]],[11,R[9],E,E,124,[[["self"]],[T]]],[11,R[11],E,E,124,[[["self"]],[R[34]]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"span",E,E,125,[[["self"]],["span"]]],[11,"into",E,E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[37],E,E,125,[[["self"]],[T]]],[11,R[38],E,E,125,[[["self"],[T]]]],[11,R[7],E,E,125,[[[U]],[R[2]]]],[11,R[8],E,E,125,[[],[R[2]]]],[11,R[10],E,E,125,[[["self"]],[T]]],[11,R[9],E,E,125,[[["self"]],[T]]],[11,R[11],E,E,125,[[["self"]],[R[34]]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"span",E,E,126,[[["self"]],["span"]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[37],E,E,126,[[["self"]],[T]]],[11,R[38],E,E,126,[[["self"],[T]]]],[11,R[7],E,E,126,[[[U]],[R[2]]]],[11,R[8],E,E,126,[[],[R[2]]]],[11,R[10],E,E,126,[[["self"]],[T]]],[11,R[9],E,E,126,[[["self"]],[T]]],[11,R[11],E,E,126,[[["self"]],[R[34]]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"span",E,E,127,[[["self"]],["span"]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[37],E,E,127,[[["self"]],[T]]],[11,R[38],E,E,127,[[["self"],[T]]]],[11,R[7],E,E,127,[[[U]],[R[2]]]],[11,R[8],E,E,127,[[],[R[2]]]],[11,R[10],E,E,127,[[["self"]],[T]]],[11,R[9],E,E,127,[[["self"]],[T]]],[11,R[11],E,E,127,[[["self"]],[R[34]]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"span",E,E,128,[[["self"]],["span"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[37],E,E,128,[[["self"]],[T]]],[11,R[38],E,E,128,[[["self"],[T]]]],[11,R[7],E,E,128,[[[U]],[R[2]]]],[11,R[8],E,E,128,[[],[R[2]]]],[11,R[10],E,E,128,[[["self"]],[T]]],[11,R[9],E,E,128,[[["self"]],[T]]],[11,R[11],E,E,128,[[["self"]],[R[34]]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"span",E,E,129,[[["self"]],["span"]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[37],E,E,129,[[["self"]],[T]]],[11,R[38],E,E,129,[[["self"],[T]]]],[11,R[7],E,E,129,[[[U]],[R[2]]]],[11,R[8],E,E,129,[[],[R[2]]]],[11,R[10],E,E,129,[[["self"]],[T]]],[11,R[9],E,E,129,[[["self"]],[T]]],[11,R[11],E,E,129,[[["self"]],[R[34]]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"span",E,E,130,[[["self"]],["span"]]],[11,"into",E,E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[37],E,E,130,[[["self"]],[T]]],[11,R[38],E,E,130,[[["self"],[T]]]],[11,R[7],E,E,130,[[[U]],[R[2]]]],[11,R[8],E,E,130,[[],[R[2]]]],[11,R[10],E,E,130,[[["self"]],[T]]],[11,R[9],E,E,130,[[["self"]],[T]]],[11,R[11],E,E,130,[[["self"]],[R[34]]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"span",E,E,131,[[["self"]],["span"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[37],E,E,131,[[["self"]],[T]]],[11,R[38],E,E,131,[[["self"],[T]]]],[11,R[7],E,E,131,[[[U]],[R[2]]]],[11,R[8],E,E,131,[[],[R[2]]]],[11,R[10],E,E,131,[[["self"]],[T]]],[11,R[9],E,E,131,[[["self"]],[T]]],[11,R[11],E,E,131,[[["self"]],[R[34]]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"span",E,E,132,[[["self"]],["span"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[37],E,E,132,[[["self"]],[T]]],[11,R[38],E,E,132,[[["self"],[T]]]],[11,R[7],E,E,132,[[[U]],[R[2]]]],[11,R[8],E,E,132,[[],[R[2]]]],[11,R[10],E,E,132,[[["self"]],[T]]],[11,R[9],E,E,132,[[["self"]],[T]]],[11,R[11],E,E,132,[[["self"]],[R[34]]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"span",E,E,133,[[["self"]],["span"]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[37],E,E,133,[[["self"]],[T]]],[11,R[38],E,E,133,[[["self"],[T]]]],[11,R[7],E,E,133,[[[U]],[R[2]]]],[11,R[8],E,E,133,[[],[R[2]]]],[11,R[10],E,E,133,[[["self"]],[T]]],[11,R[9],E,E,133,[[["self"]],[T]]],[11,R[11],E,E,133,[[["self"]],[R[34]]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"span",E,E,134,[[["self"]],["span"]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[37],E,E,134,[[["self"]],[T]]],[11,R[38],E,E,134,[[["self"],[T]]]],[11,R[7],E,E,134,[[[U]],[R[2]]]],[11,R[8],E,E,134,[[],[R[2]]]],[11,R[10],E,E,134,[[["self"]],[T]]],[11,R[9],E,E,134,[[["self"]],[T]]],[11,R[11],E,E,134,[[["self"]],[R[34]]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"span",E,E,135,[[["self"]],["span"]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[37],E,E,135,[[["self"]],[T]]],[11,R[38],E,E,135,[[["self"],[T]]]],[11,R[7],E,E,135,[[[U]],[R[2]]]],[11,R[8],E,E,135,[[],[R[2]]]],[11,R[10],E,E,135,[[["self"]],[T]]],[11,R[9],E,E,135,[[["self"]],[T]]],[11,R[11],E,E,135,[[["self"]],[R[34]]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"span",E,E,136,[[["self"]],["span"]]],[11,"into",E,E,136,[[],[U]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[37],E,E,136,[[["self"]],[T]]],[11,R[38],E,E,136,[[["self"],[T]]]],[11,R[7],E,E,136,[[[U]],[R[2]]]],[11,R[8],E,E,136,[[],[R[2]]]],[11,R[10],E,E,136,[[["self"]],[T]]],[11,R[9],E,E,136,[[["self"]],[T]]],[11,R[11],E,E,136,[[["self"]],[R[34]]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"span",E,E,137,[[["self"]],["span"]]],[11,"into",E,E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[37],E,E,137,[[["self"]],[T]]],[11,R[38],E,E,137,[[["self"],[T]]]],[11,R[7],E,E,137,[[[U]],[R[2]]]],[11,R[8],E,E,137,[[],[R[2]]]],[11,R[10],E,E,137,[[["self"]],[T]]],[11,R[9],E,E,137,[[["self"]],[T]]],[11,R[11],E,E,137,[[["self"]],[R[34]]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"span",E,E,138,[[["self"]],["span"]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[37],E,E,138,[[["self"]],[T]]],[11,R[38],E,E,138,[[["self"],[T]]]],[11,R[7],E,E,138,[[[U]],[R[2]]]],[11,R[8],E,E,138,[[],[R[2]]]],[11,R[10],E,E,138,[[["self"]],[T]]],[11,R[9],E,E,138,[[["self"]],[T]]],[11,R[11],E,E,138,[[["self"]],[R[34]]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"span",E,E,139,[[["self"]],["span"]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[37],E,E,139,[[["self"]],[T]]],[11,R[38],E,E,139,[[["self"],[T]]]],[11,R[7],E,E,139,[[[U]],[R[2]]]],[11,R[8],E,E,139,[[],[R[2]]]],[11,R[10],E,E,139,[[["self"]],[T]]],[11,R[9],E,E,139,[[["self"]],[T]]],[11,R[11],E,E,139,[[["self"]],[R[34]]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"span",E,E,140,[[["self"]],["span"]]],[11,"into",E,E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[37],E,E,140,[[["self"]],[T]]],[11,R[38],E,E,140,[[["self"],[T]]]],[11,R[7],E,E,140,[[[U]],[R[2]]]],[11,R[8],E,E,140,[[],[R[2]]]],[11,R[10],E,E,140,[[["self"]],[T]]],[11,R[9],E,E,140,[[["self"]],[T]]],[11,R[11],E,E,140,[[["self"]],[R[34]]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"span",E,E,141,[[["self"]],["span"]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[37],E,E,141,[[["self"]],[T]]],[11,R[38],E,E,141,[[["self"],[T]]]],[11,R[7],E,E,141,[[[U]],[R[2]]]],[11,R[8],E,E,141,[[],[R[2]]]],[11,R[10],E,E,141,[[["self"]],[T]]],[11,R[9],E,E,141,[[["self"]],[T]]],[11,R[11],E,E,141,[[["self"]],[R[34]]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"span",E,E,142,[[["self"]],["span"]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[37],E,E,142,[[["self"]],[T]]],[11,R[38],E,E,142,[[["self"],[T]]]],[11,R[7],E,E,142,[[[U]],[R[2]]]],[11,R[8],E,E,142,[[],[R[2]]]],[11,R[10],E,E,142,[[["self"]],[T]]],[11,R[9],E,E,142,[[["self"]],[T]]],[11,R[11],E,E,142,[[["self"]],[R[34]]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"span",E,E,143,[[["self"]],["span"]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[37],E,E,143,[[["self"]],[T]]],[11,R[38],E,E,143,[[["self"],[T]]]],[11,R[7],E,E,143,[[[U]],[R[2]]]],[11,R[8],E,E,143,[[],[R[2]]]],[11,R[10],E,E,143,[[["self"]],[T]]],[11,R[9],E,E,143,[[["self"]],[T]]],[11,R[11],E,E,143,[[["self"]],[R[34]]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"span",E,E,144,[[["self"]],["span"]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[37],E,E,144,[[["self"]],[T]]],[11,R[38],E,E,144,[[["self"],[T]]]],[11,R[7],E,E,144,[[[U]],[R[2]]]],[11,R[8],E,E,144,[[],[R[2]]]],[11,R[10],E,E,144,[[["self"]],[T]]],[11,R[9],E,E,144,[[["self"]],[T]]],[11,R[11],E,E,144,[[["self"]],[R[34]]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"span",E,E,145,[[["self"]],["span"]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[37],E,E,145,[[["self"]],[T]]],[11,R[38],E,E,145,[[["self"],[T]]]],[11,R[7],E,E,145,[[[U]],[R[2]]]],[11,R[8],E,E,145,[[],[R[2]]]],[11,R[10],E,E,145,[[["self"]],[T]]],[11,R[9],E,E,145,[[["self"]],[T]]],[11,R[11],E,E,145,[[["self"]],[R[34]]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"span",E,E,146,[[["self"]],["span"]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[37],E,E,146,[[["self"]],[T]]],[11,R[38],E,E,146,[[["self"],[T]]]],[11,R[7],E,E,146,[[[U]],[R[2]]]],[11,R[8],E,E,146,[[],[R[2]]]],[11,R[10],E,E,146,[[["self"]],[T]]],[11,R[9],E,E,146,[[["self"]],[T]]],[11,R[11],E,E,146,[[["self"]],[R[34]]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"span",E,E,147,[[["self"]],["span"]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[37],E,E,147,[[["self"]],[T]]],[11,R[38],E,E,147,[[["self"],[T]]]],[11,R[7],E,E,147,[[[U]],[R[2]]]],[11,R[8],E,E,147,[[],[R[2]]]],[11,R[10],E,E,147,[[["self"]],[T]]],[11,R[9],E,E,147,[[["self"]],[T]]],[11,R[11],E,E,147,[[["self"]],[R[34]]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"span",E,E,148,[[["self"]],["span"]]],[11,"into",E,E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[37],E,E,148,[[["self"]],[T]]],[11,R[38],E,E,148,[[["self"],[T]]]],[11,R[7],E,E,148,[[[U]],[R[2]]]],[11,R[8],E,E,148,[[],[R[2]]]],[11,R[10],E,E,148,[[["self"]],[T]]],[11,R[9],E,E,148,[[["self"]],[T]]],[11,R[11],E,E,148,[[["self"]],[R[34]]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"span",E,E,149,[[["self"]],["span"]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[37],E,E,149,[[["self"]],[T]]],[11,R[38],E,E,149,[[["self"],[T]]]],[11,R[7],E,E,149,[[[U]],[R[2]]]],[11,R[8],E,E,149,[[],[R[2]]]],[11,R[10],E,E,149,[[["self"]],[T]]],[11,R[9],E,E,149,[[["self"]],[T]]],[11,R[11],E,E,149,[[["self"]],[R[34]]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"span",E,E,150,[[["self"]],["span"]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[37],E,E,150,[[["self"]],[T]]],[11,R[38],E,E,150,[[["self"],[T]]]],[11,R[7],E,E,150,[[[U]],[R[2]]]],[11,R[8],E,E,150,[[],[R[2]]]],[11,R[10],E,E,150,[[["self"]],[T]]],[11,R[9],E,E,150,[[["self"]],[T]]],[11,R[11],E,E,150,[[["self"]],[R[34]]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"span",E,E,151,[[["self"]],["span"]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[37],E,E,151,[[["self"]],[T]]],[11,R[38],E,E,151,[[["self"],[T]]]],[11,R[7],E,E,151,[[[U]],[R[2]]]],[11,R[8],E,E,151,[[],[R[2]]]],[11,R[10],E,E,151,[[["self"]],[T]]],[11,R[9],E,E,151,[[["self"]],[T]]],[11,R[11],E,E,151,[[["self"]],[R[34]]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"span",E,E,152,[[["self"]],["span"]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[37],E,E,152,[[["self"]],[T]]],[11,R[38],E,E,152,[[["self"],[T]]]],[11,R[7],E,E,152,[[[U]],[R[2]]]],[11,R[8],E,E,152,[[],[R[2]]]],[11,R[10],E,E,152,[[["self"]],[T]]],[11,R[9],E,E,152,[[["self"]],[T]]],[11,R[11],E,E,152,[[["self"]],[R[34]]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"span",E,E,153,[[["self"]],["span"]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[37],E,E,153,[[["self"]],[T]]],[11,R[38],E,E,153,[[["self"],[T]]]],[11,R[7],E,E,153,[[[U]],[R[2]]]],[11,R[8],E,E,153,[[],[R[2]]]],[11,R[10],E,E,153,[[["self"]],[T]]],[11,R[9],E,E,153,[[["self"]],[T]]],[11,R[11],E,E,153,[[["self"]],[R[34]]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"span",E,E,154,[[["self"]],["span"]]],[11,"into",E,E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[37],E,E,154,[[["self"]],[T]]],[11,R[38],E,E,154,[[["self"],[T]]]],[11,R[7],E,E,154,[[[U]],[R[2]]]],[11,R[8],E,E,154,[[],[R[2]]]],[11,R[10],E,E,154,[[["self"]],[T]]],[11,R[9],E,E,154,[[["self"]],[T]]],[11,R[11],E,E,154,[[["self"]],[R[34]]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"span",E,E,155,[[["self"]],["span"]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[37],E,E,155,[[["self"]],[T]]],[11,R[38],E,E,155,[[["self"],[T]]]],[11,R[7],E,E,155,[[[U]],[R[2]]]],[11,R[8],E,E,155,[[],[R[2]]]],[11,R[10],E,E,155,[[["self"]],[T]]],[11,R[9],E,E,155,[[["self"]],[T]]],[11,R[11],E,E,155,[[["self"]],[R[34]]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"span",E,E,156,[[["self"]],["span"]]],[11,"into",E,E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[37],E,E,156,[[["self"]],[T]]],[11,R[38],E,E,156,[[["self"],[T]]]],[11,R[7],E,E,156,[[[U]],[R[2]]]],[11,R[8],E,E,156,[[],[R[2]]]],[11,R[10],E,E,156,[[["self"]],[T]]],[11,R[9],E,E,156,[[["self"]],[T]]],[11,R[11],E,E,156,[[["self"]],[R[34]]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"span",E,E,157,[[["self"]],["span"]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[37],E,E,157,[[["self"]],[T]]],[11,R[38],E,E,157,[[["self"],[T]]]],[11,R[7],E,E,157,[[[U]],[R[2]]]],[11,R[8],E,E,157,[[],[R[2]]]],[11,R[10],E,E,157,[[["self"]],[T]]],[11,R[9],E,E,157,[[["self"]],[T]]],[11,R[11],E,E,157,[[["self"]],[R[34]]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"span",E,E,158,[[["self"]],["span"]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[37],E,E,158,[[["self"]],[T]]],[11,R[38],E,E,158,[[["self"],[T]]]],[11,R[7],E,E,158,[[[U]],[R[2]]]],[11,R[8],E,E,158,[[],[R[2]]]],[11,R[10],E,E,158,[[["self"]],[T]]],[11,R[9],E,E,158,[[["self"]],[T]]],[11,R[11],E,E,158,[[["self"]],[R[34]]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"span",E,E,159,[[["self"]],["span"]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[37],E,E,159,[[["self"]],[T]]],[11,R[38],E,E,159,[[["self"],[T]]]],[11,R[7],E,E,159,[[[U]],[R[2]]]],[11,R[8],E,E,159,[[],[R[2]]]],[11,R[10],E,E,159,[[["self"]],[T]]],[11,R[9],E,E,159,[[["self"]],[T]]],[11,R[11],E,E,159,[[["self"]],[R[34]]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"span",E,E,160,[[["self"]],["span"]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[37],E,E,160,[[["self"]],[T]]],[11,R[38],E,E,160,[[["self"],[T]]]],[11,R[7],E,E,160,[[[U]],[R[2]]]],[11,R[8],E,E,160,[[],[R[2]]]],[11,R[10],E,E,160,[[["self"]],[T]]],[11,R[9],E,E,160,[[["self"]],[T]]],[11,R[11],E,E,160,[[["self"]],[R[34]]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"span",E,E,161,[[["self"]],["span"]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[37],E,E,161,[[["self"]],[T]]],[11,R[38],E,E,161,[[["self"],[T]]]],[11,R[7],E,E,161,[[[U]],[R[2]]]],[11,R[8],E,E,161,[[],[R[2]]]],[11,R[10],E,E,161,[[["self"]],[T]]],[11,R[9],E,E,161,[[["self"]],[T]]],[11,R[11],E,E,161,[[["self"]],[R[34]]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"span",E,E,162,[[["self"]],["span"]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[37],E,E,162,[[["self"]],[T]]],[11,R[38],E,E,162,[[["self"],[T]]]],[11,R[7],E,E,162,[[[U]],[R[2]]]],[11,R[8],E,E,162,[[],[R[2]]]],[11,R[10],E,E,162,[[["self"]],[T]]],[11,R[9],E,E,162,[[["self"]],[T]]],[11,R[11],E,E,162,[[["self"]],[R[34]]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"span",E,E,163,[[["self"]],["span"]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[37],E,E,163,[[["self"]],[T]]],[11,R[38],E,E,163,[[["self"],[T]]]],[11,R[7],E,E,163,[[[U]],[R[2]]]],[11,R[8],E,E,163,[[],[R[2]]]],[11,R[10],E,E,163,[[["self"]],[T]]],[11,R[9],E,E,163,[[["self"]],[T]]],[11,R[11],E,E,163,[[["self"]],[R[34]]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"span",E,E,164,[[["self"]],["span"]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[37],E,E,164,[[["self"]],[T]]],[11,R[38],E,E,164,[[["self"],[T]]]],[11,R[7],E,E,164,[[[U]],[R[2]]]],[11,R[8],E,E,164,[[],[R[2]]]],[11,R[10],E,E,164,[[["self"]],[T]]],[11,R[9],E,E,164,[[["self"]],[T]]],[11,R[11],E,E,164,[[["self"]],[R[34]]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"span",E,E,165,[[["self"]],["span"]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[37],E,E,165,[[["self"]],[T]]],[11,R[38],E,E,165,[[["self"],[T]]]],[11,R[7],E,E,165,[[[U]],[R[2]]]],[11,R[8],E,E,165,[[],[R[2]]]],[11,R[10],E,E,165,[[["self"]],[T]]],[11,R[9],E,E,165,[[["self"]],[T]]],[11,R[11],E,E,165,[[["self"]],[R[34]]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"span",E,E,166,[[["self"]],["span"]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[37],E,E,166,[[["self"]],[T]]],[11,R[38],E,E,166,[[["self"],[T]]]],[11,R[7],E,E,166,[[[U]],[R[2]]]],[11,R[8],E,E,166,[[],[R[2]]]],[11,R[10],E,E,166,[[["self"]],[T]]],[11,R[9],E,E,166,[[["self"]],[T]]],[11,R[11],E,E,166,[[["self"]],[R[34]]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"span",E,E,167,[[["self"]],["span"]]],[11,"into",E,E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[37],E,E,167,[[["self"]],[T]]],[11,R[38],E,E,167,[[["self"],[T]]]],[11,R[7],E,E,167,[[[U]],[R[2]]]],[11,R[8],E,E,167,[[],[R[2]]]],[11,R[10],E,E,167,[[["self"]],[T]]],[11,R[9],E,E,167,[[["self"]],[T]]],[11,R[11],E,E,167,[[["self"]],[R[34]]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"span",E,E,168,[[["self"]],["span"]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[37],E,E,168,[[["self"]],[T]]],[11,R[38],E,E,168,[[["self"],[T]]]],[11,R[7],E,E,168,[[[U]],[R[2]]]],[11,R[8],E,E,168,[[],[R[2]]]],[11,R[10],E,E,168,[[["self"]],[T]]],[11,R[9],E,E,168,[[["self"]],[T]]],[11,R[11],E,E,168,[[["self"]],[R[34]]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"span",E,E,169,[[["self"]],["span"]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[37],E,E,169,[[["self"]],[T]]],[11,R[38],E,E,169,[[["self"],[T]]]],[11,R[7],E,E,169,[[[U]],[R[2]]]],[11,R[8],E,E,169,[[],[R[2]]]],[11,R[10],E,E,169,[[["self"]],[T]]],[11,R[9],E,E,169,[[["self"]],[T]]],[11,R[11],E,E,169,[[["self"]],[R[34]]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"span",E,E,170,[[["self"]],["span"]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[37],E,E,170,[[["self"]],[T]]],[11,R[38],E,E,170,[[["self"],[T]]]],[11,R[7],E,E,170,[[[U]],[R[2]]]],[11,R[8],E,E,170,[[],[R[2]]]],[11,R[10],E,E,170,[[["self"]],[T]]],[11,R[9],E,E,170,[[["self"]],[T]]],[11,R[11],E,E,170,[[["self"]],[R[34]]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"span",E,E,171,[[["self"]],["span"]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[37],E,E,171,[[["self"]],[T]]],[11,R[38],E,E,171,[[["self"],[T]]]],[11,R[7],E,E,171,[[[U]],[R[2]]]],[11,R[8],E,E,171,[[],[R[2]]]],[11,R[10],E,E,171,[[["self"]],[T]]],[11,R[9],E,E,171,[[["self"]],[T]]],[11,R[11],E,E,171,[[["self"]],[R[34]]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"span",E,E,172,[[["self"]],["span"]]],[11,"into",E,E,172,[[],[U]]],[11,"from",E,E,172,[[[T]],[T]]],[11,R[37],E,E,172,[[["self"]],[T]]],[11,R[38],E,E,172,[[["self"],[T]]]],[11,R[7],E,E,172,[[[U]],[R[2]]]],[11,R[8],E,E,172,[[],[R[2]]]],[11,R[10],E,E,172,[[["self"]],[T]]],[11,R[9],E,E,172,[[["self"]],[T]]],[11,R[11],E,E,172,[[["self"]],[R[34]]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"span",E,E,173,[[["self"]],["span"]]],[11,"into",E,E,173,[[],[U]]],[11,"from",E,E,173,[[[T]],[T]]],[11,R[37],E,E,173,[[["self"]],[T]]],[11,R[38],E,E,173,[[["self"],[T]]]],[11,R[7],E,E,173,[[[U]],[R[2]]]],[11,R[8],E,E,173,[[],[R[2]]]],[11,R[10],E,E,173,[[["self"]],[T]]],[11,R[9],E,E,173,[[["self"]],[T]]],[11,R[11],E,E,173,[[["self"]],[R[34]]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"span",E,E,174,[[["self"]],["span"]]],[11,"into",E,E,174,[[],[U]]],[11,"from",E,E,174,[[[T]],[T]]],[11,R[37],E,E,174,[[["self"]],[T]]],[11,R[38],E,E,174,[[["self"],[T]]]],[11,R[7],E,E,174,[[[U]],[R[2]]]],[11,R[8],E,E,174,[[],[R[2]]]],[11,R[10],E,E,174,[[["self"]],[T]]],[11,R[9],E,E,174,[[["self"]],[T]]],[11,R[11],E,E,174,[[["self"]],[R[34]]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"span",E,E,175,[[["self"]],["span"]]],[11,"into",E,E,175,[[],[U]]],[11,"from",E,E,175,[[[T]],[T]]],[11,R[37],E,E,175,[[["self"]],[T]]],[11,R[38],E,E,175,[[["self"],[T]]]],[11,R[7],E,E,175,[[[U]],[R[2]]]],[11,R[8],E,E,175,[[],[R[2]]]],[11,R[10],E,E,175,[[["self"]],[T]]],[11,R[9],E,E,175,[[["self"]],[T]]],[11,R[11],E,E,175,[[["self"]],[R[34]]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"span",E,E,176,[[["self"]],["span"]]],[11,"into",E,E,176,[[],[U]]],[11,"from",E,E,176,[[[T]],[T]]],[11,R[37],E,E,176,[[["self"]],[T]]],[11,R[38],E,E,176,[[["self"],[T]]]],[11,R[7],E,E,176,[[[U]],[R[2]]]],[11,R[8],E,E,176,[[],[R[2]]]],[11,R[10],E,E,176,[[["self"]],[T]]],[11,R[9],E,E,176,[[["self"]],[T]]],[11,R[11],E,E,176,[[["self"]],[R[34]]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"span",E,E,177,[[["self"]],["span"]]],[11,"into",E,E,177,[[],[U]]],[11,"from",E,E,177,[[[T]],[T]]],[11,R[37],E,E,177,[[["self"]],[T]]],[11,R[38],E,E,177,[[["self"],[T]]]],[11,R[7],E,E,177,[[[U]],[R[2]]]],[11,R[8],E,E,177,[[],[R[2]]]],[11,R[10],E,E,177,[[["self"]],[T]]],[11,R[9],E,E,177,[[["self"]],[T]]],[11,R[11],E,E,177,[[["self"]],[R[34]]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"span",E,E,178,[[["self"]],["span"]]],[11,"into",E,E,178,[[],[U]]],[11,"from",E,E,178,[[[T]],[T]]],[11,R[37],E,E,178,[[["self"]],[T]]],[11,R[38],E,E,178,[[["self"],[T]]]],[11,R[7],E,E,178,[[[U]],[R[2]]]],[11,R[8],E,E,178,[[],[R[2]]]],[11,R[10],E,E,178,[[["self"]],[T]]],[11,R[9],E,E,178,[[["self"]],[T]]],[11,R[11],E,E,178,[[["self"]],[R[34]]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"span",E,E,179,[[["self"]],["span"]]],[11,"into",E,E,179,[[],[U]]],[11,"from",E,E,179,[[[T]],[T]]],[11,R[37],E,E,179,[[["self"]],[T]]],[11,R[38],E,E,179,[[["self"],[T]]]],[11,R[7],E,E,179,[[[U]],[R[2]]]],[11,R[8],E,E,179,[[],[R[2]]]],[11,R[10],E,E,179,[[["self"]],[T]]],[11,R[9],E,E,179,[[["self"]],[T]]],[11,R[11],E,E,179,[[["self"]],[R[34]]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"span",E,E,180,[[["self"]],["span"]]],[11,"into",E,E,180,[[],[U]]],[11,"from",E,E,180,[[[T]],[T]]],[11,R[37],E,E,180,[[["self"]],[T]]],[11,R[38],E,E,180,[[["self"],[T]]]],[11,R[7],E,E,180,[[[U]],[R[2]]]],[11,R[8],E,E,180,[[],[R[2]]]],[11,R[10],E,E,180,[[["self"]],[T]]],[11,R[9],E,E,180,[[["self"]],[T]]],[11,R[11],E,E,180,[[["self"]],[R[34]]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"span",E,E,181,[[["self"]],["span"]]],[11,"into",E,E,181,[[],[U]]],[11,"from",E,E,181,[[[T]],[T]]],[11,R[37],E,E,181,[[["self"]],[T]]],[11,R[38],E,E,181,[[["self"],[T]]]],[11,R[7],E,E,181,[[[U]],[R[2]]]],[11,R[8],E,E,181,[[],[R[2]]]],[11,R[10],E,E,181,[[["self"]],[T]]],[11,R[9],E,E,181,[[["self"]],[T]]],[11,R[11],E,E,181,[[["self"]],[R[34]]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"span",E,E,182,[[["self"]],["span"]]],[11,"into",E,E,182,[[],[U]]],[11,"from",E,E,182,[[[T]],[T]]],[11,R[37],E,E,182,[[["self"]],[T]]],[11,R[38],E,E,182,[[["self"],[T]]]],[11,R[7],E,E,182,[[[U]],[R[2]]]],[11,R[8],E,E,182,[[],[R[2]]]],[11,R[10],E,E,182,[[["self"]],[T]]],[11,R[9],E,E,182,[[["self"]],[T]]],[11,R[11],E,E,182,[[["self"]],[R[34]]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"span",E,E,183,[[["self"]],["span"]]],[11,"into",E,E,183,[[],[U]]],[11,"from",E,E,183,[[[T]],[T]]],[11,R[37],E,E,183,[[["self"]],[T]]],[11,R[38],E,E,183,[[["self"],[T]]]],[11,R[7],E,E,183,[[[U]],[R[2]]]],[11,R[8],E,E,183,[[],[R[2]]]],[11,R[10],E,E,183,[[["self"]],[T]]],[11,R[9],E,E,183,[[["self"]],[T]]],[11,R[11],E,E,183,[[["self"]],[R[34]]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"span",E,E,184,[[["self"]],["span"]]],[11,"into",E,E,184,[[],[U]]],[11,"from",E,E,184,[[[T]],[T]]],[11,R[37],E,E,184,[[["self"]],[T]]],[11,R[38],E,E,184,[[["self"],[T]]]],[11,R[7],E,E,184,[[[U]],[R[2]]]],[11,R[8],E,E,184,[[],[R[2]]]],[11,R[10],E,E,184,[[["self"]],[T]]],[11,R[9],E,E,184,[[["self"]],[T]]],[11,R[11],E,E,184,[[["self"]],[R[34]]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"span",E,E,185,[[["self"]],["span"]]],[11,"into",E,E,185,[[],[U]]],[11,"from",E,E,185,[[[T]],[T]]],[11,R[37],E,E,185,[[["self"]],[T]]],[11,R[38],E,E,185,[[["self"],[T]]]],[11,R[7],E,E,185,[[[U]],[R[2]]]],[11,R[8],E,E,185,[[],[R[2]]]],[11,R[10],E,E,185,[[["self"]],[T]]],[11,R[9],E,E,185,[[["self"]],[T]]],[11,R[11],E,E,185,[[["self"]],[R[34]]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"into",E,E,186,[[],[U]]],[11,"from",E,E,186,[[[T]],[T]]],[11,R[37],E,E,186,[[["self"]],[T]]],[11,R[38],E,E,186,[[["self"],[T]]]],[11,R[7],E,E,186,[[[U]],[R[2]]]],[11,R[8],E,E,186,[[],[R[2]]]],[11,R[10],E,E,186,[[["self"]],[T]]],[11,R[9],E,E,186,[[["self"]],[T]]],[11,R[11],E,E,186,[[["self"]],[R[34]]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"into",E,E,187,[[],[U]]],[11,"from",E,E,187,[[[T]],[T]]],[11,R[37],E,E,187,[[["self"]],[T]]],[11,R[38],E,E,187,[[["self"],[T]]]],[11,R[7],E,E,187,[[[U]],[R[2]]]],[11,R[8],E,E,187,[[],[R[2]]]],[11,R[10],E,E,187,[[["self"]],[T]]],[11,R[9],E,E,187,[[["self"]],[T]]],[11,R[11],E,E,187,[[["self"]],[R[34]]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"into",E,E,188,[[],[U]]],[11,"from",E,E,188,[[[T]],[T]]],[11,R[37],E,E,188,[[["self"]],[T]]],[11,R[38],E,E,188,[[["self"],[T]]]],[11,R[7],E,E,188,[[[U]],[R[2]]]],[11,R[8],E,E,188,[[],[R[2]]]],[11,R[10],E,E,188,[[["self"]],[T]]],[11,R[9],E,E,188,[[["self"]],[T]]],[11,R[11],E,E,188,[[["self"]],[R[34]]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"into",E,E,189,[[],[U]]],[11,"from",E,E,189,[[[T]],[T]]],[11,R[37],E,E,189,[[["self"]],[T]]],[11,R[38],E,E,189,[[["self"],[T]]]],[11,R[7],E,E,189,[[[U]],[R[2]]]],[11,R[8],E,E,189,[[],[R[2]]]],[11,R[10],E,E,189,[[["self"]],[T]]],[11,R[9],E,E,189,[[["self"]],[T]]],[11,R[11],E,E,189,[[["self"]],[R[34]]]],[11,"into",R[1080],E,197,[[],[U]]],[11,"from",E,E,197,[[[T]],[T]]],[11,R[7],E,E,197,[[[U]],[R[2]]]],[11,R[8],E,E,197,[[],[R[2]]]],[11,R[10],E,E,197,[[["self"]],[T]]],[11,R[9],E,E,197,[[["self"]],[T]]],[11,R[11],E,E,197,[[["self"]],[R[34]]]],[11,"into",E,E,198,[[],[U]]],[11,"from",E,E,198,[[[T]],[T]]],[11,R[37],E,E,198,[[["self"]],[T]]],[11,R[38],E,E,198,[[["self"],[T]]]],[11,R[7],E,E,198,[[[U]],[R[2]]]],[11,R[8],E,E,198,[[],[R[2]]]],[11,R[10],E,E,198,[[["self"]],[T]]],[11,R[9],E,E,198,[[["self"]],[T]]],[11,R[11],E,E,198,[[["self"]],[R[34]]]],[11,"span",R[1081],E,201,[[["self"]],["span"]]],[11,"into",E,E,201,[[],[U]]],[11,R[30],E,E,201,[[],["i"]]],[11,"from",E,E,201,[[[T]],[T]]],[11,R[37],E,E,201,[[["self"]],[T]]],[11,R[38],E,E,201,[[["self"],[T]]]],[11,R[7],E,E,201,[[[U]],[R[2]]]],[11,R[8],E,E,201,[[],[R[2]]]],[11,R[10],E,E,201,[[["self"]],[T]]],[11,R[9],E,E,201,[[["self"]],[T]]],[11,R[11],E,E,201,[[["self"]],[R[34]]]],[11,"into",E,E,243,[[],[U]]],[11,R[30],E,E,243,[[],["i"]]],[11,"from",E,E,243,[[[T]],[T]]],[11,R[37],E,E,243,[[["self"]],[T]]],[11,R[38],E,E,243,[[["self"],[T]]]],[11,R[7],E,E,243,[[[U]],[R[2]]]],[11,R[8],E,E,243,[[],[R[2]]]],[11,R[10],E,E,243,[[["self"]],[T]]],[11,R[9],E,E,243,[[["self"]],[T]]],[11,R[11],E,E,243,[[["self"]],[R[34]]]],[11,"into",E,E,244,[[],[U]]],[11,R[30],E,E,244,[[],["i"]]],[11,"from",E,E,244,[[[T]],[T]]],[11,R[7],E,E,244,[[[U]],[R[2]]]],[11,R[8],E,E,244,[[],[R[2]]]],[11,R[10],E,E,244,[[["self"]],[T]]],[11,R[9],E,E,244,[[["self"]],[T]]],[11,R[11],E,E,244,[[["self"]],[R[34]]]],[11,"into",E,E,245,[[],[U]]],[11,R[30],E,E,245,[[],["i"]]],[11,"from",E,E,245,[[[T]],[T]]],[11,R[37],E,E,245,[[["self"]],[T]]],[11,R[38],E,E,245,[[["self"],[T]]]],[11,R[7],E,E,245,[[[U]],[R[2]]]],[11,R[8],E,E,245,[[],[R[2]]]],[11,R[10],E,E,245,[[["self"]],[T]]],[11,R[9],E,E,245,[[["self"]],[T]]],[11,R[11],E,E,245,[[["self"]],[R[34]]]],[11,"into",E,E,246,[[],[U]]],[11,R[30],E,E,246,[[],["i"]]],[11,"from",E,E,246,[[[T]],[T]]],[11,R[37],E,E,246,[[["self"]],[T]]],[11,R[38],E,E,246,[[["self"],[T]]]],[11,R[7],E,E,246,[[[U]],[R[2]]]],[11,R[8],E,E,246,[[],[R[2]]]],[11,R[10],E,E,246,[[["self"]],[T]]],[11,R[9],E,E,246,[[["self"]],[T]]],[11,R[11],E,E,246,[[["self"]],[R[34]]]],[11,"into",E,E,247,[[],[U]]],[11,R[30],E,E,247,[[],["i"]]],[11,"from",E,E,247,[[[T]],[T]]],[11,R[37],E,E,247,[[["self"]],[T]]],[11,R[38],E,E,247,[[["self"],[T]]]],[11,R[7],E,E,247,[[[U]],[R[2]]]],[11,R[8],E,E,247,[[],[R[2]]]],[11,R[10],E,E,247,[[["self"]],[T]]],[11,R[9],E,E,247,[[["self"]],[T]]],[11,R[11],E,E,247,[[["self"]],[R[34]]]],[11,"into",E,E,248,[[],[U]]],[11,R[30],E,E,248,[[],["i"]]],[11,"from",E,E,248,[[[T]],[T]]],[11,R[7],E,E,248,[[[U]],[R[2]]]],[11,R[8],E,E,248,[[],[R[2]]]],[11,R[10],E,E,248,[[["self"]],[T]]],[11,R[9],E,E,248,[[["self"]],[T]]],[11,R[11],E,E,248,[[["self"]],[R[34]]]],[11,"span",E,E,200,[[["self"]],["span"]]],[11,"into",E,E,200,[[],[U]]],[11,"from",E,E,200,[[[T]],[T]]],[11,R[37],E,E,200,[[["self"]],[T]]],[11,R[38],E,E,200,[[["self"],[T]]]],[11,R[7],E,E,200,[[[U]],[R[2]]]],[11,R[8],E,E,200,[[],[R[2]]]],[11,R[10],E,E,200,[[["self"]],[T]]],[11,R[9],E,E,200,[[["self"]],[T]]],[11,R[11],E,E,200,[[["self"]],[R[34]]]],[11,"into",R[1082],E,249,[[],[U]]],[11,"from",E,E,249,[[[T]],[T]]],[11,R[7],E,E,249,[[[U]],[R[2]]]],[11,R[8],E,E,249,[[],[R[2]]]],[11,R[10],E,E,249,[[["self"]],[T]]],[11,R[9],E,E,249,[[["self"]],[T]]],[11,R[11],E,E,249,[[["self"]],[R[34]]]],[11,"into",E,E,208,[[],[U]]],[11,R[95],E,E,208,[[["self"]],[R[63]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,R[7],E,E,208,[[[U]],[R[2]]]],[11,R[8],E,E,208,[[],[R[2]]]],[11,R[10],E,E,208,[[["self"]],[T]]],[11,R[9],E,E,208,[[["self"]],[T]]],[11,R[11],E,E,208,[[["self"]],[R[34]]]],[11,"into",E,E,207,[[],[U]]],[11,"from",E,E,207,[[[T]],[T]]],[11,R[37],E,E,207,[[["self"]],[T]]],[11,R[38],E,E,207,[[["self"],[T]]]],[11,R[7],E,E,207,[[[U]],[R[2]]]],[11,R[8],E,E,207,[[],[R[2]]]],[11,R[10],E,E,207,[[["self"]],[T]]],[11,R[9],E,E,207,[[["self"]],[T]]],[11,R[11],E,E,207,[[["self"]],[R[34]]]],[11,"clone","syn",E,210,[[["self"]],["ident"]]],[11,"cmp",E,E,210,[[["self"],["ident"]],[R[31]]]],[11,"eq",E,E,210,[[["self"],["ident"]],["bool"]]],[11,"eq",E,E,210,[[["self"],[T]],["bool"]]],[11,"fmt",E,E,210,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[117],E,E,210,[[["self"],["ident"]],[[R[32],[R[31]]],[R[31]]]]],[11,"hash",E,E,210,[[["self"],["h"]]]],[11,"fmt",E,E,210,[[["self"],[R[13]]],[["error"],[R[2],["error"]]]]],[11,R[1108],E,E,210,[[["self"],[R[167]]]]],[11,"peek",E,E,31,[[["cursor"]],["bool"]]],[11,"display",E,E,31,[[],["str"]]],[11,"peek",E,E,76,[[["cursor"]],["bool"]]],[11,"display",E,E,76,[[],["str"]]],[11,"peek",E,E,191,[[["cursor"]],["bool"]]],[11,"display",E,E,191,[[],["str"]]],[11,"peek",E,E,192,[[["cursor"]],["bool"]]],[11,"display",E,E,192,[[],["str"]]],[11,"peek",E,E,193,[[["cursor"]],["bool"]]],[11,"display",E,E,193,[[],["str"]]],[11,"peek",E,E,194,[[["cursor"]],["bool"]]],[11,"display",E,E,194,[[],["str"]]],[11,"peek",E,E,195,[[["cursor"]],["bool"]]],[11,"display",E,E,195,[[],["str"]]],[11,"peek",E,E,196,[[["cursor"]],["bool"]]],[11,"display",E,E,196,[[],["str"]]],[11,"peek",E,E,32,[[["cursor"]],["bool"]]],[11,"display",E,E,32,[[],["str"]]],[11,"peek",R[1083],E,87,[[["cursor"]],["bool"]]],[11,"display",E,E,87,[[],["str"]]],[11,"peek",E,E,188,[[["cursor"]],["bool"]]],[11,"display",E,E,188,[[],["str"]]],[11,"peek",E,E,186,[[["cursor"]],["bool"]]],[11,"display",E,E,186,[[],["str"]]],[11,"peek",E,E,187,[[["cursor"]],["bool"]]],[11,"display",E,E,187,[[],["str"]]],[11,"peek",E,E,189,[[["cursor"]],["bool"]]],[11,"display",E,E,189,[[],["str"]]],[11,"peek",E,E,88,[[["cursor"]],["bool"]]],[11,"display",E,E,88,[[],["str"]]],[11,"peek",E,E,89,[[["cursor"]],["bool"]]],[11,"display",E,E,89,[[],["str"]]],[11,"peek",E,E,90,[[["cursor"]],["bool"]]],[11,"display",E,E,90,[[],["str"]]],[11,"peek",E,E,91,[[["cursor"]],["bool"]]],[11,"display",E,E,91,[[],["str"]]],[11,"peek",E,E,92,[[["cursor"]],["bool"]]],[11,"display",E,E,92,[[],["str"]]],[11,"peek",E,E,93,[[["cursor"]],["bool"]]],[11,"display",E,E,93,[[],["str"]]],[11,"peek",E,E,94,[[["cursor"]],["bool"]]],[11,"display",E,E,94,[[],["str"]]],[11,"peek",E,E,95,[[["cursor"]],["bool"]]],[11,"display",E,E,95,[[],["str"]]],[11,"peek",E,E,96,[[["cursor"]],["bool"]]],[11,"display",E,E,96,[[],["str"]]],[11,"peek",E,E,97,[[["cursor"]],["bool"]]],[11,"display",E,E,97,[[],["str"]]],[11,"peek",E,E,98,[[["cursor"]],["bool"]]],[11,"display",E,E,98,[[],["str"]]],[11,"peek",E,E,99,[[["cursor"]],["bool"]]],[11,"display",E,E,99,[[],["str"]]],[11,"peek",E,E,100,[[["cursor"]],["bool"]]],[11,"display",E,E,100,[[],["str"]]],[11,"peek",E,E,101,[[["cursor"]],["bool"]]],[11,"display",E,E,101,[[],["str"]]],[11,"peek",E,E,102,[[["cursor"]],["bool"]]],[11,"display",E,E,102,[[],["str"]]],[11,"peek",E,E,103,[[["cursor"]],["bool"]]],[11,"display",E,E,103,[[],["str"]]],[11,"peek",E,E,104,[[["cursor"]],["bool"]]],[11,"display",E,E,104,[[],["str"]]],[11,"peek",E,E,105,[[["cursor"]],["bool"]]],[11,"display",E,E,105,[[],["str"]]],[11,"peek",E,E,106,[[["cursor"]],["bool"]]],[11,"display",E,E,106,[[],["str"]]],[11,"peek",E,E,107,[[["cursor"]],["bool"]]],[11,"display",E,E,107,[[],["str"]]],[11,"peek",E,E,108,[[["cursor"]],["bool"]]],[11,"display",E,E,108,[[],["str"]]],[11,"peek",E,E,109,[[["cursor"]],["bool"]]],[11,"display",E,E,109,[[],["str"]]],[11,"peek",E,E,110,[[["cursor"]],["bool"]]],[11,"display",E,E,110,[[],["str"]]],[11,"peek",E,E,111,[[["cursor"]],["bool"]]],[11,"display",E,E,111,[[],["str"]]],[11,"peek",E,E,112,[[["cursor"]],["bool"]]],[11,"display",E,E,112,[[],["str"]]],[11,"peek",E,E,113,[[["cursor"]],["bool"]]],[11,"display",E,E,113,[[],["str"]]],[11,"peek",E,E,114,[[["cursor"]],["bool"]]],[11,"display",E,E,114,[[],["str"]]],[11,"peek",E,E,115,[[["cursor"]],["bool"]]],[11,"display",E,E,115,[[],["str"]]],[11,"peek",E,E,116,[[["cursor"]],["bool"]]],[11,"display",E,E,116,[[],["str"]]],[11,"peek",E,E,117,[[["cursor"]],["bool"]]],[11,"display",E,E,117,[[],["str"]]],[11,"peek",E,E,118,[[["cursor"]],["bool"]]],[11,"display",E,E,118,[[],["str"]]],[11,"peek",E,E,119,[[["cursor"]],["bool"]]],[11,"display",E,E,119,[[],["str"]]],[11,"peek",E,E,120,[[["cursor"]],["bool"]]],[11,"display",E,E,120,[[],["str"]]],[11,"peek",E,E,121,[[["cursor"]],["bool"]]],[11,"display",E,E,121,[[],["str"]]],[11,"peek",E,E,122,[[["cursor"]],["bool"]]],[11,"display",E,E,122,[[],["str"]]],[11,"peek",E,E,123,[[["cursor"]],["bool"]]],[11,"display",E,E,123,[[],["str"]]],[11,"peek",E,E,124,[[["cursor"]],["bool"]]],[11,"display",E,E,124,[[],["str"]]],[11,"peek",E,E,125,[[["cursor"]],["bool"]]],[11,"display",E,E,125,[[],["str"]]],[11,"peek",E,E,126,[[["cursor"]],["bool"]]],[11,"display",E,E,126,[[],["str"]]],[11,"peek",E,E,127,[[["cursor"]],["bool"]]],[11,"display",E,E,127,[[],["str"]]],[11,"peek",E,E,128,[[["cursor"]],["bool"]]],[11,"display",E,E,128,[[],["str"]]],[11,"peek",E,E,129,[[["cursor"]],["bool"]]],[11,"display",E,E,129,[[],["str"]]],[11,"peek",E,E,130,[[["cursor"]],["bool"]]],[11,"display",E,E,130,[[],["str"]]],[11,"peek",E,E,131,[[["cursor"]],["bool"]]],[11,"display",E,E,131,[[],["str"]]],[11,"peek",E,E,132,[[["cursor"]],["bool"]]],[11,"display",E,E,132,[[],["str"]]],[11,"peek",E,E,133,[[["cursor"]],["bool"]]],[11,"display",E,E,133,[[],["str"]]],[11,"peek",E,E,134,[[["cursor"]],["bool"]]],[11,"display",E,E,134,[[],["str"]]],[11,"peek",E,E,135,[[["cursor"]],["bool"]]],[11,"display",E,E,135,[[],["str"]]],[11,"peek",E,E,136,[[["cursor"]],["bool"]]],[11,"display",E,E,136,[[],["str"]]],[11,"peek",E,E,137,[[["cursor"]],["bool"]]],[11,"display",E,E,137,[[],["str"]]],[11,"peek",E,E,138,[[["cursor"]],["bool"]]],[11,"display",E,E,138,[[],["str"]]],[11,"peek",E,E,139,[[["cursor"]],["bool"]]],[11,"display",E,E,139,[[],["str"]]],[11,"peek",E,E,140,[[["cursor"]],["bool"]]],[11,"display",E,E,140,[[],["str"]]],[11,"peek",E,E,141,[[["cursor"]],["bool"]]],[11,"display",E,E,141,[[],["str"]]],[11,"peek",E,E,142,[[["cursor"]],["bool"]]],[11,"display",E,E,142,[[],["str"]]],[11,"peek",E,E,143,[[["cursor"]],["bool"]]],[11,"display",E,E,143,[[],["str"]]],[11,"peek",E,E,144,[[["cursor"]],["bool"]]],[11,"display",E,E,144,[[],["str"]]],[11,"peek",E,E,145,[[["cursor"]],["bool"]]],[11,"display",E,E,145,[[],["str"]]],[11,"peek",E,E,146,[[["cursor"]],["bool"]]],[11,"display",E,E,146,[[],["str"]]],[11,"peek",E,E,147,[[["cursor"]],["bool"]]],[11,"display",E,E,147,[[],["str"]]],[11,"peek",E,E,148,[[["cursor"]],["bool"]]],[11,"display",E,E,148,[[],["str"]]],[11,"peek",E,E,149,[[["cursor"]],["bool"]]],[11,"display",E,E,149,[[],["str"]]],[11,"peek",E,E,150,[[["cursor"]],["bool"]]],[11,"display",E,E,150,[[],["str"]]],[11,"peek",E,E,151,[[["cursor"]],["bool"]]],[11,"display",E,E,151,[[],["str"]]],[11,"peek",E,E,152,[[["cursor"]],["bool"]]],[11,"display",E,E,152,[[],["str"]]],[11,"peek",E,E,153,[[["cursor"]],["bool"]]],[11,"display",E,E,153,[[],["str"]]],[11,"peek",E,E,154,[[["cursor"]],["bool"]]],[11,"display",E,E,154,[[],["str"]]],[11,"peek",E,E,155,[[["cursor"]],["bool"]]],[11,"display",E,E,155,[[],["str"]]],[11,"peek",E,E,156,[[["cursor"]],["bool"]]],[11,"display",E,E,156,[[],["str"]]],[11,"peek",E,E,157,[[["cursor"]],["bool"]]],[11,"display",E,E,157,[[],["str"]]],[11,"peek",E,E,158,[[["cursor"]],["bool"]]],[11,"display",E,E,158,[[],["str"]]],[11,"peek",E,E,159,[[["cursor"]],["bool"]]],[11,"display",E,E,159,[[],["str"]]],[11,"peek",E,E,160,[[["cursor"]],["bool"]]],[11,"display",E,E,160,[[],["str"]]],[11,"peek",E,E,161,[[["cursor"]],["bool"]]],[11,"display",E,E,161,[[],["str"]]],[11,"peek",E,E,162,[[["cursor"]],["bool"]]],[11,"display",E,E,162,[[],["str"]]],[11,"peek",E,E,163,[[["cursor"]],["bool"]]],[11,"display",E,E,163,[[],["str"]]],[11,"peek",E,E,164,[[["cursor"]],["bool"]]],[11,"display",E,E,164,[[],["str"]]],[11,"peek",E,E,165,[[["cursor"]],["bool"]]],[11,"display",E,E,165,[[],["str"]]],[11,"peek",E,E,166,[[["cursor"]],["bool"]]],[11,"display",E,E,166,[[],["str"]]],[11,"peek",E,E,167,[[["cursor"]],["bool"]]],[11,"display",E,E,167,[[],["str"]]],[11,"peek",E,E,168,[[["cursor"]],["bool"]]],[11,"display",E,E,168,[[],["str"]]],[11,"peek",E,E,169,[[["cursor"]],["bool"]]],[11,"display",E,E,169,[[],["str"]]],[11,"peek",E,E,170,[[["cursor"]],["bool"]]],[11,"display",E,E,170,[[],["str"]]],[11,"peek",E,E,171,[[["cursor"]],["bool"]]],[11,"display",E,E,171,[[],["str"]]],[11,"peek",E,E,172,[[["cursor"]],["bool"]]],[11,"display",E,E,172,[[],["str"]]],[11,"peek",E,E,173,[[["cursor"]],["bool"]]],[11,"display",E,E,173,[[],["str"]]],[11,"peek",E,E,174,[[["cursor"]],["bool"]]],[11,"display",E,E,174,[[],["str"]]],[11,"peek",E,E,175,[[["cursor"]],["bool"]]],[11,"display",E,E,175,[[],["str"]]],[11,"peek",E,E,176,[[["cursor"]],["bool"]]],[11,"display",E,E,176,[[],["str"]]],[11,"peek",E,E,177,[[["cursor"]],["bool"]]],[11,"display",E,E,177,[[],["str"]]],[11,"peek",E,E,178,[[["cursor"]],["bool"]]],[11,"display",E,E,178,[[],["str"]]],[11,"peek",E,E,179,[[["cursor"]],["bool"]]],[11,"display",E,E,179,[[],["str"]]],[11,"peek",E,E,180,[[["cursor"]],["bool"]]],[11,"display",E,E,180,[[],["str"]]],[11,"peek",E,E,181,[[["cursor"]],["bool"]]],[11,"display",E,E,181,[[],["str"]]],[11,"peek",E,E,182,[[["cursor"]],["bool"]]],[11,"display",E,E,182,[[],["str"]]],[11,"peek",E,E,183,[[["cursor"]],["bool"]]],[11,"display",E,E,183,[[],["str"]]],[11,"peek",E,E,184,[[["cursor"]],["bool"]]],[11,"display",E,E,184,[[],["str"]]],[11,"peek",E,E,185,[[["cursor"]],["bool"]]],[11,"display",E,E,185,[[],["str"]]],[11,"peek","syn",E,210,[[["cursor"]],["bool"]]],[11,"display",E,E,210,[[],["str"]]],[11,"parse_any",E,E,210,[[[R[931]]],[R[2]]]],[11,"unraw",E,E,210,[[["self"]],["ident"]]],[11,"advance_to",R[1082],E,208,[[["self"]]]],[11,"parse",R[1083],E,87,[[[R[931]]],[R[2]]]],[11,"parse",E,E,88,[[[R[931]]],[R[2]]]],[11,"parse",E,E,89,[[[R[931]]],[R[2]]]],[11,"parse",E,E,90,[[[R[931]]],[R[2]]]],[11,"parse",E,E,91,[[[R[931]]],[R[2]]]],[11,"parse",E,E,92,[[[R[931]]],[R[2]]]],[11,"parse",E,E,93,[[[R[931]]],[R[2]]]],[11,"parse",E,E,94,[[[R[931]]],[R[2]]]],[11,"parse",E,E,95,[[[R[931]]],[R[2]]]],[11,"parse",E,E,96,[[[R[931]]],[R[2]]]],[11,"parse",E,E,97,[[[R[931]]],[R[2]]]],[11,"parse",E,E,98,[[[R[931]]],[R[2]]]],[11,"parse",E,E,99,[[[R[931]]],[R[2]]]],[11,"parse",E,E,100,[[[R[931]]],[R[2]]]],[11,"parse",E,E,101,[[[R[931]]],[R[2]]]],[11,"parse",E,E,102,[[[R[931]]],[R[2]]]],[11,"parse",E,E,103,[[[R[931]]],[R[2]]]],[11,"parse",E,E,104,[[[R[931]]],[R[2]]]],[11,"parse",E,E,105,[[[R[931]]],[R[2]]]],[11,"parse",E,E,106,[[[R[931]]],[R[2]]]],[11,"parse",E,E,107,[[[R[931]]],[R[2]]]],[11,"parse",E,E,108,[[[R[931]]],[R[2]]]],[11,"parse",E,E,109,[[[R[931]]],[R[2]]]],[11,"parse",E,E,110,[[[R[931]]],[R[2]]]],[11,"parse",E,E,111,[[[R[931]]],[R[2]]]],[11,"parse",E,E,112,[[[R[931]]],[R[2]]]],[11,"parse",E,E,113,[[[R[931]]],[R[2]]]],[11,"parse",E,E,114,[[[R[931]]],[R[2]]]],[11,"parse",E,E,115,[[[R[931]]],[R[2]]]],[11,"parse",E,E,116,[[[R[931]]],[R[2]]]],[11,"parse",E,E,117,[[[R[931]]],[R[2]]]],[11,"parse",E,E,118,[[[R[931]]],[R[2]]]],[11,"parse",E,E,119,[[[R[931]]],[R[2]]]],[11,"parse",E,E,120,[[[R[931]]],[R[2]]]],[11,"parse",E,E,121,[[[R[931]]],[R[2]]]],[11,"parse",E,E,122,[[[R[931]]],[R[2]]]],[11,"parse",E,E,123,[[[R[931]]],[R[2]]]],[11,"parse",E,E,124,[[[R[931]]],[R[2]]]],[11,"parse",E,E,125,[[[R[931]]],[R[2]]]],[11,"parse",E,E,126,[[[R[931]]],[R[2]]]],[11,"parse",E,E,127,[[[R[931]]],[R[2]]]],[11,"parse",E,E,128,[[[R[931]]],[R[2]]]],[11,"parse",E,E,129,[[[R[931]]],[R[2]]]],[11,"parse",E,E,130,[[[R[931]]],[R[2]]]],[11,"parse",E,E,131,[[[R[931]]],[R[2]]]],[11,"parse",E,E,132,[[[R[931]]],[R[2]]]],[11,"parse",E,E,133,[[[R[931]]],[R[2]]]],[11,"parse",E,E,134,[[[R[931]]],[R[2]]]],[11,"parse",E,E,135,[[[R[931]]],[R[2]]]],[11,"parse",E,E,136,[[[R[931]]],[R[2]]]],[11,"parse",E,E,137,[[[R[931]]],[R[2]]]],[11,"parse",E,E,138,[[[R[931]]],[R[2]]]],[11,"parse",E,E,139,[[[R[931]]],[R[2]]]],[11,"parse",E,E,140,[[[R[931]]],[R[2]]]],[11,"parse",E,E,141,[[[R[931]]],[R[2]]]],[11,"parse",E,E,142,[[[R[931]]],[R[2]]]],[11,"parse",E,E,143,[[[R[931]]],[R[2]]]],[11,"parse",E,E,144,[[[R[931]]],[R[2]]]],[11,"parse",E,E,145,[[[R[931]]],[R[2]]]],[11,"parse",E,E,146,[[[R[931]]],[R[2]]]],[11,"parse",E,E,147,[[[R[931]]],[R[2]]]],[11,"parse",E,E,148,[[[R[931]]],[R[2]]]],[11,"parse",E,E,149,[[[R[931]]],[R[2]]]],[11,"parse",E,E,150,[[[R[931]]],[R[2]]]],[11,"parse",E,E,151,[[[R[931]]],[R[2]]]],[11,"parse",E,E,152,[[[R[931]]],[R[2]]]],[11,"parse",E,E,153,[[[R[931]]],[R[2]]]],[11,"parse",E,E,154,[[[R[931]]],[R[2]]]],[11,"parse",E,E,155,[[[R[931]]],[R[2]]]],[11,"parse",E,E,156,[[[R[931]]],[R[2]]]],[11,"parse",E,E,157,[[[R[931]]],[R[2]]]],[11,"parse",E,E,158,[[[R[931]]],[R[2]]]],[11,"parse",E,E,159,[[[R[931]]],[R[2]]]],[11,"parse",E,E,160,[[[R[931]]],[R[2]]]],[11,"parse",E,E,161,[[[R[931]]],[R[2]]]],[11,"parse",E,E,162,[[[R[931]]],[R[2]]]],[11,"parse",E,E,163,[[[R[931]]],[R[2]]]],[11,"parse",E,E,164,[[[R[931]]],[R[2]]]],[11,"parse",E,E,165,[[[R[931]]],[R[2]]]],[11,"parse",E,E,166,[[[R[931]]],[R[2]]]],[11,"parse",E,E,167,[[[R[931]]],[R[2]]]],[11,"parse",E,E,168,[[[R[931]]],[R[2]]]],[11,"parse",E,E,169,[[[R[931]]],[R[2]]]],[11,"parse",E,E,170,[[[R[931]]],[R[2]]]],[11,"parse",E,E,171,[[[R[931]]],[R[2]]]],[11,"parse",E,E,172,[[[R[931]]],[R[2]]]],[11,"parse",E,E,173,[[[R[931]]],[R[2]]]],[11,"parse",E,E,174,[[[R[931]]],[R[2]]]],[11,"parse",E,E,175,[[[R[931]]],[R[2]]]],[11,"parse",E,E,176,[[[R[931]]],[R[2]]]],[11,"parse",E,E,177,[[[R[931]]],[R[2]]]],[11,"parse",E,E,178,[[[R[931]]],[R[2]]]],[11,"parse",E,E,179,[[[R[931]]],[R[2]]]],[11,"parse",E,E,180,[[[R[931]]],[R[2]]]],[11,"parse",E,E,181,[[[R[931]]],[R[2]]]],[11,"parse",E,E,182,[[[R[931]]],[R[2]]]],[11,"parse",E,E,183,[[[R[931]]],[R[2]]]],[11,"parse",E,E,184,[[[R[931]]],[R[2]]]],[11,"parse",E,E,185,[[[R[931]]],[R[2]]]],[11,"parse","syn",E,210,[[[R[931]]],[R[2]]]],[11,"parse",E,E,64,[[[R[931]]],[R[2]]]],[11,"parse",E,E,1,[[[R[931]]],[R[2]]]],[11,"parse",E,E,2,[[[R[931]]],[R[2]]]],[11,"parse",E,E,65,[[[R[931]]],[R[2]]]],[11,"parse",E,E,6,[[[R[931]]],[R[2]]]],[11,"parse",E,E,4,[[[R[931]]],[R[2]]]],[11,"parse",E,E,5,[[[R[931]]],[R[2]]]],[11,"parse",E,E,67,[[[R[931]]],[R[2]]]],[11,"parse",E,E,68,[[[R[931]]],[R[2]]]],[11,"parse",E,E,15,[[[R[931]]],[R[2]]]],[11,"parse",E,E,17,[[[R[931]]],[R[2]]]],[11,"parse",E,E,69,[[[R[931]]],[R[2]]]],[11,"parse",E,E,20,[[[R[931]]],[R[2]]]],[11,"parse",E,E,23,[[[R[931]]],[R[2]]]],[11,"parse",E,E,70,[[[R[931]]],[R[2]]]],[11,"parse",E,E,24,[[[R[931]]],[R[2]]]],[11,"parse",E,E,21,[[[R[931]]],[R[2]]]],[11,"parse",E,E,29,[[[R[931]]],[R[2]]]],[11,"parse",E,E,72,[[[R[931]]],[R[2]]]],[11,"parse",E,E,28,[[[R[931]]],[R[2]]]],[11,"parse",E,E,71,[[[R[931]]],[R[2]]]],[11,"parse",E,E,22,[[[R[931]]],[R[2]]]],[11,"parse",E,E,30,[[[R[931]]],[R[2]]]],[11,"parse",E,E,73,[[[R[931]]],[R[2]]]],[11,"parse",E,E,31,[[[R[931]]],[R[2]]]],[11,"parse",E,E,76,[[[R[931]]],[R[2]]]],[11,"parse",E,E,191,[[[R[931]]],[R[2]]]],[11,"parse",E,E,192,[[[R[931]]],[R[2]]]],[11,"parse",E,E,193,[[[R[931]]],[R[2]]]],[11,"parse",E,E,194,[[[R[931]]],[R[2]]]],[11,"parse",E,E,195,[[[R[931]]],[R[2]]]],[11,"parse",E,E,196,[[[R[931]]],[R[2]]]],[11,"parse",E,E,32,[[[R[931]]],[R[2]]]],[11,"parse",E,E,34,[[[R[931]]],[R[2]]]],[11,"parse",E,E,38,[[[R[931]]],[R[2]]]],[11,"parse",E,E,80,[[[R[931]]],[R[2]]]],[11,"parse",E,E,81,[[[R[931]]],[R[2]]]],[11,"parse",E,E,84,[[[R[931]]],[R[2]]]],[11,"parse",E,E,52,[[[R[931]]],[R[2]]]],[11,"parse",E,E,41,[[[R[931]]],[R[2]]]],[11,"parse",E,E,50,[[[R[931]]],[R[2]]]],[11,"parse",E,E,51,[[[R[931]]],[R[2]]]],[11,"parse",E,E,42,[[[R[931]]],[R[2]]]],[11,"parse",E,E,47,[[[R[931]]],[R[2]]]],[11,"parse",E,E,45,[[[R[931]]],[R[2]]]],[11,"parse",E,E,54,[[[R[931]]],[R[2]]]],[11,"parse",E,E,46,[[[R[931]]],[R[2]]]],[11,"parse",E,E,49,[[[R[931]]],[R[2]]]],[11,"parse",E,E,83,[[[R[931]]],[R[2]]]],[11,"parse",E,E,53,[[[R[931]]],[R[2]]]],[11,"parse",E,E,44,[[[R[931]]],[R[2]]]],[11,"parse",E,E,43,[[[R[931]]],[R[2]]]],[11,"parse",E,E,48,[[[R[931]]],[R[2]]]],[11,"parse",E,E,40,[[[R[931]]],[R[2]]]],[11,"parse",E,E,82,[[[R[931]]],[R[2]]]],[11,"parse",E,E,39,[[[R[931]]],[R[2]]]],[11,"parse",E,E,60,[[[R[931]]],[R[2]]]],[11,"parse",E,E,85,[[[R[931]]],[R[2]]]],[11,"parse",E,E,56,[[[R[931]]],[R[2]]]],[11,"parse",E,E,59,[[[R[931]]],[R[2]]]],[11,"parse",E,E,61,[[[R[931]]],[R[2]]]],[11,"parse",E,E,57,[[[R[931]]],[R[2]]]],[11,"extend",R[1081],E,201,[[["self"],[R[120]]]]],[11,"extend",E,E,201,[[["self"],[R[120]]]]],[11,"drop",R[1082],E,208,[[["self"]]]],[11,"clone",R[1083],E,87,[[["self"]],["underscore"]]],[11,"clone",E,E,88,[[["self"]],["abstract"]]],[11,"clone",E,E,89,[[["self"]],["as"]]],[11,"clone",E,E,90,[[["self"]],["async"]]],[11,"clone",E,E,91,[[["self"]],["auto"]]],[11,"clone",E,E,92,[[["self"]],["become"]]],[11,"clone",E,E,93,[[["self"]],["box"]]],[11,"clone",E,E,94,[[["self"]],["break"]]],[11,"clone",E,E,95,[[["self"]],["const"]]],[11,"clone",E,E,96,[[["self"]],["continue"]]],[11,"clone",E,E,97,[[["self"]],["crate"]]],[11,"clone",E,E,98,[[["self"]],[R[99]]]],[11,"clone",E,E,99,[[["self"]],["do"]]],[11,"clone",E,E,100,[[["self"]],["dyn"]]],[11,"clone",E,E,101,[[["self"]],["else"]]],[11,"clone",E,E,102,[[["self"]],["enum"]]],[11,"clone",E,E,103,[[["self"]],["existential"]]],[11,"clone",E,E,104,[[["self"]],["extern"]]],[11,"clone",E,E,105,[[["self"]],["final"]]],[11,"clone",E,E,106,[[["self"]],["fn"]]],[11,"clone",E,E,107,[[["self"]],["for"]]],[11,"clone",E,E,108,[[["self"]],["if"]]],[11,"clone",E,E,109,[[["self"]],["impl"]]],[11,"clone",E,E,110,[[["self"]],["in"]]],[11,"clone",E,E,111,[[["self"]],["let"]]],[11,"clone",E,E,112,[[["self"]],["loop"]]],[11,"clone",E,E,113,[[["self"]],["macro"]]],[11,"clone",E,E,114,[[["self"]],["match"]]],[11,"clone",E,E,115,[[["self"]],["mod"]]],[11,"clone",E,E,116,[[["self"]],["move"]]],[11,"clone",E,E,117,[[["self"]],["mut"]]],[11,"clone",E,E,118,[[["self"]],["override"]]],[11,"clone",E,E,119,[[["self"]],["priv"]]],[11,"clone",E,E,120,[[["self"]],["pub"]]],[11,"clone",E,E,121,[[["self"]],["ref"]]],[11,"clone",E,E,122,[[["self"]],["return"]]],[11,"clone",E,E,123,[[["self"]],["selftype"]]],[11,"clone",E,E,124,[[["self"]],["selfvalue"]]],[11,"clone",E,E,125,[[["self"]],["static"]]],[11,"clone",E,E,126,[[["self"]],["struct"]]],[11,"clone",E,E,127,[[["self"]],["super"]]],[11,"clone",E,E,128,[[["self"]],["trait"]]],[11,"clone",E,E,129,[[["self"]],["try"]]],[11,"clone",E,E,130,[[["self"]],["type"]]],[11,"clone",E,E,131,[[["self"]],["typeof"]]],[11,"clone",E,E,132,[[["self"]],["union"]]],[11,"clone",E,E,133,[[["self"]],["unsafe"]]],[11,"clone",E,E,134,[[["self"]],["unsized"]]],[11,"clone",E,E,135,[[["self"]],["use"]]],[11,"clone",E,E,136,[[["self"]],["virtual"]]],[11,"clone",E,E,137,[[["self"]],["where"]]],[11,"clone",E,E,138,[[["self"]],["while"]]],[11,"clone",E,E,139,[[["self"]],["yield"]]],[11,"clone",E,E,140,[[["self"]],["add"]]],[11,"clone",E,E,141,[[["self"]],["addeq"]]],[11,"clone",E,E,142,[[["self"]],["and"]]],[11,"clone",E,E,143,[[["self"]],["andand"]]],[11,"clone",E,E,144,[[["self"]],["andeq"]]],[11,"clone",E,E,145,[[["self"]],["at"]]],[11,"clone",E,E,146,[[["self"]],["bang"]]],[11,"clone",E,E,147,[[["self"]],["caret"]]],[11,"clone",E,E,148,[[["self"]],["careteq"]]],[11,"clone",E,E,149,[[["self"]],["colon"]]],[11,"clone",E,E,150,[[["self"]],["colon2"]]],[11,"clone",E,E,151,[[["self"]],["comma"]]],[11,"clone",E,E,152,[[["self"]],["div"]]],[11,"clone",E,E,153,[[["self"]],["diveq"]]],[11,"clone",E,E,154,[[["self"]],["dollar"]]],[11,"clone",E,E,155,[[["self"]],["dot"]]],[11,"clone",E,E,156,[[["self"]],["dot2"]]],[11,"clone",E,E,157,[[["self"]],["dot3"]]],[11,"clone",E,E,158,[[["self"]],["dotdoteq"]]],[11,"clone",E,E,159,[[["self"]],["eq"]]],[11,"clone",E,E,160,[[["self"]],["eqeq"]]],[11,"clone",E,E,161,[[["self"]],["ge"]]],[11,"clone",E,E,162,[[["self"]],["gt"]]],[11,"clone",E,E,163,[[["self"]],["le"]]],[11,"clone",E,E,164,[[["self"]],["lt"]]],[11,"clone",E,E,165,[[["self"]],["muleq"]]],[11,"clone",E,E,166,[[["self"]],["ne"]]],[11,"clone",E,E,167,[[["self"]],["or"]]],[11,"clone",E,E,168,[[["self"]],["oreq"]]],[11,"clone",E,E,169,[[["self"]],["oror"]]],[11,"clone",E,E,170,[[["self"]],["pound"]]],[11,"clone",E,E,171,[[["self"]],["question"]]],[11,"clone",E,E,172,[[["self"]],["rarrow"]]],[11,"clone",E,E,173,[[["self"]],["larrow"]]],[11,"clone",E,E,174,[[["self"]],["rem"]]],[11,"clone",E,E,175,[[["self"]],["remeq"]]],[11,"clone",E,E,176,[[["self"]],["fatarrow"]]],[11,"clone",E,E,177,[[["self"]],["semi"]]],[11,"clone",E,E,178,[[["self"]],["shl"]]],[11,"clone",E,E,179,[[["self"]],["shleq"]]],[11,"clone",E,E,180,[[["self"]],["shr"]]],[11,"clone",E,E,181,[[["self"]],["shreq"]]],[11,"clone",E,E,182,[[["self"]],["star"]]],[11,"clone",E,E,183,[[["self"]],["sub"]]],[11,"clone",E,E,184,[[["self"]],["subeq"]]],[11,"clone",E,E,185,[[["self"]],["tilde"]]],[11,"clone",E,E,186,[[["self"]],["brace"]]],[11,"clone",E,E,187,[[["self"]],["bracket"]]],[11,"clone",E,E,188,[[["self"]],["paren"]]],[11,"clone",E,E,189,[[["self"]],["group"]]],[11,"clone","syn",E,0,[[["self"]],[R[952]]]],[11,"clone",E,E,63,[[["self"]],[R[950]]]],[11,"clone",E,E,64,[[["self"]],["meta"]]],[11,"clone",E,E,1,[[["self"]],["metalist"]]],[11,"clone",E,E,2,[[["self"]],[R[1020]]]],[11,"clone",E,E,65,[[["self"]],[R[1084]]]],[11,"clone",E,E,6,[[["self"]],["variant"]]],[11,"clone",E,E,66,[[["self"]],["fields"]]],[11,"clone",E,E,4,[[["self"]],[R[993]]]],[11,"clone",E,E,5,[[["self"]],[R[995]]]],[11,"clone",E,E,3,[[["self"]],["field"]]],[11,"clone",E,E,67,[[["self"]],[R[1085]]]],[11,"clone",E,E,8,[[["self"]],[R[1090]]]],[11,"clone",E,E,7,[[["self"]],["viscrate"]]],[11,"clone",E,E,9,[[["self"]],[R[1066]]]],[11,"clone",E,E,68,[[["self"]],["expr"]]],[11,"clone",E,E,216,[[["self"]],["exprbox"]]],[11,"clone",E,E,223,[[["self"]],[R[1091]]]],[11,"clone",E,E,211,[[["self"]],["exprarray"]]],[11,"clone",E,E,11,[[["self"]],["exprcall"]]],[11,"clone",E,E,228,[[["self"]],[R[1092]]]],[11,"clone",E,E,236,[[["self"]],["exprtuple"]]],[11,"clone",E,E,10,[[["self"]],[R[975]]]],[11,"clone",E,E,18,[[["self"]],[R[987]]]],[11,"clone",E,E,15,[[["self"]],["exprlit"]]],[11,"clone",E,E,12,[[["self"]],["exprcast"]]],[11,"clone",E,E,237,[[["self"]],["exprtype"]]],[11,"clone",E,E,224,[[["self"]],["exprlet"]]],[11,"clone",E,E,222,[[["self"]],["exprif"]]],[11,"clone",E,E,239,[[["self"]],["exprwhile"]]],[11,"clone",E,E,220,[[["self"]],[R[1093]]]],[11,"clone",E,E,225,[[["self"]],["exprloop"]]],[11,"clone",E,E,227,[[["self"]],["exprmatch"]]],[11,"clone",E,E,218,[[["self"]],[R[1094]]]],[11,"clone",E,E,238,[[["self"]],["exprunsafe"]]],[11,"clone",E,E,215,[[["self"]],["exprblock"]]],[11,"clone",E,E,212,[[["self"]],["exprassign"]]],[11,"clone",E,E,213,[[["self"]],[R[1095]]]],[11,"clone",E,E,13,[[["self"]],[R[979]]]],[11,"clone",E,E,14,[[["self"]],[R[981]]]],[11,"clone",E,E,229,[[["self"]],["exprrange"]]],[11,"clone",E,E,17,[[["self"]],["exprpath"]]],[11,"clone",E,E,230,[[["self"]],[R[1096]]]],[11,"clone",E,E,217,[[["self"]],["exprbreak"]]],[11,"clone",E,E,219,[[["self"]],[R[1097]]]],[11,"clone",E,E,232,[[["self"]],["exprreturn"]]],[11,"clone",E,E,226,[[["self"]],["exprmacro"]]],[11,"clone",E,E,233,[[["self"]],["exprstruct"]]],[11,"clone",E,E,231,[[["self"]],["exprrepeat"]]],[11,"clone",E,E,16,[[["self"]],[R[984]]]],[11,"clone",E,E,221,[[["self"]],["exprgroup"]]],[11,"clone",E,E,234,[[["self"]],["exprtry"]]],[11,"clone",E,E,214,[[["self"]],["exprasync"]]],[11,"clone",E,E,235,[[["self"]],[R[1098]]]],[11,"clone",E,E,240,[[["self"]],["expryield"]]],[11,"clone",E,E,19,[[["self"]],[R[989]]]],[11,"clone",E,E,69,[[["self"]],["member"]]],[11,"clone",E,E,20,[[["self"]],["index"]]],[11,"clone",E,E,23,[[["self"]],["generics"]]],[11,"clone",E,E,70,[[["self"]],[R[999]]]],[11,"clone",E,E,29,[[["self"]],[R[1099]]]],[11,"clone",E,E,24,[[["self"]],[R[1004]]]],[11,"clone",E,E,22,[[["self"]],[R[962]]]],[11,"clone",E,E,241,[[["self"]],["implgenerics"]]],[11,"clone",E,E,190,[[["self"]],["typegenerics"]]],[11,"clone",E,E,242,[[["self"]],["turbofish"]]],[11,"clone",E,E,21,[[["self"]],[R[960]]]],[11,"clone",E,E,72,[[["self"]],[R[1049]]]],[11,"clone",E,E,28,[[["self"]],[R[1086]]]],[11,"clone",E,E,71,[[["self"]],[R[1038]]]],[11,"clone",E,E,30,[[["self"]],[R[944]]]],[11,"clone",E,E,73,[[["self"]],[R[1070]]]],[11,"clone",E,E,27,[[["self"]],[R[1033]]]],[11,"clone",E,E,26,[[["self"]],[R[1031]]]],[11,"clone",E,E,25,[[["self"]],[R[1029]]]],[11,"clone",E,E,31,[[["self"]],[R[841]]]],[11,"clone",E,E,76,[[["self"]],["lit"]]],[11,"clone",E,E,191,[[["self"]],["litstr"]]],[11,"clone",E,E,192,[[["self"]],[R[1087]]]],[11,"clone",E,E,193,[[["self"]],["litbyte"]]],[11,"clone",E,E,194,[[["self"]],["litchar"]]],[11,"clone",E,E,195,[[["self"]],["litint"]]],[11,"clone",E,E,196,[[["self"]],["litfloat"]]],[11,"clone",E,E,32,[[["self"]],["litbool"]]],[11,"clone",E,E,33,[[["self"]],[R[1013]]]],[11,"clone",E,E,77,[[["self"]],["strstyle"]]],[11,"clone",E,E,75,[[["self"]],[R[932]]]],[11,"clone",E,E,74,[[["self"]],[R[933]]]],[11,"clone",E,E,34,[[["self"]],["macro"]]],[11,"clone",E,E,78,[[["self"]],[R[1016]]]],[11,"clone",E,E,38,[[["self"]],[R[972]]]],[11,"clone",E,E,79,[[["self"]],["data"]]],[11,"clone",E,E,36,[[["self"]],[R[968]]]],[11,"clone",E,E,35,[[["self"]],["dataenum"]]],[11,"clone",E,E,37,[[["self"]],[R[970]]]],[11,"clone",E,E,80,[[["self"]],["binop"]]],[11,"clone",E,E,81,[[["self"]],["unop"]]],[11,"clone",E,E,84,[[["self"]],["type"]]],[11,"clone",E,E,52,[[["self"]],[R[1100]]]],[11,"clone",E,E,41,[[["self"]],[R[1101]]]],[11,"clone",E,E,50,[[["self"]],["typeptr"]]],[11,"clone",E,E,51,[[["self"]],[R[1054]]]],[11,"clone",E,E,42,[[["self"]],[R[1088]]]],[11,"clone",E,E,47,[[["self"]],[R[1102]]]],[11,"clone",E,E,54,[[["self"]],[R[1103]]]],[11,"clone",E,E,49,[[["self"]],["typepath"]]],[11,"clone",E,E,53,[[["self"]],[R[1057]]]],[11,"clone",E,E,44,[[["self"]],[R[1043]]]],[11,"clone",E,E,48,[[["self"]],[R[1104]]]],[11,"clone",E,E,43,[[["self"]],[R[1105]]]],[11,"clone",E,E,45,[[["self"]],[R[1106]]]],[11,"clone",E,E,46,[[["self"]],[R[1107]]]],[11,"clone",E,E,55,[[["self"]],[R[1060]]]],[11,"clone",E,E,39,[[["self"]],["abi"]]],[11,"clone",E,E,40,[[["self"]],[R[954]]]],[11,"clone",E,E,82,[[["self"]],[R[956]]]],[11,"clone",E,E,83,[[["self"]],[R[1089]]]],[11,"clone",E,E,60,[[["self"]],["path"]]],[11,"clone",E,E,61,[[["self"]],[R[1027]]]],[11,"clone",E,E,86,[[["self"]],[R[1025]]]],[11,"clone",E,E,85,[[["self"]],[R[997]]]],[11,"clone",E,E,56,[[["self"]],[R[948]]]],[11,"clone",E,E,57,[[["self"]],["binding"]]],[11,"clone",E,E,58,[[["self"]],[R[964]]]],[11,"clone",E,E,59,[[["self"]],[R[1023]]]],[11,"clone",E,E,62,[[["self"]],["qself"]]],[11,"clone",R[1080],E,198,[[["self"]],["cursor"]]],[11,"clone",R[1081],E,201,[[["self"]],[R[940]]]],[11,"clone",E,E,243,[[["self"]],["self"]]],[11,"clone",E,E,245,[[["self"]],["intopairs"]]],[11,"clone",E,E,246,[[["self"]],[R[174]]]],[11,"clone",E,E,247,[[["self"]],["self"]]],[11,"clone",E,E,200,[[["self"]],["pair"]]],[11,"clone",R[1082],E,207,[[["self"]],["stepcursor"]]],[11,"clone","syn",E,209,[[["self"]],["self"]]],[11,"cmp",E,E,31,[[["self"],[R[841]]],[R[31]]]],[11,"len",R[1081],E,243,[[["self"]],["usize"]]],[11,"len",E,E,244,[[["self"]],["usize"]]],[11,"len",E,E,245,[[["self"]],["usize"]]],[11,"len",E,E,246,[[["self"]],["usize"]]],[11,"len",E,E,247,[[["self"]],["usize"]]],[11,"len",E,E,248,[[["self"]],["usize"]]],[11,R[30],E,E,201,[[]]],[11,R[99],R[1083],E,87,[[],["self"]]],[11,R[99],E,E,88,[[],["self"]]],[11,R[99],E,E,89,[[],["self"]]],[11,R[99],E,E,90,[[],["self"]]],[11,R[99],E,E,91,[[],["self"]]],[11,R[99],E,E,92,[[],["self"]]],[11,R[99],E,E,93,[[],["self"]]],[11,R[99],E,E,94,[[],["self"]]],[11,R[99],E,E,95,[[],["self"]]],[11,R[99],E,E,96,[[],["self"]]],[11,R[99],E,E,97,[[],["self"]]],[11,R[99],E,E,98,[[],["self"]]],[11,R[99],E,E,99,[[],["self"]]],[11,R[99],E,E,100,[[],["self"]]],[11,R[99],E,E,101,[[],["self"]]],[11,R[99],E,E,102,[[],["self"]]],[11,R[99],E,E,103,[[],["self"]]],[11,R[99],E,E,104,[[],["self"]]],[11,R[99],E,E,105,[[],["self"]]],[11,R[99],E,E,106,[[],["self"]]],[11,R[99],E,E,107,[[],["self"]]],[11,R[99],E,E,108,[[],["self"]]],[11,R[99],E,E,109,[[],["self"]]],[11,R[99],E,E,110,[[],["self"]]],[11,R[99],E,E,111,[[],["self"]]],[11,R[99],E,E,112,[[],["self"]]],[11,R[99],E,E,113,[[],["self"]]],[11,R[99],E,E,114,[[],["self"]]],[11,R[99],E,E,115,[[],["self"]]],[11,R[99],E,E,116,[[],["self"]]],[11,R[99],E,E,117,[[],["self"]]],[11,R[99],E,E,118,[[],["self"]]],[11,R[99],E,E,119,[[],["self"]]],[11,R[99],E,E,120,[[],["self"]]],[11,R[99],E,E,121,[[],["self"]]],[11,R[99],E,E,122,[[],["self"]]],[11,R[99],E,E,123,[[],["self"]]],[11,R[99],E,E,124,[[],["self"]]],[11,R[99],E,E,125,[[],["self"]]],[11,R[99],E,E,126,[[],["self"]]],[11,R[99],E,E,127,[[],["self"]]],[11,R[99],E,E,128,[[],["self"]]],[11,R[99],E,E,129,[[],["self"]]],[11,R[99],E,E,130,[[],["self"]]],[11,R[99],E,E,131,[[],["self"]]],[11,R[99],E,E,132,[[],["self"]]],[11,R[99],E,E,133,[[],["self"]]],[11,R[99],E,E,134,[[],["self"]]],[11,R[99],E,E,135,[[],["self"]]],[11,R[99],E,E,136,[[],["self"]]],[11,R[99],E,E,137,[[],["self"]]],[11,R[99],E,E,138,[[],["self"]]],[11,R[99],E,E,139,[[],["self"]]],[11,R[99],E,E,140,[[],["self"]]],[11,R[99],E,E,141,[[],["self"]]],[11,R[99],E,E,142,[[],["self"]]],[11,R[99],E,E,143,[[],["self"]]],[11,R[99],E,E,144,[[],["self"]]],[11,R[99],E,E,145,[[],["self"]]],[11,R[99],E,E,146,[[],["self"]]],[11,R[99],E,E,147,[[],["self"]]],[11,R[99],E,E,148,[[],["self"]]],[11,R[99],E,E,149,[[],["self"]]],[11,R[99],E,E,150,[[],["self"]]],[11,R[99],E,E,151,[[],["self"]]],[11,R[99],E,E,152,[[],["self"]]],[11,R[99],E,E,153,[[],["self"]]],[11,R[99],E,E,154,[[],["self"]]],[11,R[99],E,E,155,[[],["self"]]],[11,R[99],E,E,156,[[],["self"]]],[11,R[99],E,E,157,[[],["self"]]],[11,R[99],E,E,158,[[],["self"]]],[11,R[99],E,E,159,[[],["self"]]],[11,R[99],E,E,160,[[],["self"]]],[11,R[99],E,E,161,[[],["self"]]],[11,R[99],E,E,162,[[],["self"]]],[11,R[99],E,E,163,[[],["self"]]],[11,R[99],E,E,164,[[],["self"]]],[11,R[99],E,E,165,[[],["self"]]],[11,R[99],E,E,166,[[],["self"]]],[11,R[99],E,E,167,[[],["self"]]],[11,R[99],E,E,168,[[],["self"]]],[11,R[99],E,E,169,[[],["self"]]],[11,R[99],E,E,170,[[],["self"]]],[11,R[99],E,E,171,[[],["self"]]],[11,R[99],E,E,172,[[],["self"]]],[11,R[99],E,E,173,[[],["self"]]],[11,R[99],E,E,174,[[],["self"]]],[11,R[99],E,E,175,[[],["self"]]],[11,R[99],E,E,176,[[],["self"]]],[11,R[99],E,E,177,[[],["self"]]],[11,R[99],E,E,178,[[],["self"]]],[11,R[99],E,E,179,[[],["self"]]],[11,R[99],E,E,180,[[],["self"]]],[11,R[99],E,E,181,[[],["self"]]],[11,R[99],E,E,182,[[],["self"]]],[11,R[99],E,E,183,[[],["self"]]],[11,R[99],E,E,184,[[],["self"]]],[11,R[99],E,E,185,[[],["self"]]],[11,R[99],E,E,186,[[],["self"]]],[11,R[99],E,E,187,[[],["self"]]],[11,R[99],E,E,188,[[],["self"]]],[11,R[99],E,E,189,[[],["self"]]],[11,R[99],"syn",E,23,[[],["generics"]]],[11,R[99],E,E,21,[[],[R[960]]]],[11,R[99],E,E,86,[[],["self"]]],[11,R[99],R[1081],E,201,[[],["self"]]],[11,"from","syn",E,210,[[["selfvalue"]],["ident"]]],[11,"from",E,E,210,[[["selftype"]],["ident"]]],[11,"from",E,E,210,[[["super"]],["ident"]]],[11,"from",E,E,210,[[["crate"]],["ident"]]],[11,"from",E,E,210,[[["extern"]],["ident"]]],[11,"from",E,E,210,[[["underscore"]],["ident"]]],[11,"from",E,E,64,[[["ident"]],["meta"]]],[11,"from",E,E,64,[[["metalist"]],["meta"]]],[11,"from",E,E,64,[[[R[1020]]],["meta"]]],[11,"from",E,E,65,[[["meta"]],[R[1084]]]],[11,"from",E,E,65,[[["lit"]],[R[1084]]]],[11,"from",E,E,66,[[[R[993]]],["fields"]]],[11,"from",E,E,66,[[[R[995]]],["fields"]]],[11,"from",E,E,67,[[[R[1090]]],[R[1085]]]],[11,"from",E,E,67,[[["viscrate"]],[R[1085]]]],[11,"from",E,E,67,[[[R[1066]]],[R[1085]]]],[11,"from",E,E,68,[[["exprbox"]],["expr"]]],[11,"from",E,E,68,[[[R[1091]]],["expr"]]],[11,"from",E,E,68,[[["exprarray"]],["expr"]]],[11,"from",E,E,68,[[["exprcall"]],["expr"]]],[11,"from",E,E,68,[[[R[1092]]],["expr"]]],[11,"from",E,E,68,[[["exprtuple"]],["expr"]]],[11,"from",E,E,68,[[[R[975]]],["expr"]]],[11,"from",E,E,68,[[[R[987]]],["expr"]]],[11,"from",E,E,68,[[["exprlit"]],["expr"]]],[11,"from",E,E,68,[[["exprcast"]],["expr"]]],[11,"from",E,E,68,[[["exprtype"]],["expr"]]],[11,"from",E,E,68,[[["exprlet"]],["expr"]]],[11,"from",E,E,68,[[["exprif"]],["expr"]]],[11,"from",E,E,68,[[["exprwhile"]],["expr"]]],[11,"from",E,E,68,[[[R[1093]]],["expr"]]],[11,"from",E,E,68,[[["exprloop"]],["expr"]]],[11,"from",E,E,68,[[["exprmatch"]],["expr"]]],[11,"from",E,E,68,[[[R[1094]]],["expr"]]],[11,"from",E,E,68,[[["exprunsafe"]],["expr"]]],[11,"from",E,E,68,[[["exprblock"]],["expr"]]],[11,"from",E,E,68,[[["exprassign"]],["expr"]]],[11,"from",E,E,68,[[[R[1095]]],["expr"]]],[11,"from",E,E,68,[[[R[979]]],["expr"]]],[11,"from",E,E,68,[[[R[981]]],["expr"]]],[11,"from",E,E,68,[[["exprrange"]],["expr"]]],[11,"from",E,E,68,[[["exprpath"]],["expr"]]],[11,"from",E,E,68,[[[R[1096]]],["expr"]]],[11,"from",E,E,68,[[["exprbreak"]],["expr"]]],[11,"from",E,E,68,[[[R[1097]]],["expr"]]],[11,"from",E,E,68,[[["exprreturn"]],["expr"]]],[11,"from",E,E,68,[[["exprmacro"]],["expr"]]],[11,"from",E,E,68,[[["exprstruct"]],["expr"]]],[11,"from",E,E,68,[[["exprrepeat"]],["expr"]]],[11,"from",E,E,68,[[[R[984]]],["expr"]]],[11,"from",E,E,68,[[["exprgroup"]],["expr"]]],[11,"from",E,E,68,[[["exprtry"]],["expr"]]],[11,"from",E,E,68,[[["exprasync"]],["expr"]]],[11,"from",E,E,68,[[[R[1098]]],["expr"]]],[11,"from",E,E,68,[[["expryield"]],["expr"]]],[11,"from",E,E,68,[[[R[989]]],["expr"]]],[11,"from",E,E,20,[[["usize"]],["index"]]],[11,"from",E,E,70,[[[R[1099]]],[R[999]]]],[11,"from",E,E,70,[[[R[1004]]],[R[999]]]],[11,"from",E,E,70,[[[R[962]]],[R[999]]]],[11,"from",E,E,29,[[["ident"]],["self"]]],[11,"from",E,E,72,[[[R[1086]]],[R[1049]]]],[11,"from",E,E,72,[[[R[841]]],[R[1049]]]],[11,"from",E,E,73,[[[R[1033]]],[R[1070]]]],[11,"from",E,E,73,[[[R[1031]]],[R[1070]]]],[11,"from",E,E,73,[[[R[1029]]],[R[1070]]]],[11,"from",E,E,76,[[["litstr"]],["lit"]]],[11,"from",E,E,76,[[[R[1087]]],["lit"]]],[11,"from",E,E,76,[[["litbyte"]],["lit"]]],[11,"from",E,E,76,[[["litchar"]],["lit"]]],[11,"from",E,E,76,[[["litint"]],["lit"]]],[11,"from",E,E,76,[[["litfloat"]],["lit"]]],[11,"from",E,E,76,[[["litbool"]],["lit"]]],[11,"from",E,E,76,[[[R[1013]]],["lit"]]],[11,"from",E,E,79,[[[R[968]]],["data"]]],[11,"from",E,E,79,[[["dataenum"]],["data"]]],[11,"from",E,E,79,[[[R[970]]],["data"]]],[11,"from",E,E,84,[[[R[1100]]],["type"]]],[11,"from",E,E,84,[[[R[1101]]],["type"]]],[11,"from",E,E,84,[[["typeptr"]],["type"]]],[11,"from",E,E,84,[[[R[1054]]],["type"]]],[11,"from",E,E,84,[[[R[1088]]],["type"]]],[11,"from",E,E,84,[[[R[1102]]],["type"]]],[11,"from",E,E,84,[[[R[1103]]],["type"]]],[11,"from",E,E,84,[[["typepath"]],["type"]]],[11,"from",E,E,84,[[[R[1057]]],["type"]]],[11,"from",E,E,84,[[[R[1043]]],["type"]]],[11,"from",E,E,84,[[[R[1104]]],["type"]]],[11,"from",E,E,84,[[[R[1105]]],["type"]]],[11,"from",E,E,84,[[[R[1106]]],["type"]]],[11,"from",E,E,84,[[[R[1107]]],["type"]]],[11,"from",E,E,84,[[[R[1060]]],["type"]]],[11,"from",E,E,60,[[[T]],["self"]]],[11,"from",E,E,61,[[[T]],["self"]]],[11,"from",E,E,209,[[["lexerror"]],["self"]]],[11,R[117],E,E,31,[[["self"],[R[841]]],[[R[31]],[R[32],[R[31]]]]]],[11,"eq",E,E,31,[[["self"],[R[841]]],["bool"]]],[11,"eq",R[1080],E,198,[[["self"],["cursor"]],["bool"]]],[11,"ne",E,E,198,[[["self"],["cursor"]],["bool"]]],[11,"next",R[1081],E,243,[[["self"]],[R[32]]]],[11,"next",E,E,244,[[["self"]],[R[32]]]],[11,"next",E,E,245,[[["self"]],[R[32]]]],[11,"next",E,E,246,[[["self"]],[R[32]]]],[11,"next",E,E,247,[[["self"]],[R[32]]]],[11,"next",E,E,248,[[["self"]],[R[32]]]],[11,"fmt",R[1082],E,208,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","syn",E,209,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",R[1082],E,208,[[["self"],[R[13]]],[R[2]]]],[11,"fmt","syn",E,209,[[["self"],[R[13]]],[R[2]]]],[11,"deref",R[1083],E,87,[[["self"]]]],[11,"deref",E,E,140,[[["self"]]]],[11,"deref",E,E,142,[[["self"]]]],[11,"deref",E,E,145,[[["self"]]]],[11,"deref",E,E,146,[[["self"]]]],[11,"deref",E,E,147,[[["self"]]]],[11,"deref",E,E,149,[[["self"]]]],[11,"deref",E,E,151,[[["self"]]]],[11,"deref",E,E,152,[[["self"]]]],[11,"deref",E,E,154,[[["self"]]]],[11,"deref",E,E,155,[[["self"]]]],[11,"deref",E,E,159,[[["self"]]]],[11,"deref",E,E,162,[[["self"]]]],[11,"deref",E,E,164,[[["self"]]]],[11,"deref",E,E,167,[[["self"]]]],[11,"deref",E,E,170,[[["self"]]]],[11,"deref",E,E,171,[[["self"]]]],[11,"deref",E,E,174,[[["self"]]]],[11,"deref",E,E,177,[[["self"]]]],[11,"deref",E,E,182,[[["self"]]]],[11,"deref",E,E,183,[[["self"]]]],[11,"deref",E,E,185,[[["self"]]]],[11,"deref",R[1082],E,207,[[["self"]]]],[11,R[14],R[1083],E,87,[[["self"]]]],[11,R[14],E,E,140,[[["self"]]]],[11,R[14],E,E,142,[[["self"]]]],[11,R[14],E,E,145,[[["self"]]]],[11,R[14],E,E,146,[[["self"]]]],[11,R[14],E,E,147,[[["self"]]]],[11,R[14],E,E,149,[[["self"]]]],[11,R[14],E,E,151,[[["self"]]]],[11,R[14],E,E,152,[[["self"]]]],[11,R[14],E,E,154,[[["self"]]]],[11,R[14],E,E,155,[[["self"]]]],[11,R[14],E,E,159,[[["self"]]]],[11,R[14],E,E,162,[[["self"]]]],[11,R[14],E,E,164,[[["self"]]]],[11,R[14],E,E,167,[[["self"]]]],[11,R[14],E,E,170,[[["self"]]]],[11,R[14],E,E,171,[[["self"]]]],[11,R[14],E,E,174,[[["self"]]]],[11,R[14],E,E,177,[[["self"]]]],[11,R[14],E,E,182,[[["self"]]]],[11,R[14],E,E,183,[[["self"]]]],[11,R[14],E,E,185,[[["self"]]]],[11,"index",R[1081],E,201,[[["self"],["usize"]]]],[11,R[1511],E,E,201,[[["self"],["usize"]]]],[11,"hash","syn",E,31,[[["self"],["h"]]]],[11,R[176],R[1081],E,201,[[[R[120]]],["self"]]],[11,R[176],E,E,201,[[[R[120]]],["self"]]],[11,R[409],"syn",E,209,[[["self"]],["str"]]],[11,R[1108],R[1083],E,87,[[["self"],[R[167]]]]],[11,R[1108],E,E,88,[[["self"],[R[167]]]]],[11,R[1108],E,E,89,[[["self"],[R[167]]]]],[11,R[1108],E,E,90,[[["self"],[R[167]]]]],[11,R[1108],E,E,91,[[["self"],[R[167]]]]],[11,R[1108],E,E,92,[[["self"],[R[167]]]]],[11,R[1108],E,E,93,[[["self"],[R[167]]]]],[11,R[1108],E,E,94,[[["self"],[R[167]]]]],[11,R[1108],E,E,95,[[["self"],[R[167]]]]],[11,R[1108],E,E,96,[[["self"],[R[167]]]]],[11,R[1108],E,E,97,[[["self"],[R[167]]]]],[11,R[1108],E,E,98,[[["self"],[R[167]]]]],[11,R[1108],E,E,99,[[["self"],[R[167]]]]],[11,R[1108],E,E,100,[[["self"],[R[167]]]]],[11,R[1108],E,E,101,[[["self"],[R[167]]]]],[11,R[1108],E,E,102,[[["self"],[R[167]]]]],[11,R[1108],E,E,103,[[["self"],[R[167]]]]],[11,R[1108],E,E,104,[[["self"],[R[167]]]]],[11,R[1108],E,E,105,[[["self"],[R[167]]]]],[11,R[1108],E,E,106,[[["self"],[R[167]]]]],[11,R[1108],E,E,107,[[["self"],[R[167]]]]],[11,R[1108],E,E,108,[[["self"],[R[167]]]]],[11,R[1108],E,E,109,[[["self"],[R[167]]]]],[11,R[1108],E,E,110,[[["self"],[R[167]]]]],[11,R[1108],E,E,111,[[["self"],[R[167]]]]],[11,R[1108],E,E,112,[[["self"],[R[167]]]]],[11,R[1108],E,E,113,[[["self"],[R[167]]]]],[11,R[1108],E,E,114,[[["self"],[R[167]]]]],[11,R[1108],E,E,115,[[["self"],[R[167]]]]],[11,R[1108],E,E,116,[[["self"],[R[167]]]]],[11,R[1108],E,E,117,[[["self"],[R[167]]]]],[11,R[1108],E,E,118,[[["self"],[R[167]]]]],[11,R[1108],E,E,119,[[["self"],[R[167]]]]],[11,R[1108],E,E,120,[[["self"],[R[167]]]]],[11,R[1108],E,E,121,[[["self"],[R[167]]]]],[11,R[1108],E,E,122,[[["self"],[R[167]]]]],[11,R[1108],E,E,123,[[["self"],[R[167]]]]],[11,R[1108],E,E,124,[[["self"],[R[167]]]]],[11,R[1108],E,E,125,[[["self"],[R[167]]]]],[11,R[1108],E,E,126,[[["self"],[R[167]]]]],[11,R[1108],E,E,127,[[["self"],[R[167]]]]],[11,R[1108],E,E,128,[[["self"],[R[167]]]]],[11,R[1108],E,E,129,[[["self"],[R[167]]]]],[11,R[1108],E,E,130,[[["self"],[R[167]]]]],[11,R[1108],E,E,131,[[["self"],[R[167]]]]],[11,R[1108],E,E,132,[[["self"],[R[167]]]]],[11,R[1108],E,E,133,[[["self"],[R[167]]]]],[11,R[1108],E,E,134,[[["self"],[R[167]]]]],[11,R[1108],E,E,135,[[["self"],[R[167]]]]],[11,R[1108],E,E,136,[[["self"],[R[167]]]]],[11,R[1108],E,E,137,[[["self"],[R[167]]]]],[11,R[1108],E,E,138,[[["self"],[R[167]]]]],[11,R[1108],E,E,139,[[["self"],[R[167]]]]],[11,R[1108],E,E,140,[[["self"],[R[167]]]]],[11,R[1108],E,E,141,[[["self"],[R[167]]]]],[11,R[1108],E,E,142,[[["self"],[R[167]]]]],[11,R[1108],E,E,143,[[["self"],[R[167]]]]],[11,R[1108],E,E,144,[[["self"],[R[167]]]]],[11,R[1108],E,E,145,[[["self"],[R[167]]]]],[11,R[1108],E,E,146,[[["self"],[R[167]]]]],[11,R[1108],E,E,147,[[["self"],[R[167]]]]],[11,R[1108],E,E,148,[[["self"],[R[167]]]]],[11,R[1108],E,E,149,[[["self"],[R[167]]]]],[11,R[1108],E,E,150,[[["self"],[R[167]]]]],[11,R[1108],E,E,151,[[["self"],[R[167]]]]],[11,R[1108],E,E,152,[[["self"],[R[167]]]]],[11,R[1108],E,E,153,[[["self"],[R[167]]]]],[11,R[1108],E,E,154,[[["self"],[R[167]]]]],[11,R[1108],E,E,155,[[["self"],[R[167]]]]],[11,R[1108],E,E,156,[[["self"],[R[167]]]]],[11,R[1108],E,E,157,[[["self"],[R[167]]]]],[11,R[1108],E,E,158,[[["self"],[R[167]]]]],[11,R[1108],E,E,159,[[["self"],[R[167]]]]],[11,R[1108],E,E,160,[[["self"],[R[167]]]]],[11,R[1108],E,E,161,[[["self"],[R[167]]]]],[11,R[1108],E,E,162,[[["self"],[R[167]]]]],[11,R[1108],E,E,163,[[["self"],[R[167]]]]],[11,R[1108],E,E,164,[[["self"],[R[167]]]]],[11,R[1108],E,E,165,[[["self"],[R[167]]]]],[11,R[1108],E,E,166,[[["self"],[R[167]]]]],[11,R[1108],E,E,167,[[["self"],[R[167]]]]],[11,R[1108],E,E,168,[[["self"],[R[167]]]]],[11,R[1108],E,E,169,[[["self"],[R[167]]]]],[11,R[1108],E,E,170,[[["self"],[R[167]]]]],[11,R[1108],E,E,171,[[["self"],[R[167]]]]],[11,R[1108],E,E,172,[[["self"],[R[167]]]]],[11,R[1108],E,E,173,[[["self"],[R[167]]]]],[11,R[1108],E,E,174,[[["self"],[R[167]]]]],[11,R[1108],E,E,175,[[["self"],[R[167]]]]],[11,R[1108],E,E,176,[[["self"],[R[167]]]]],[11,R[1108],E,E,177,[[["self"],[R[167]]]]],[11,R[1108],E,E,178,[[["self"],[R[167]]]]],[11,R[1108],E,E,179,[[["self"],[R[167]]]]],[11,R[1108],E,E,180,[[["self"],[R[167]]]]],[11,R[1108],E,E,181,[[["self"],[R[167]]]]],[11,R[1108],E,E,182,[[["self"],[R[167]]]]],[11,R[1108],E,E,183,[[["self"],[R[167]]]]],[11,R[1108],E,E,184,[[["self"],[R[167]]]]],[11,R[1108],E,E,185,[[["self"],[R[167]]]]],[11,R[1108],"syn",E,64,[[["self"],[R[167]]]]],[11,R[1108],E,E,65,[[["self"],[R[167]]]]],[11,R[1108],E,E,0,[[["self"],[R[167]]]]],[11,R[1108],E,E,1,[[["self"],[R[167]]]]],[11,R[1108],E,E,2,[[["self"],[R[167]]]]],[11,R[1108],E,E,66,[[["self"],[R[167]]]]],[11,R[1108],E,E,67,[[["self"],[R[167]]]]],[11,R[1108],E,E,6,[[["self"],[R[167]]]]],[11,R[1108],E,E,4,[[["self"],[R[167]]]]],[11,R[1108],E,E,5,[[["self"],[R[167]]]]],[11,R[1108],E,E,3,[[["self"],[R[167]]]]],[11,R[1108],E,E,8,[[["self"],[R[167]]]]],[11,R[1108],E,E,7,[[["self"],[R[167]]]]],[11,R[1108],E,E,9,[[["self"],[R[167]]]]],[11,R[1108],E,E,68,[[["self"],[R[167]]]]],[11,R[1108],E,E,11,[[["self"],[R[167]]]]],[11,R[1108],E,E,10,[[["self"],[R[167]]]]],[11,R[1108],E,E,18,[[["self"],[R[167]]]]],[11,R[1108],E,E,15,[[["self"],[R[167]]]]],[11,R[1108],E,E,12,[[["self"],[R[167]]]]],[11,R[1108],E,E,13,[[["self"],[R[167]]]]],[11,R[1108],E,E,69,[[["self"],[R[167]]]]],[11,R[1108],E,E,20,[[["self"],[R[167]]]]],[11,R[1108],E,E,14,[[["self"],[R[167]]]]],[11,R[1108],E,E,17,[[["self"],[R[167]]]]],[11,R[1108],E,E,16,[[["self"],[R[167]]]]],[11,R[1108],E,E,19,[[["self"],[R[167]]]]],[11,R[1108],E,E,70,[[["self"],[R[167]]]]],[11,R[1108],E,E,72,[[["self"],[R[167]]]]],[11,R[1108],E,E,73,[[["self"],[R[167]]]]],[11,R[1108],E,E,23,[[["self"],[R[167]]]]],[11,R[1108],E,E,241,[[["self"],[R[167]]]]],[11,R[1108],E,E,190,[[["self"],[R[167]]]]],[11,R[1108],E,E,242,[[["self"],[R[167]]]]],[11,R[1108],E,E,21,[[["self"],[R[167]]]]],[11,R[1108],E,E,24,[[["self"],[R[167]]]]],[11,R[1108],E,E,29,[[["self"],[R[167]]]]],[11,R[1108],E,E,28,[[["self"],[R[167]]]]],[11,R[1108],E,E,71,[[["self"],[R[167]]]]],[11,R[1108],E,E,22,[[["self"],[R[167]]]]],[11,R[1108],E,E,30,[[["self"],[R[167]]]]],[11,R[1108],E,E,27,[[["self"],[R[167]]]]],[11,R[1108],E,E,26,[[["self"],[R[167]]]]],[11,R[1108],E,E,25,[[["self"],[R[167]]]]],[11,R[1108],E,E,31,[[["self"],[R[167]]]]],[11,R[1108],E,E,76,[[["self"],[R[167]]]]],[11,R[1108],E,E,191,[[["self"],[R[167]]]]],[11,R[1108],E,E,192,[[["self"],[R[167]]]]],[11,R[1108],E,E,193,[[["self"],[R[167]]]]],[11,R[1108],E,E,194,[[["self"],[R[167]]]]],[11,R[1108],E,E,195,[[["self"],[R[167]]]]],[11,R[1108],E,E,196,[[["self"],[R[167]]]]],[11,R[1108],E,E,32,[[["self"],[R[167]]]]],[11,R[1108],E,E,33,[[["self"],[R[167]]]]],[11,R[1108],E,E,34,[[["self"],[R[167]]]]],[11,R[1108],E,E,38,[[["self"],[R[167]]]]],[11,R[1108],E,E,80,[[["self"],[R[167]]]]],[11,R[1108],E,E,81,[[["self"],[R[167]]]]],[11,R[1108],E,E,84,[[["self"],[R[167]]]]],[11,R[1108],E,E,52,[[["self"],[R[167]]]]],[11,R[1108],E,E,41,[[["self"],[R[167]]]]],[11,R[1108],E,E,50,[[["self"],[R[167]]]]],[11,R[1108],E,E,51,[[["self"],[R[167]]]]],[11,R[1108],E,E,42,[[["self"],[R[167]]]]],[11,R[1108],E,E,47,[[["self"],[R[167]]]]],[11,R[1108],E,E,54,[[["self"],[R[167]]]]],[11,R[1108],E,E,49,[[["self"],[R[167]]]]],[11,R[1108],E,E,53,[[["self"],[R[167]]]]],[11,R[1108],E,E,44,[[["self"],[R[167]]]]],[11,R[1108],E,E,43,[[["self"],[R[167]]]]],[11,R[1108],E,E,48,[[["self"],[R[167]]]]],[11,R[1108],E,E,45,[[["self"],[R[167]]]]],[11,R[1108],E,E,46,[[["self"],[R[167]]]]],[11,R[1108],E,E,55,[[["self"],[R[167]]]]],[11,R[1108],E,E,83,[[["self"],[R[167]]]]],[11,R[1108],E,E,40,[[["self"],[R[167]]]]],[11,R[1108],E,E,82,[[["self"],[R[167]]]]],[11,R[1108],E,E,39,[[["self"],[R[167]]]]],[11,R[1108],E,E,60,[[["self"],[R[167]]]]],[11,R[1108],E,E,61,[[["self"],[R[167]]]]],[11,R[1108],E,E,86,[[["self"],[R[167]]]]],[11,R[1108],E,E,85,[[["self"],[R[167]]]]],[11,R[1108],E,E,56,[[["self"],[R[167]]]]],[11,R[1108],E,E,57,[[["self"],[R[167]]]]],[11,R[1108],E,E,58,[[["self"],[R[167]]]]],[11,R[1108],E,E,59,[[["self"],[R[167]]]]],[11,R[1108],R[1081],E,201,[[["self"],[R[167]]]]],[11,R[1108],E,E,200,[[["self"],[R[167]]]]],[11,"new","syn",R[1109],210,[[["str"],["span"]],["ident"]]],[11,"span",E,R[1110],210,[[["self"]],["span"]]],[11,R[169],E,R[1111],210,[[["self"],["span"]]]],[11,R[946],"syn::visit",E,203,[[["self"],["abi"]]]],[11,R[947],E,E,203,[[["self"],[R[948]]]]],[11,R[949],E,E,203,[[["self"],[R[950]]]]],[11,R[951],E,E,203,[[["self"],[R[952]]]]],[11,R[953],E,E,203,[[["self"],[R[954]]]]],[11,R[955],E,E,203,[[["self"],[R[956]]]]],[11,R[957],E,E,203,[[["self"],["binop"]]]],[11,R[958],E,E,203,[[["self"],["binding"]]]],[11,R[959],E,E,203,[[["self"],[R[960]]]]],[11,R[961],E,E,203,[[["self"],[R[962]]]]],[11,R[963],E,E,203,[[["self"],[R[964]]]]],[11,R[965],E,E,203,[[["self"],["data"]]]],[11,R[966],E,E,203,[[["self"],["dataenum"]]]],[11,R[967],E,E,203,[[["self"],[R[968]]]]],[11,R[969],E,E,203,[[["self"],[R[970]]]]],[11,R[971],E,E,203,[[["self"],[R[972]]]]],[11,R[973],E,E,203,[[["self"],["expr"]]]],[11,R[974],E,E,203,[[["self"],[R[975]]]]],[11,R[976],E,E,203,[[["self"],["exprcall"]]]],[11,R[977],E,E,203,[[["self"],["exprcast"]]]],[11,R[978],E,E,203,[[["self"],[R[979]]]]],[11,R[980],E,E,203,[[["self"],[R[981]]]]],[11,R[982],E,E,203,[[["self"],["exprlit"]]]],[11,R[983],E,E,203,[[["self"],[R[984]]]]],[11,R[985],E,E,203,[[["self"],["exprpath"]]]],[11,R[986],E,E,203,[[["self"],[R[987]]]]],[11,R[988],E,E,203,[[["self"],[R[989]]]]],[11,R[990],E,E,203,[[["self"],["field"]]]],[11,R[991],E,E,203,[[["self"],["fields"]]]],[11,R[992],E,E,203,[[["self"],[R[993]]]]],[11,R[994],E,E,203,[[["self"],[R[995]]]]],[11,R[996],E,E,203,[[["self"],[R[997]]]]],[11,R[998],E,E,203,[[["self"],[R[999]]]]],[11,R[1000],E,E,203,[[["self"],["generics"]]]],[11,R[1001],E,E,203,[[["self"],["index"]]]],[11,R[1002],E,E,203,[[["self"],[R[841]]]]],[11,R[1003],E,E,203,[[["self"],[R[1004]]]]],[11,"visit_lit",E,E,203,[[["self"],["lit"]]]],[11,R[1005],E,E,203,[[["self"],["litbool"]]]],[11,R[1006],E,E,203,[[["self"],["litbyte"]]]],[11,R[1007],E,E,203,[[["self"],[R[1087]]]]],[11,R[1008],E,E,203,[[["self"],["litchar"]]]],[11,R[1009],E,E,203,[[["self"],["litfloat"]]]],[11,R[1010],E,E,203,[[["self"],["litint"]]]],[11,R[1011],E,E,203,[[["self"],["litstr"]]]],[11,R[1012],E,E,203,[[["self"],[R[1013]]]]],[11,R[1014],E,E,203,[[["self"],["macro"]]]],[11,R[1015],E,E,203,[[["self"],[R[1016]]]]],[11,R[1017],E,E,203,[[["self"],["member"]]]],[11,R[1112],E,E,203,[[["self"],["meta"]]]],[11,R[1018],E,E,203,[[["self"],["metalist"]]]],[11,R[1019],E,E,203,[[["self"],[R[1020]]]]],[11,R[1021],E,E,203,[[["self"],[R[1084]]]]],[11,R[1022],E,E,203,[[["self"],[R[1023]]]]],[11,R[1113],E,E,203,[[["self"],["path"]]]],[11,R[1024],E,E,203,[[["self"],[R[1025]]]]],[11,R[1026],E,E,203,[[["self"],[R[1027]]]]],[11,R[1028],E,E,203,[[["self"],[R[1029]]]]],[11,R[1030],E,E,203,[[["self"],[R[1031]]]]],[11,R[1032],E,E,203,[[["self"],[R[1033]]]]],[11,R[1034],E,E,203,[[["self"],["qself"]]]],[11,R[1035],E,E,203,[[["self"],[R[1089]]]]],[11,R[1036],E,E,203,[[["self"],[R[1086]]]]],[11,R[1037],E,E,203,[[["self"],[R[1038]]]]],[11,R[1114],E,E,203,[[["self"],["type"]]]],[11,R[1039],E,E,203,[[["self"],[R[1101]]]]],[11,R[1040],E,E,203,[[["self"],[R[1088]]]]],[11,R[1041],E,E,203,[[["self"],[R[1105]]]]],[11,R[1042],E,E,203,[[["self"],[R[1043]]]]],[11,R[1044],E,E,203,[[["self"],[R[1106]]]]],[11,R[1045],E,E,203,[[["self"],[R[1107]]]]],[11,R[1046],E,E,203,[[["self"],[R[1102]]]]],[11,R[1047],E,E,203,[[["self"],[R[1099]]]]],[11,R[1048],E,E,203,[[["self"],[R[1049]]]]],[11,R[1050],E,E,203,[[["self"],[R[1104]]]]],[11,R[1051],E,E,203,[[["self"],["typepath"]]]],[11,R[1052],E,E,203,[[["self"],["typeptr"]]]],[11,R[1053],E,E,203,[[["self"],[R[1054]]]]],[11,R[1055],E,E,203,[[["self"],[R[1100]]]]],[11,R[1056],E,E,203,[[["self"],[R[1057]]]]],[11,R[1058],E,E,203,[[["self"],[R[1103]]]]],[11,R[1059],E,E,203,[[["self"],[R[1060]]]]],[11,R[1061],E,E,203,[[["self"],["unop"]]]],[11,R[1062],E,E,203,[[["self"],["variant"]]]],[11,R[1063],E,E,203,[[["self"],["viscrate"]]]],[11,R[1064],E,E,203,[[["self"],[R[1090]]]]],[11,R[1065],E,E,203,[[["self"],[R[1066]]]]],[11,R[1067],E,E,203,[[["self"],[R[1085]]]]],[11,R[1068],E,E,203,[[["self"],[R[944]]]]],[11,R[1069],E,E,203,[[["self"],[R[1070]]]]],[11,R[1115],E,E,203,[[["self"],["span"]]]],[11,R[1071],E,E,203,[[["self"],["ident"]]]],[11,"peek",R[1082],R[1116],249,[[["self"],["peek"]],["bool"]]],[11,"error",E,R[1078],249,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,R[1117]],[3,"Field"],[3,R[1118]],[3,R[1119]],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,R[1120]],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,R[1121]],[3,"Index"],[3,R[1122]],[3,"ConstParam"],[3,"Generics"],[3,R[1123]],[3,R[1124]],[3,R[1125]],[3,R[1126]],[3,"TraitBound"],[3,"TypeParam"],[3,R[1127]],[3,R[895]],[3,"LitBool"],[3,R[1128]],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,R[1129]],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,R[1130]],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,R[1131]],[3,"TypeSlice"],[3,R[1132]],[3,"TypeTuple"],[3,R[1133]],[3,R[1134]],[3,"Binding"],[3,R[927]],[3,R[1135]],[3,"Path"],[3,R[1136]],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,R[1137]],[4,R[1138]],[4,R[1139]],[4,R[1140]],[4,R[1141]],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,R[1142]],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,R[1143]],[4,"ReturnType"],[4,"Type"],[4,R[1144]],[4,R[1145]],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,R[929]],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,R[1146]],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,R[1147]],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,R[1148]],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,R[939]],[8,"Spanned"],[8,"Visit"],[8,R[1149]],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,R[1150]],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,R[1151]],[3,"ExprAsync"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,R[1152]],[3,R[1153]],[3,R[1154]],[3,"ExprGroup"],[3,"ExprIf"],[3,R[1155]],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,R[1156]],[3,"ExprRange"],[3,R[1157]],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,R[1158]],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,R[1159]],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,R[165]],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["textwrap"]={"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,R[68],"textwrap","Simple and default way to split words: splitting on…",N,N],[3,R[69],E,"Use this as a [`Wrapper.splitter`] to avoid any kind of…",N,N],[3,"Wrapper",E,"A Wrapper holds settings for wrapping and filling text.…",N,N],[12,"width",E,"The width in columns at which the text will be wrapped.",0,N],[12,R[59],E,"Indentation used for the first line of output.",0,N],[12,R[61],E,"Indentation used for subsequent lines of output.",0,N],[12,R[62],E,"Allow long words to be broken if they cannot fit on a…",0,N],[12,"splitter",E,"The method for splitting words. If the `hyphenation`…",0,N],[3,R[70],E,"An iterator over the lines of the input string which owns…",N,N],[3,R[71],E,"An iterator over the lines of the input string which…",N,N],[5,"dedent",E,"Removes common leading whitespace from each line.",N,[[["str"]],[R[63]]]],[5,"indent",E,"Add prefix to each non-empty line.",N,[[["str"]],[R[63]]]],[5,"fill",E,"Fill a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[R[63]]]],[5,"wrap",E,"Wrap a line of text at `width` characters. Strings are…",N,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,R[64],E,"Lazily wrap a line of text at `width` characters. Strings…",N,[[["str"],["usize"]],[[R[66],[R[58]]],[R[58]]]]],[8,R[67],E,"An interface for splitting words.",N,N],[10,"split",E,"Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new",E,"Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[[R[60],[R[58]]],[R[58]]]]],[11,"with_splitter",E,"Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],[R[60]]]],[11,R[59],E,"Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],[R[60]]]],[11,R[61],E,"Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],[R[60]]]],[11,R[62],E,"Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],[R[60]]]],[11,"fill",E,"Fill a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],[R[63]]]],[11,"wrap",E,"Wrap a line of text at `self.width` characters. Strings…",0,[[["self"],["str"]],[["vec",["cow"]],["cow",["str"]]]]],[11,R[64],E,R[65],0,[[["self"],["str"]],["wrapiter"]]],[11,"into_wrap_iter",E,R[65],0,[[["str"]],[R[66]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[37],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"],[T]]]],[11,R[7],E,E,2,[[[U]],[R[2]]]],[11,R[8],E,E,2,[[],[R[2]]]],[11,R[10],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[T]]],[11,R[11],E,E,2,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[37],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"],[T]]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,R[30],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,R[30],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"split",E,E,3,[[["self"],["str"]],["vec"]]],[11,"split",E,E,2,[[["self"],["str"]],["vec"]]],[11,"clone",E,E,3,[[["self"]],["nohyphenation"]]],[11,"clone",E,E,2,[[["self"]],[R[58]]]],[11,"clone",E,E,0,[[["self"]],[R[60]]]],[11,"next",E,E,4,[[["self"]],[["cow",["str"]],[R[32],["cow"]]]]],[11,"next",E,E,5,[[["self"]],[["cow",["str"]],[R[32],["cow"]]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]]],"p":[[3,"Wrapper"],[8,R[67]],[3,R[68]],[3,R[69]],[3,R[70]],[3,R[71]]]};
searchIndex["tinytemplate"]={"doc":R[2308],"i":[[3,R[2308],R[2311],"The TinyTemplate struct is the entry point for the…",N,N],[5,"escape",E,"Appends `value` to `output`, performing HTML-escaping in…",N,[[["str"],[R[63]]]]],[5,"format",E,"The format function is used as the default value formatter…",N,[[["value"],[R[63]]],[R[2]]]],[5,"format_unescaped",E,"Identical to `format` except that this does not perform…",N,[[["value"],[R[63]]],[R[2]]]],[0,"error",E,"Module containing the error type returned by TinyTemplate…",N,N],[4,"Error",R[2309],"Enum representing the potential errors that TinyTemplate…",N,N],[13,"ParseError",E,E,0,N],[12,"msg",R[2310],E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,"RenderError",R[2309],E,0,N],[12,"msg",R[2310],E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,"SerdeError",R[2309],E,0,N],[12,"err",R[2310],E,0,N],[13,"GenericError",R[2309],E,0,N],[12,"msg",R[2310],E,0,N],[13,"StdFormatError",R[2309],E,0,N],[12,"err",R[2310],E,0,N],[13,"CalledTemplateError",R[2309],E,0,N],[12,"name",R[2310],E,0,N],[12,"err",E,E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,"CalledFormatterError",R[2309],E,0,N],[12,"name",R[2310],E,0,N],[12,"err",E,E,0,N],[12,"line",E,E,0,N],[12,"column",E,E,0,N],[13,"__NonExhaustive",R[2309],E,0,N],[6,"Result",E,E,N,N],[0,"syntax",R[2311],"Documentation of TinyTemplate's template syntax.",N,N],[6,R[2444],E,"Type alias for closures which can be used as value…",N,N],[11,"new",E,"Create a new TinyTemplate registry. The returned registry…",1,[[],[R[2311]]]],[11,"add_template",E,"Parse and compile the given template, then register it…",1,[[["self"],["str"]],[R[2]]]],[11,"add_formatter",E,"Register the given formatter function under the given name.",1,[[["self"],["str"],["f"]]]],[11,"render",E,"Render the template with the given name using the given…",1,[[["self"],["str"],["c"]],[[R[63]],[R[2],[R[63]]]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",R[2309],E,0,[[],[U]]],[11,R[95],E,E,0,[[["self"]],[R[63]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,R[99],R[2311],E,1,[[],[R[2311]]]],[11,"from",R[2309],E,0,[[["serdejsonerror"]],["error"]]],[11,"from",E,E,0,[[["error"]],["error"]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,0,[[["self"]],["str"]]]],"p":[[4,"Error"],[3,R[2308]]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","i":[[17,R[23],"unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,R[21],E,"Methods for determining displayed width of Unicode…",N,N],[10,"width",E,R[18],0,[[],[[R[32],["usize"]],["usize"]]]],[10,R[19],E,R[18],0,[[],[[R[32],["usize"]],["usize"]]]],[8,R[22],E,"Methods for determining displayed width of Unicode strings.",N,N],[10,"width",E,R[20],1,[[["self"]],["usize"]]],[10,R[19],E,R[20],1,[[["self"]],["usize"]]]],"p":[[8,R[21]],[8,R[22]]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,R[23],"unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,R[17],E,"Methods for determining if a character is a valid…",N,N],[10,"is_xid_start",E,"Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue",E,"Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,R[17]]]};
searchIndex["walkdir"]={"doc":"Crate `walkdir` provides an efficient and cross platform…","i":[[3,"DirEntry","walkdir","A directory entry.",N,N],[3,"Error",E,"An error produced by recursively walking a directory.",N,N],[3,"WalkDir",E,"A builder to create an iterator for recursively walking a…",N,N],[3,R[165],E,"An iterator for recursively descending into a directory.",N,N],[3,R[411],E,"A recursive directory iterator that skips entries.",N,N],[11,"path",E,R[399],0,[[["self"]],["path"]]],[11,"into_path",E,R[399],0,[[],["pathbuf"]]],[11,"path_is_symlink",E,"Returns `true` if and only if this entry was created from…",0,[[["self"]],["bool"]]],[11,R[400],E,"Return the metadata for the file that this entry points to.",0,[[["self"]],[[R[2],[R[400]]],[R[400]]]]],[11,"file_type",E,"Return the file type for the file that this entry points to.",0,[[["self"]],["filetype"]]],[11,"file_name",E,"Return the file name of this entry.",0,[[["self"]],["osstr"]]],[11,"depth",E,"Returns the depth at which this entry was created relative…",0,[[["self"]],["usize"]]],[11,"path",E,"Returns the path associated with this error if one exists.",1,[[["self"]],[[R[32],["path"]],["path"]]]],[11,"loop_ancestor",E,"Returns the path at which a cycle was detected.",1,[[["self"]],[[R[32],["path"]],["path"]]]],[11,"depth",E,"Returns the depth at which this error occurred relative to…",1,[[["self"]],["usize"]]],[11,"io_error",E,"Inspect the original [`io::Error`] if there is one.",1,[[["self"]],[["error"],[R[32],["error"]]]]],[11,"into_io_error",E,"Similar to [`io_error`] except consumes self to convert to…",1,[[],[["error"],[R[32],["error"]]]]],[6,"Result",E,"A result type for walkdir operations.",N,N],[8,R[410],E,"Unix-specific extension methods for `walkdir::DirEntry`",N,N],[10,"ino",E,R[406],2,[[["self"]],["u64"]]],[11,"new",E,"Create a builder for a recursive directory iterator…",3,[[["path"],["asref",["path"]]],["self"]]],[11,"min_depth",E,"Set the minimum depth of entries yielded by the iterator.",3,[[["usize"]],["self"]]],[11,"max_depth",E,"Set the maximum depth of entries yield by the iterator.",3,[[["usize"]],["self"]]],[11,"follow_links",E,"Follow symbolic links. By default, this is disabled.",3,[[["bool"]],["self"]]],[11,"max_open",E,"Set the maximum number of simultaneously open file…",3,[[["usize"]],["self"]]],[11,"sort_by",E,"Set a function for sorting directory entries.",3,[[["f"]],["self"]]],[11,"contents_first",E,"Yield a directory's contents before the directory itself.…",3,[[["bool"]],["self"]]],[11,"same_file_system",E,"Do not cross file system boundaries.",3,[[["bool"]],["self"]]],[11,R[404],E,R[405],4,[[["self"]]]],[11,R[401],E,R[402],4,[[["p"]],[R[403]]]],[11,R[401],E,R[402],5,[[["p"]],[R[403]]]],[11,R[404],E,R[405],5,[[["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[37],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"],[T]]]],[11,R[7],E,E,0,[[[U]],[R[2]]]],[11,R[8],E,E,0,[[],[R[2]]]],[11,R[10],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[T]]],[11,R[11],E,E,0,[[["self"]],[R[34]]]],[11,"into",E,E,1,[[],[U]]],[11,R[95],E,E,1,[[["self"]],[R[63]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[[U]],[R[2]]]],[11,R[8],E,E,1,[[],[R[2]]]],[11,R[10],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[T]]],[11,R[11],E,E,1,[[["self"]],[R[34]]]],[11,"into",E,E,3,[[],[U]]],[11,R[30],E,E,3,[[],["i"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[[U]],[R[2]]]],[11,R[8],E,E,3,[[],[R[2]]]],[11,R[10],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[T]]],[11,R[11],E,E,3,[[["self"]],[R[34]]]],[11,"into",E,E,4,[[],[U]]],[11,R[30],E,E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[[U]],[R[2]]]],[11,R[8],E,E,4,[[],[R[2]]]],[11,R[10],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[T]]],[11,R[11],E,E,4,[[["self"]],[R[34]]]],[11,"into",E,E,5,[[],[U]]],[11,R[30],E,E,5,[[],["i"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[7],E,E,5,[[[U]],[R[2]]]],[11,R[8],E,E,5,[[],[R[2]]]],[11,R[10],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[T]]],[11,R[11],E,E,5,[[["self"]],[R[34]]]],[11,"ino",E,R[406],0,[[["self"]],["u64"]]],[11,"clone",E,E,0,[[["self"]],[R[408]]]],[11,R[30],E,E,3,[[],[R[174]]]],[11,"next",E,R[407],4,[[["self"]],[[R[2],[R[408]]],[R[32],[R[2]]]]]],[11,"next",E,R[407],5,[[["self"]],[[R[2],[R[408]]],[R[32],[R[2]]]]]],[11,"fmt",E,E,0,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[13]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[13]]],[R[2]]]],[11,R[409],E,E,1,[[["self"]],["str"]]],[11,"cause",E,E,1,[[["self"]],[["error"],[R[32],["error"]]]]]],"p":[[3,"DirEntry"],[3,"Error"],[8,R[410]],[3,"WalkDir"],[3,R[165]],[3,R[411]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);