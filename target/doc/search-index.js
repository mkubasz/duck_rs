var N=null,E="",T="t",U="u",searchIndex={};
var R=["Integer","element","dataframe","series","Get selected column by using label name","option","contains","duck::types","result","duck::element","try_from","try_into","borrow_mut","duck::dataframe","to_owned","clone_into","type_id","duck::series","borrow","typeid","drop_idx","read_csv","get_dummies","from_vec","formatter","DataTypes","DataFrame","DataFrameImpl","DataFrameScienceImpl","SeriesImpl"];

searchIndex["duck"]={"doc":E,"i":[[0,"types","duck",E,N,N],[4,R[25],R[7],E,N,N],[13,R[0],E,E,0,N],[13,"Text",E,E,0,N],[13,"Float",E,E,0,N],[13,"Bool",E,E,0,N],[6,"DInteger",E,E,N,N],[6,"DFloat",E,E,N,N],[0,R[1],"duck",E,N,N],[4,"Element",R[9],"Basic elementary cell in data frame",N,N],[13,"Text",E,E,1,N],[13,R[0],E,E,1,N],[13,"Float",E,E,1,N],[13,"Bool",E,E,1,N],[11,"data_type",E,E,1,[[["self"]],["datatypes"]]],[0,"macros","duck",E,N,N],[0,R[2],E,E,N,N],[3,R[26],R[13],E,N,N],[12,"size",E,E,2,N],[8,R[27],E,E,N,N],[10,"new",E,E,3,[[["vec",["str"]],["vec",["vec"]],["vec",[R[1]]],["str"]],[R[2]]]],[10,"push",E,E,3,[[["self"],[R[1]],["vec",[R[1]]]]]],[10,R[3],E,E,3,[[["self"],["usize"]],[R[3]]]],[10,"by",E,R[4],3,[[["self"],["str"]],[[R[5],[R[3]]],[R[3]]]]],[10,"many",E,R[4],3,[[["self"],["str"],["vec",["str"]]],[["vec",[R[3]]],[R[3],[R[1]]]]]],[10,"map",E,E,3,[[["self"],["u32"],["hashmap",["str","u32"]],["str"]],[R[2]]]],[10,"concat",E,"Concatenate two data frames",3,[[["self"],[R[2]]],[R[2]]]],[10,"drop",E,"Drop column by label from Data Frame",3,[[["self"],["str"],["vec",["str"]]],[[R[5],[R[2]]],[R[2]]]]],[10,R[20],E,"Drop column by position from Data Frame",3,[[["self"],["usize"]],[[R[5],[R[2]]],[R[2]]]]],[10,R[6],E,E,3,[[["str"]],["bool"]]],[10,R[21],E,E,3,[[["string"]],[[R[8],[R[2],"box"]],[R[2]],["box",["error"]]]]],[8,R[28],E,E,N,N],[10,R[22],E,"One hot encoding - Convert string values to binary value",4,[[["self"],["str"]],[R[2]]]],[10,R[23],E,E,4,[[["vec",["vec"]],["vec"],["str"],["vec",["str"]]],[R[2]]]],[0,R[3],"duck",E,N,N],[3,"Series",R[17],E,N,N],[12,"label",E,E,5,N],[12,"data",E,E,5,N],[4,"TSeries",E,E,N,N],[13,"Text",E,E,6,N],[13,"Number",E,E,6,N],[13,"Float",E,E,6,N],[13,"Bool",E,E,6,N],[8,R[29],E,E,N,N],[10,"new",E,E,7,[[],[[R[1]],[R[3],[R[1]]]]]],[10,"push",E,E,7,[[["self"],[R[1]]]]],[10,"unique",E,E,7,[[["self"]],[[R[1]],[R[3],[R[1]]]]]],[10,R[6],E,E,7,[[["str"]],["bool"]]],[0,"tests","duck",E,N,N],[0,"tests_dataframe","duck::tests",E,N,N],[0,"utils","duck",E,N,N],[0,"math","duck::utils",E,N,N],[14,"row","duck",E,N,N],[11,"into",R[7],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[10],E,E,0,[[[U]],[R[8]]]],[11,R[11],E,E,0,[[],[R[8]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[R[19]]]],[11,"into",R[9],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"],[T]]]],[11,R[10],E,E,1,[[[U]],[R[8]]]],[11,R[11],E,E,1,[[],[R[8]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[R[19]]]],[11,"into",R[13],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[14],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"],[T]]]],[11,R[10],E,E,2,[[[U]],[R[8]]]],[11,R[11],E,E,2,[[],[R[8]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[R[19]]]],[11,"into",R[17],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[14],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"],[T]]]],[11,R[10],E,E,5,[[[U]],[R[8]]]],[11,R[11],E,E,5,[[],[R[8]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[R[19]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[14],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"],[T]]]],[11,R[10],E,E,6,[[[U]],[R[8]]]],[11,R[11],E,E,6,[[],[R[8]]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[18],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[R[19]]]],[11,"new",R[13],E,2,[[["vec",["str"]],["vec",["vec"]],["vec",[R[1]]],["str"]],[R[2]]]],[11,"push",E,E,2,[[["self"],[R[1]],["vec",[R[1]]]]]],[11,R[3],E,E,2,[[["self"],["usize"]],[R[3]]]],[11,"by",E,E,2,[[["self"],["str"]],[[R[5],[R[3]]],[R[3]]]]],[11,"many",E,E,2,[[["self"],["str"],["vec",["str"]]],[["vec",[R[3]]],[R[3],[R[1]]]]]],[11,"map",E,E,2,[[["self"],["u32"],["hashmap",["str","u32"]],["str"]],[R[2]]]],[11,"concat",E,E,2,[[["self"],[R[2]]],[R[2]]]],[11,"drop",E,E,2,[[["self"],["str"],["vec",["str"]]],[[R[5],[R[2]]],[R[2]]]]],[11,R[20],E,E,2,[[["self"],["usize"]],[[R[5],[R[2]]],[R[2]]]]],[11,R[6],E,E,2,[[["str"]],["bool"]]],[11,R[21],E,E,2,[[["string"]],[[R[8],[R[2],"box"]],[R[2]],["box",["error"]]]]],[11,R[22],E,E,2,[[["self"],["str"]],[R[2]]]],[11,R[23],E,E,2,[[["vec",["vec"]],["vec"],["str"],["vec",["str"]]],[R[2]]]],[11,"new",R[17],E,5,[[],[[R[1]],[R[3],[R[1]]]]]],[11,"push",E,E,5,[[["self"],[R[1]]]]],[11,"unique",E,E,5,[[["self"]],[[R[1]],[R[3],[R[1]]]]]],[11,R[6],E,E,5,[[["str"]],["bool"]]],[11,"into",R[9],E,1,[[],["string"]]],[11,"into",E,E,1,[[],["u32"]]],[11,"into",E,E,1,[[],["f32"]]],[11,"into",E,E,1,[[],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[13],E,2,[[["self"]],[R[2]]]],[11,"clone",R[17],E,5,[[["self"]],[R[3]]]],[11,"clone",E,E,6,[[["self"]],["tseries"]]],[11,"from",R[9],E,1,[[["string"]],["self"]]],[11,"from",E,E,1,[[["dinteger"]],["self"]]],[11,"from",E,E,1,[[["dfloat"]],["self"]]],[11,"from",E,E,1,[[["bool"]],["self"]]],[11,"from",E,E,1,[[["str"]],["self"]]],[11,"eq",E,E,1,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[1]]],["bool"]]],[11,"fmt",R[7],E,0,[[["self"],[R[24]]],[R[8]]]],[11,"fmt",R[9],E,1,[[["self"],[R[24]]],[R[8]]]],[11,"fmt",R[13],E,2,[[["self"],[R[24]]],[R[8]]]],[11,"fmt",R[17],E,5,[[["self"],[R[24]]],[R[8]]]],[11,"fmt",E,E,6,[[["self"],[R[24]]],[R[8]]]],[11,"index",R[13],E,2,[[["self"],["str"]]]],[11,"index",E,E,2,[[["self"],["usize"]]]],[11,"index_mut",E,E,2,[[["self"],["usize"]]]]],"p":[[4,R[25]],[4,"Element"],[3,R[26]],[8,R[27]],[8,R[28]],[3,"Series"],[4,"TSeries"],[8,R[29]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);